!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.5	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
AutoDiff	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	/^struct AutoDiff {$/;"	s	namespace:ceres::internal
CERES_MAKE_1ST_ORDER_PERTURBATION	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	239;"	d
CERES_MAKE_1ST_ORDER_PERTURBATION	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	256;"	d
CERES_PUBLIC_INTERNAL_AUTODIFF_H_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	141;"	d
CERES_TAKE_1ST_ORDER_PERTURBATION	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	266;"	d
CERES_TAKE_1ST_ORDER_PERTURBATION	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	286;"	d
Differentiate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	/^  static bool Differentiate(const Functor& functor,$/;"	f	struct:ceres::internal::AutoDiff
Make1stOrderPerturbation	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	/^inline void Make1stOrderPerturbation(int offset, const T* src, JetT* dst) {$/;"	f	namespace:ceres::internal
Take0thOrderPart	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	/^inline void Take0thOrderPart(int M, const JetT *src, T dst) {$/;"	f	namespace:ceres::internal
Take1stOrderPart	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	/^inline void Take1stOrderPart(const int M, const JetT *src, T *dst) {$/;"	f	namespace:ceres::internal
ceres	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	/^namespace ceres {$/;"	n
internal	trunk/EXTERNAL/g2o/EXTERNAL/ceres/autodiff.h	/^namespace internal {$/;"	n	namespace:ceres
CERES_INTERNAL_EIGEN_H_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	32;"	d
ColMajorMatrix	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^                      Eigen::ColMajor> ColMajorMatrix;$/;"	t	namespace:ceres
ColMajorMatrixRef	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^                   Eigen::Stride<Eigen::Dynamic, 1> > ColMajorMatrixRef;$/;"	t	namespace:ceres
ConstColMajorMatrixRef	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^                   Eigen::Stride<Eigen::Dynamic, 1> > ConstColMajorMatrixRef;$/;"	t	namespace:ceres
ConstMatrixRef	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^  ConstMatrixRef;$/;"	t	struct:ceres::EigenTypes
ConstMatrixRef	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^typedef Eigen::Map<const Matrix> ConstMatrixRef;$/;"	t	namespace:ceres
ConstVectorRef	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^  ConstVectorRef;$/;"	t	struct:ceres::EigenTypes
ConstVectorRef	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^typedef Eigen::Map<const Vector> ConstVectorRef;$/;"	t	namespace:ceres
EigenTypes	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^struct EigenTypes {$/;"	s	namespace:ceres
Matrix	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^                      Eigen::RowMajor> Matrix;$/;"	t	namespace:ceres
Matrix	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^  Matrix;$/;"	t	struct:ceres::EigenTypes
MatrixRef	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^  MatrixRef;$/;"	t	struct:ceres::EigenTypes
MatrixRef	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^typedef Eigen::Map<Matrix> MatrixRef;$/;"	t	namespace:ceres
Vector	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^  Vector;$/;"	t	struct:ceres::EigenTypes
Vector	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^typedef Eigen::Matrix<double, Eigen::Dynamic, 1> Vector;$/;"	t	namespace:ceres
VectorRef	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^  VectorRef;$/;"	t	struct:ceres::EigenTypes
VectorRef	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^typedef Eigen::Map<Vector> VectorRef;$/;"	t	namespace:ceres
ceres	trunk/EXTERNAL/g2o/EXTERNAL/ceres/eigen.h	/^namespace ceres {$/;"	n
CERES_PUBLIC_INTERNAL_FIXED_ARRAY_H_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	33;"	d
FixedArray	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^class FixedArray {$/;"	c	namespace:ceres::internal
FixedArray	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^inline FixedArray<T, S>::FixedArray(typename FixedArray<T, S>::size_type n)$/;"	f	class:ceres::internal::FixedArray
InnerContainer	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  struct InnerContainer {$/;"	s	class:ceres::internal::FixedArray
S1	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  static const size_type S1 = ((inline_elements < 0)$/;"	m	class:ceres::internal::FixedArray
S2	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  static const size_type S2 = (S1 <= 0) ? 1 : S1;$/;"	m	class:ceres::internal::FixedArray
array_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  InnerContainer* const array_;$/;"	m	class:ceres::internal::FixedArray
begin	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  inline const_iterator begin() const { return &array_[0].element; }$/;"	f	class:ceres::internal::FixedArray
begin	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  inline iterator begin() { return &array_[0].element; }$/;"	f	class:ceres::internal::FixedArray
ceres	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^namespace ceres {$/;"	n
const_iterator	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  typedef T const* const_iterator;$/;"	t	class:ceres::internal::FixedArray
const_reference	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  typedef T const& const_reference;$/;"	t	class:ceres::internal::FixedArray
difference_type	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  typedef std::ptrdiff_t difference_type;$/;"	t	class:ceres::internal::FixedArray
element	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^    T element;$/;"	m	struct:ceres::internal::FixedArray::InnerContainer
end	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  inline const_iterator end() const { return &array_[size_].element; }$/;"	f	class:ceres::internal::FixedArray
end	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  inline iterator end() { return &array_[size_].element; }$/;"	f	class:ceres::internal::FixedArray
get	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  inline T* get() { return &array_[0].element; }$/;"	f	class:ceres::internal::FixedArray
get	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  inline const T* get() const { return &array_[0].element; }$/;"	f	class:ceres::internal::FixedArray
inline_space_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  ManualConstructor<InnerContainer> inline_space_[kInlineElements];$/;"	m	class:ceres::internal::FixedArray
internal	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^namespace internal {$/;"	n	namespace:ceres
iterator	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  typedef T* iterator;$/;"	t	class:ceres::internal::FixedArray
kInlineElements	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  static const size_type kInlineElements = S2;$/;"	m	class:ceres::internal::FixedArray
memsize	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  inline size_t memsize() const { return size_ * sizeof(T); }$/;"	f	class:ceres::internal::FixedArray
operator []	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  inline T& operator[](size_type i) {$/;"	f	class:ceres::internal::FixedArray
operator []	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  inline const T& operator[](size_type i) const {$/;"	f	class:ceres::internal::FixedArray
pointer	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  typedef T* pointer;$/;"	t	class:ceres::internal::FixedArray
reference	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  typedef T& reference;$/;"	t	class:ceres::internal::FixedArray
size	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  inline size_type size() const { return size_; }$/;"	f	class:ceres::internal::FixedArray
size_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  size_type const       size_;$/;"	m	class:ceres::internal::FixedArray
size_type	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  typedef size_t size_type;$/;"	t	class:ceres::internal::FixedArray
ssize_t	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^   typedef __int64      ssize_t;$/;"	t	namespace:ceres::internal
value_type	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^  typedef T value_type;$/;"	t	class:ceres::internal::FixedArray
~FixedArray	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fixed_array.h	/^inline FixedArray<T, S>::~FixedArray() {$/;"	f	class:ceres::internal::FixedArray
CERES_PUBLIC_FPCLASSIFY_H_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fpclassify.h	38;"	d
IsFinite	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fpclassify.h	/^inline bool IsFinite  (double x) { return _finite(x);                }$/;"	f	namespace:ceres
IsInfinite	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fpclassify.h	/^inline bool IsInfinite(double x) { return !_finite(x) && !_isnan(x); }$/;"	f	namespace:ceres
IsNaN	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fpclassify.h	/^inline bool IsNaN     (double x) { return _isnan(x);                 }$/;"	f	namespace:ceres
IsNormal	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fpclassify.h	/^inline bool IsNormal  (double x) {$/;"	f	namespace:ceres
ceres	trunk/EXTERNAL/g2o/EXTERNAL/ceres/fpclassify.h	/^namespace ceres {$/;"	n
AddCost	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^    AddCost = 1,$/;"	e	enum:Eigen::NumTraits::<anonymous>
CERES_DEFINE_JET_COMPARISON_OPERATOR	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	381;"	d
CERES_DEFINE_JET_COMPARISON_OPERATOR	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	400;"	d
CERES_PUBLIC_JET_H_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	157;"	d
DIMENSION	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  enum { DIMENSION = N };$/;"	e	enum:ceres::Jet::<anonymous>
Eigen	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^namespace Eigen {$/;"	n
HasFloatingPoint	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^    HasFloatingPoint = 1$/;"	e	enum:Eigen::NumTraits::<anonymous>
IsComplex	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^    IsComplex = 0,$/;"	e	enum:Eigen::NumTraits::<anonymous>
IsFinite	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^bool IsFinite(const Jet<T, N>& f) {$/;"	f	namespace:ceres
IsInfinite	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^bool IsInfinite(const Jet<T, N>& f) {$/;"	f	namespace:ceres
IsInteger	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^    IsInteger = 0,$/;"	e	enum:Eigen::NumTraits::<anonymous>
IsNaN	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^bool IsNaN(const Jet<T, N>& f) {$/;"	f	namespace:ceres
IsNormal	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^bool IsNormal(const Jet<T, N>& f) {$/;"	f	namespace:ceres
IsSigned	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^    IsSigned,$/;"	e	enum:Eigen::NumTraits::<anonymous>
Jet	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  Jet() : a() {$/;"	f	struct:ceres::Jet
Jet	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  Jet(const T& value, int k) {$/;"	f	struct:ceres::Jet
Jet	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  explicit Jet(const T& value) {$/;"	f	struct:ceres::Jet
Jet	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^struct Jet {$/;"	s	namespace:ceres
MulCost	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^    MulCost = 3,$/;"	e	enum:Eigen::NumTraits::<anonymous>
Nested	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  typedef ceres::Jet<T, N> Nested;$/;"	t	struct:Eigen::NumTraits
NonInteger	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  typedef ceres::Jet<T, N> NonInteger;$/;"	t	struct:Eigen::NumTraits
NumTraits	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^struct NumTraits<ceres::Jet<T, N> > {$/;"	s	namespace:Eigen
ReadCost	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^    ReadCost = 1,$/;"	e	enum:Eigen::NumTraits::<anonymous>
Real	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  typedef ceres::Jet<T, N> Real;$/;"	t	struct:Eigen::NumTraits
a	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  T a;$/;"	m	struct:ceres::Jet
abs	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> abs(const Jet<T, N>& f) {$/;"	f	namespace:ceres
abs	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double abs     (double x) { return std::abs(x);      }$/;"	f	namespace:ceres
acos	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> acos(const Jet<T, N>& f) {$/;"	f	namespace:ceres
acos	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double acos    (double x) { return std::acos(x);     }$/;"	f	namespace:ceres
asin	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> asin(const Jet<T, N>& f) {$/;"	f	namespace:ceres
asin	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double asin    (double x) { return std::asin(x);     }$/;"	f	namespace:ceres
atan	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> atan(const Jet<T, N>& f) {$/;"	f	namespace:ceres
atan	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double atan    (double x) { return std::atan(x);     }$/;"	f	namespace:ceres
atan2	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> atan2(const Jet<T, N>& g, const Jet<T, N>& f) {$/;"	f	namespace:ceres
atan2	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double atan2(double y, double x) { return std::atan2(y, x); }$/;"	f	namespace:ceres
ceres	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^namespace ceres {$/;"	n
cos	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> cos(const Jet<T, N>& f) {$/;"	f	namespace:ceres
cos	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double cos     (double x) { return std::cos(x);      }$/;"	f	namespace:ceres
cosh	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> cosh(const Jet<T, N>& f) {$/;"	f	namespace:ceres
cosh	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double cosh    (double x) { return std::cosh(x);     }$/;"	f	namespace:ceres
dummy_precision	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  static typename ceres::Jet<T, N> dummy_precision() {$/;"	f	struct:Eigen::NumTraits
ei_abs	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_abs (const Jet<T, N>& x) { return fabs(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_abs2	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_abs2(const Jet<T, N>& x) { return x * x;          }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_atan	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_atan(const Jet<T, N>& x) { return atan(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_conj	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline const Jet<T, N>& ei_conj(const Jet<T, N>& x) { return x;              }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_cos	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_cos (const Jet<T, N>& x) { return cos(x);         }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_cosh	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_cosh(const Jet<T, N>& x) { return cosh(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_exp	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_exp (const Jet<T, N>& x) { return exp(x);         }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_imag	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_imag(const Jet<T, N>&  ) { return Jet<T, N>(0.0); }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_log	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_log (const Jet<T, N>& x) { return log(x);         }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_pow	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_pow (const Jet<T, N>& x, Jet<T, N> y) { return pow(x, y); }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_real	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline const Jet<T, N>& ei_real(const Jet<T, N>& x) { return x;              }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_sin	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_sin (const Jet<T, N>& x) { return sin(x);         }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_sinh	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_sinh(const Jet<T, N>& x) { return sinh(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_sqrt	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_sqrt(const Jet<T, N>& x) { return sqrt(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_tan	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_tan (const Jet<T, N>& x) { return tan(x);         }  \/\/ NOLINT$/;"	f	namespace:ceres
ei_tanh	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^template<typename T, int N> inline       Jet<T, N>  ei_tanh(const Jet<T, N>& x) { return tanh(x);        }  \/\/ NOLINT$/;"	f	namespace:ceres
exp	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> exp(const Jet<T, N>& f) {$/;"	f	namespace:ceres
exp	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double exp     (double x) { return std::exp(x);      }$/;"	f	namespace:ceres
log	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> log(const Jet<T, N>& f) {$/;"	f	namespace:ceres
log	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double log     (double x) { return std::log(x);      }$/;"	f	namespace:ceres
operator *	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator*(T s, const Jet<T, N>& f) {$/;"	f	namespace:ceres
operator *	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator*(const Jet<T, N>& f, T s) {$/;"	f	namespace:ceres
operator *	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator*(const Jet<T, N>& f,$/;"	f	namespace:ceres
operator *=	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  Jet<T, N>& operator*=(const Jet<T, N> &y) {$/;"	f	struct:ceres::Jet
operator +	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> const& operator+(const Jet<T, N>& f) {$/;"	f	namespace:ceres
operator +	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator+(T s, const Jet<T, N>& f) {$/;"	f	namespace:ceres
operator +	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator+(const Jet<T, N>& f, T s) {$/;"	f	namespace:ceres
operator +	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator+(const Jet<T, N>& f,$/;"	f	namespace:ceres
operator +=	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  Jet<T, N>& operator+=(const Jet<T, N> &y) {$/;"	f	struct:ceres::Jet
operator -	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator-(T s, const Jet<T, N>& f) {$/;"	f	namespace:ceres
operator -	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator-(const Jet<T, N>& f, T s) {$/;"	f	namespace:ceres
operator -	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator-(const Jet<T, N>& f,$/;"	f	namespace:ceres
operator -	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator-(const Jet<T, N>&f) {$/;"	f	namespace:ceres
operator -=	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  Jet<T, N>& operator-=(const Jet<T, N> &y) {$/;"	f	struct:ceres::Jet
operator /	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator\/(T s, const Jet<T, N>& g) {$/;"	f	namespace:ceres
operator /	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator\/(const Jet<T, N>& f, T s) {$/;"	f	namespace:ceres
operator /	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> operator\/(const Jet<T, N>& f,$/;"	f	namespace:ceres
operator /=	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  Jet<T, N>& operator\/=(const Jet<T, N> &y) {$/;"	f	struct:ceres::Jet
operator <<	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline std::ostream &operator<<(std::ostream &s, const Jet<T, N>& z) {$/;"	f	namespace:ceres
pow	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> pow(const Jet<T, N>& f, const Jet<T, N>& g) {$/;"	f	namespace:ceres
pow	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> pow(const Jet<T, N>& f, double g) {$/;"	f	namespace:ceres
pow	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> pow(double f, const Jet<T, N>& g) {$/;"	f	namespace:ceres
pow	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double pow  (double x, double y) { return std::pow(x, y);   }$/;"	f	namespace:ceres
sin	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> sin(const Jet<T, N>& f) {$/;"	f	namespace:ceres
sin	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double sin     (double x) { return std::sin(x);      }$/;"	f	namespace:ceres
sinh	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> sinh(const Jet<T, N>& f) {$/;"	f	namespace:ceres
sinh	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double sinh    (double x) { return std::sinh(x);     }$/;"	f	namespace:ceres
sqrt	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> sqrt(const Jet<T, N>& f) {$/;"	f	namespace:ceres
sqrt	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double sqrt    (double x) { return std::sqrt(x);     }$/;"	f	namespace:ceres
tan	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> tan(const Jet<T, N>& f) {$/;"	f	namespace:ceres
tan	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double tan     (double x) { return std::tan(x);      }$/;"	f	namespace:ceres
tanh	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^Jet<T, N> tanh(const Jet<T, N>& f) {$/;"	f	namespace:ceres
tanh	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^inline double tanh    (double x) { return std::tanh(x);     }$/;"	f	namespace:ceres
v	trunk/EXTERNAL/g2o/EXTERNAL/ceres/jet.h	/^  Eigen::Matrix<T, N, 1, Eigen::DontAlign> v;$/;"	m	struct:ceres::Jet
CERES_ALIGN_ATTRIBUTE	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	164;"	d
CERES_ALIGN_ATTRIBUTE	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	167;"	d
CERES_ALIGN_OF	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	165;"	d
CERES_ALIGN_OF	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	168;"	d
CERES_ARRAYSIZE	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	138;"	d
CERES_DISALLOW_COPY_AND_ASSIGN	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	52;"	d
CERES_DISALLOW_IMPLICIT_CONSTRUCTORS	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	62;"	d
CERES_PUBLIC_INTERNAL_MACROS_H_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	37;"	d
MUST_USE_RESULT	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	148;"	d
MUST_USE_RESULT	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	151;"	d
MUST_USE_RESULT	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	153;"	d
arraysize	trunk/EXTERNAL/g2o/EXTERNAL/ceres/macros.h	91;"	d
AlignType	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^template<int alignment, int size> struct AlignType { };$/;"	s	namespace:ceres::internal
AlignType	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^template<int size> struct AlignType<0, size> { typedef char result[size]; };$/;"	s	namespace:ceres::internal
CERES_ALIGNED_CHAR_ARRAY	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	203;"	d
CERES_ALIGNED_CHAR_ARRAY	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	59;"	d
CERES_ALIGNED_CHAR_ARRAY	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	85;"	d
CERES_ALIGN_TYPE_TEMPLATE	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	62;"	d
CERES_ALIGN_TYPE_TEMPLATE	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	83;"	d
CERES_PUBLIC_INTERNAL_MANUAL_CONSTRUCTOR_H_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	41;"	d
Destroy	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline void Destroy() {$/;"	f	class:ceres::internal::ManualConstructor
Init	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline void Init() {$/;"	f	class:ceres::internal::ManualConstructor
Init	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline void Init(const T1& p1) {$/;"	f	class:ceres::internal::ManualConstructor
Init	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline void Init(const T1& p1, const T2& p2) {$/;"	f	class:ceres::internal::ManualConstructor
Init	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline void Init(const T1& p1, const T2& p2, const T3& p3) {$/;"	f	class:ceres::internal::ManualConstructor
Init	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline void Init(const T1& p1, const T2& p2, const T3& p3, const T4& p4) {$/;"	f	class:ceres::internal::ManualConstructor
Init	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline void Init(const T1& p1, const T2& p2, const T3& p3, const T4& p4,$/;"	f	class:ceres::internal::ManualConstructor
ManualConstructor	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^class ManualConstructor {$/;"	c	namespace:ceres::internal
ceres	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^namespace ceres {$/;"	n
get	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline Type* get() {$/;"	f	class:ceres::internal::ManualConstructor
get	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline const Type* get() const  {$/;"	f	class:ceres::internal::ManualConstructor
internal	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^namespace internal {$/;"	n	namespace:ceres
operator *	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline Type& operator*() { return *get(); }$/;"	f	class:ceres::internal::ManualConstructor
operator *	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline const Type& operator*() const { return *get(); }$/;"	f	class:ceres::internal::ManualConstructor
operator ->	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline Type* operator->() { return get(); }$/;"	f	class:ceres::internal::ManualConstructor
operator ->	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline const Type* operator->() const { return get(); }$/;"	f	class:ceres::internal::ManualConstructor
result	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^template<int size> struct AlignType<0, size> { typedef char result[size]; };$/;"	t	struct:ceres::internal::AlignType
space	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  inline void* space() {$/;"	f	class:ceres::internal::ManualConstructor
space_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/manual_constructor.h	/^  CERES_ALIGNED_CHAR_ARRAY(Type, 1) space_;$/;"	m	class:ceres::internal::ManualConstructor
CERES_PUBLIC_INTERNAL_VARIADIC_EVALUATE_H_	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	33;"	d
Call	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^  static bool Call(const Functor& functor, T const *const *input, T* output) {$/;"	f	struct:ceres::internal::VariadicEvaluate
VariadicEvaluate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^struct VariadicEvaluate {$/;"	s	namespace:ceres::internal
VariadicEvaluate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, 0, 0, 0, 0, 0, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, 0, 0, 0, 0, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, 0, 0, 0, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, 0, 0, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, 0, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, N5, 0, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, N5, N6, 0, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, 0, 0> {$/;"	s	namespace:ceres::internal
VariadicEvaluate	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^struct VariadicEvaluate<Functor, T, N0, N1, N2, N3, N4, N5, N6, N7, N8, 0> {$/;"	s	namespace:ceres::internal
ceres	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^namespace ceres {$/;"	n
internal	trunk/EXTERNAL/g2o/EXTERNAL/ceres/variadic_evaluate.h	/^namespace internal {$/;"	n	namespace:ceres
B	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    double *B ;     \/* beta [0..n-1] for QR *\/$/;"	m	struct:cs_numeric
CS_COPYRIGHT	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	15;"	d
CS_CSC	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	171;"	d
CS_DATE	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	14;"	d
CS_FLIP	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	167;"	d
CS_MARK	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	170;"	d
CS_MARKED	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	169;"	d
CS_MAX	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	165;"	d
CS_MIN	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	166;"	d
CS_SUBSUB	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	13;"	d
CS_SUBVER	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	12;"	d
CS_TRIPLET	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	172;"	d
CS_UNFLIP	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	168;"	d
CS_VER	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	11;"	d
L	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    cs *L ;         \/* L for LU and Cholesky, V for QR *\/$/;"	m	struct:cs_numeric
U	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    cs *U ;         \/* U for LU, R for QR, not used for Cholesky *\/$/;"	m	struct:cs_numeric
_CS_H	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	2;"	d
cc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi cc [5] ;    \/* coarse column decomposition *\/$/;"	m	struct:cs_dmperm_results
cp	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *cp ;       \/* column pointers for Cholesky, row counts for QR *\/$/;"	m	struct:cs_symbolic
cs	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^} cs ;$/;"	t
cs_dmperm_results	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^typedef struct cs_dmperm_results    \/* cs_dmperm or cs_scc output *\/$/;"	s
cs_numeric	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^typedef struct cs_numeric   \/* numeric Cholesky, LU, or QR factorization *\/$/;"	s
cs_sparse	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^typedef struct cs_sparse    \/* matrix in compressed-column or triplet form *\/$/;"	s
cs_symbolic	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^typedef struct cs_symbolic  \/* symbolic Cholesky, LU, or QR analysis *\/$/;"	s
csd	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^} csd ;$/;"	t
csi	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	26;"	d
csi	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	38;"	d
csi	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	39;"	d
csi	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	42;"	d
csn	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^} csn ;$/;"	t
css	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^} css ;$/;"	t
i	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *i ;        \/* row indices, size nzmax *\/$/;"	m	struct:cs_sparse
leftmost	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *leftmost ; \/* leftmost[i] = min(find(A(i,:))), for QR *\/$/;"	m	struct:cs_symbolic
lnz	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    double lnz ;    \/* # entries in L for LU or Cholesky; in V for QR *\/$/;"	m	struct:cs_symbolic
m	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi m ;         \/* number of rows *\/$/;"	m	struct:cs_sparse
m2	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi m2 ;        \/* # of rows for QR, after adding fictitious rows *\/$/;"	m	struct:cs_symbolic
n	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi n ;         \/* number of columns *\/$/;"	m	struct:cs_sparse
nb	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi nb ;        \/* # of blocks in fine dmperm decomposition *\/$/;"	m	struct:cs_dmperm_results
nz	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi nz ;        \/* # of entries in triplet matrix, -1 for compressed-col *\/$/;"	m	struct:cs_sparse
nzmax	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi nzmax ;     \/* maximum number of entries *\/$/;"	m	struct:cs_sparse
p	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *p ;        \/* column pointers (size n+1) or col indices (size nzmax) *\/$/;"	m	struct:cs_sparse
p	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *p ;        \/* size m, row permutation *\/$/;"	m	struct:cs_dmperm_results
parent	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *parent ;   \/* elimination tree for Cholesky and QR *\/$/;"	m	struct:cs_symbolic
pinv	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *pinv ;     \/* inverse row perm. for QR, fill red. perm for Chol *\/$/;"	m	struct:cs_symbolic
pinv	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *pinv ;     \/* partial pivoting for LU *\/$/;"	m	struct:cs_numeric
q	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *q ;        \/* fill-reducing column permutation for LU and QR *\/$/;"	m	struct:cs_symbolic
q	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *q ;        \/* size n, column permutation *\/$/;"	m	struct:cs_dmperm_results
r	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *r ;        \/* size nb+1, block k is rows r[k] to r[k+1]-1 in A(p,q) *\/$/;"	m	struct:cs_dmperm_results
rr	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi rr [5] ;    \/* coarse row decomposition *\/$/;"	m	struct:cs_dmperm_results
s	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    csi *s ;        \/* size nb+1, block k is cols s[k] to s[k+1]-1 in A(p,q) *\/$/;"	m	struct:cs_dmperm_results
unz	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    double unz ;    \/* # entries in U for LU; in R for QR *\/$/;"	m	struct:cs_symbolic
x	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs.h	/^    double *x ;     \/* numerical values, size nzmax *\/$/;"	m	struct:cs_sparse
cs_add	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_add.c	/^cs *cs_add (const cs *A, const cs *B, double alpha, double beta)$/;"	f
cs_amd	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_amd.c	/^csi *cs_amd (csi order, const cs *A)  \/* order 0:natural, 1:Chol, 2:LU, 3:QR *\/$/;"	f
cs_diag	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_amd.c	/^static csi cs_diag (csi i, csi j, double aij, void *other) { return (i != j) ; }$/;"	f	file:
cs_wclear	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_amd.c	/^static csi cs_wclear (csi mark, csi lemax, csi *w, csi n)$/;"	f	file:
G2O_CSPARSE_API	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_api.h	36;"	d
G2O_CSPARSE_API	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_api.h	38;"	d
G2O_CSPARSE_API	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_api.h	41;"	d
G2O_CSPARSE_API	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_api.h	46;"	d
G2O_CSPARSE_API_H	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_api.h	27;"	d
cs_chol	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_chol.c	/^csn *cs_chol (const cs *A, const css *S)$/;"	f
cs_cholsol	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_cholsol.c	/^csi cs_cholsol (csi order, const cs *A, double *b)$/;"	f
cs_compress	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_compress.c	/^cs *cs_compress (const cs *T)$/;"	f
HEAD	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_counts.c	3;"	d	file:
NEXT	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_counts.c	4;"	d	file:
cs_counts	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_counts.c	/^csi *cs_counts (const cs *A, const csi *parent, const csi *post, csi ata)$/;"	f
init_ata	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_counts.c	/^static void init_ata (cs *AT, const csi *post, csi *w, csi **head, csi **next)$/;"	f	file:
cs_cumsum	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_cumsum.c	/^double cs_cumsum (csi *p, csi *c, csi n)$/;"	f
cs_dfs	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_dfs.c	/^csi cs_dfs (csi j, cs *G, csi top, csi *xi, csi *pstack, const csi *pinv)$/;"	f
cs_bfs	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_dmperm.c	/^static csi cs_bfs (const cs *A, csi n, csi *wi, csi *wj, csi *queue,$/;"	f	file:
cs_dmperm	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_dmperm.c	/^csd *cs_dmperm (const cs *A, csi seed)$/;"	f
cs_matched	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_dmperm.c	/^static void cs_matched (csi n, const csi *wj, const csi *imatch, csi *p, csi *q,$/;"	f	file:
cs_rprune	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_dmperm.c	/^static csi cs_rprune (csi i, csi j, double aij, void *other)$/;"	f	file:
cs_unmatched	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_dmperm.c	/^static void cs_unmatched (csi m, const csi *wi, csi *p, csi *rr, csi set)$/;"	f	file:
cs_droptol	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_droptol.c	/^csi cs_droptol (cs *A, double tol)$/;"	f
cs_tol	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_droptol.c	/^static csi cs_tol (csi i, csi j, double aij, void *tol)$/;"	f	file:
cs_dropzeros	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_dropzeros.c	/^csi cs_dropzeros (cs *A)$/;"	f
cs_nonzero	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_dropzeros.c	/^static csi cs_nonzero (csi i, csi j, double aij, void *other)$/;"	f	file:
cs_dupl	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_dupl.c	/^csi cs_dupl (cs *A)$/;"	f
cs_entry	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_entry.c	/^csi cs_entry (cs *T, csi i, csi j, double x)$/;"	f
cs_ereach	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_ereach.c	/^csi cs_ereach (const cs *A, csi k, const csi *parent, csi *s, csi *w)$/;"	f
cs_etree	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_etree.c	/^csi *cs_etree (const cs *A, csi ata)$/;"	f
cs_fkeep	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_fkeep.c	/^csi cs_fkeep (cs *A, csi (*fkeep) (csi, csi, double, void *), void *other)$/;"	f
cs_gaxpy	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_gaxpy.c	/^csi cs_gaxpy (const cs *A, const double *x, double *y)$/;"	f
cs_happly	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_happly.c	/^csi cs_happly (const cs *V, csi i, double beta, double *x)$/;"	f
cs_house	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_house.c	/^double cs_house (double *x, double *beta, csi n)$/;"	f
cs_ipvec	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_ipvec.c	/^csi cs_ipvec (const csi *p, const double *b, double *x, csi n)$/;"	f
cs_leaf	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_leaf.c	/^csi cs_leaf (csi i, csi j, const csi *first, csi *maxfirst, csi *prevleaf,$/;"	f
cs_load	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_load.c	/^cs *cs_load (FILE *f)$/;"	f
cs_lsolve	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_lsolve.c	/^csi cs_lsolve (const cs *L, double *x)$/;"	f
cs_ltsolve	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_ltsolve.c	/^csi cs_ltsolve (const cs *L, double *x)$/;"	f
cs_lu	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_lu.c	/^csn *cs_lu (const cs *A, const css *S, double tol)$/;"	f
cs_lusol	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_lusol.c	/^csi cs_lusol (csi order, const cs *A, double *b, double tol)$/;"	f
calloc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_malloc.c	6;"	d	file:
cs_calloc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_malloc.c	/^void *cs_calloc (csi n, size_t size)$/;"	f
cs_free	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_malloc.c	/^void *cs_free (void *p)$/;"	f
cs_malloc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_malloc.c	/^void *cs_malloc (csi n, size_t size)$/;"	f
cs_realloc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_malloc.c	/^void *cs_realloc (void *p, csi n, size_t size, csi *ok)$/;"	f
free	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_malloc.c	4;"	d	file:
malloc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_malloc.c	3;"	d	file:
realloc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_malloc.c	5;"	d	file:
cs_augment	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_maxtrans.c	/^static void cs_augment (csi k, const cs *A, csi *jmatch, csi *cheap, csi *w,$/;"	f	file:
cs_maxtrans	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_maxtrans.c	/^csi *cs_maxtrans (const cs *A, csi seed)  \/*[jmatch [0..m-1]; imatch [0..n-1]]*\/$/;"	f
cs_multiply	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_multiply.c	/^cs *cs_multiply (const cs *A, const cs *B)$/;"	f
cs_norm	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_norm.c	/^double cs_norm (const cs *A)$/;"	f
cs_permute	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_permute.c	/^cs *cs_permute (const cs *A, const csi *pinv, const csi *q, csi values)$/;"	f
cs_pinv	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_pinv.c	/^csi *cs_pinv (csi const *p, csi n)$/;"	f
cs_post	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_post.c	/^csi *cs_post (const csi *parent, csi n)$/;"	f
cs_print	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_print.c	/^csi cs_print (const cs *A, csi brief)$/;"	f
cs_pvec	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_pvec.c	/^csi cs_pvec (const csi *p, const double *b, double *x, csi n)$/;"	f
cs_qr	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_qr.c	/^csn *cs_qr (const cs *A, const css *S)$/;"	f
cs_qrsol	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_qrsol.c	/^csi cs_qrsol (csi order, const cs *A, double *b)$/;"	f
cs_randperm	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_randperm.c	/^csi *cs_randperm (csi n, csi seed)$/;"	f
cs_reach	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_reach.c	/^csi cs_reach (cs *G, const cs *B, csi k, csi *xi, const csi *pinv)$/;"	f
cs_scatter	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_scatter.c	/^csi cs_scatter (const cs *A, csi j, double beta, csi *w, double *x, csi mark,$/;"	f
cs_scc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_scc.c	/^csd *cs_scc (cs *A)     \/* matrix A temporarily modified, then restored *\/$/;"	f
cs_schol	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_schol.c	/^css *cs_schol (csi order, const cs *A)$/;"	f
cs_spsolve	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_spsolve.c	/^csi cs_spsolve (cs *G, const cs *B, csi k, csi *xi, double *x, const csi *pinv,$/;"	f
cs_sqr	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_sqr.c	/^css *cs_sqr (csi order, const cs *A, csi qr)$/;"	f
cs_vcount	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_sqr.c	/^static csi cs_vcount (const cs *A, css *S)$/;"	f	file:
cs_symperm	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_symperm.c	/^cs *cs_symperm (const cs *A, const csi *pinv, csi values)$/;"	f
cs_tdfs	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_tdfs.c	/^csi cs_tdfs (csi j, csi k, csi *head, const csi *next, csi *post, csi *stack)$/;"	f
cs_transpose	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_transpose.c	/^cs *cs_transpose (const cs *A, csi values)$/;"	f
cs_updown	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_updown.c	/^csi cs_updown (cs *L, csi sigma, const cs *C, const csi *parent)$/;"	f
cs_usolve	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_usolve.c	/^csi cs_usolve (const cs *U, double *x)$/;"	f
cs_dalloc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^csd *cs_dalloc (csi m, csi n)$/;"	f
cs_ddone	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^csd *cs_ddone (csd *D, cs *C, void *w, csi ok)$/;"	f
cs_dfree	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^csd *cs_dfree (csd *D)$/;"	f
cs_done	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^cs *cs_done (cs *C, void *w, void *x, csi ok)$/;"	f
cs_idone	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^csi *cs_idone (csi *p, cs *C, void *w, csi ok)$/;"	f
cs_ndone	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^csn *cs_ndone (csn *N, cs *C, void *w, void *x, csi ok)$/;"	f
cs_nfree	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^csn *cs_nfree (csn *N)$/;"	f
cs_sfree	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^css *cs_sfree (css *S)$/;"	f
cs_spalloc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^cs *cs_spalloc (csi m, csi n, csi nzmax, csi values, csi triplet)$/;"	f
cs_spfree	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^cs *cs_spfree (cs *A)$/;"	f
cs_sprealloc	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_util.c	/^csi cs_sprealloc (cs *A, csi nzmax)$/;"	f
cs_utsolve	trunk/EXTERNAL/g2o/EXTERNAL/csparse/cs_utsolve.c	/^csi cs_utsolve (const cs *U, double *x)$/;"	f
fghStrokeByID	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_font.cpp	/^static SFG_StrokeFont* fghStrokeByID(FontID font )$/;"	f	namespace:freeglut_minimal	file:
freeglut_minimal	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_font.cpp	/^namespace freeglut_minimal {$/;"	n	file:
freeglut_return_if_fail	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_font.cpp	31;"	d	file:
freeglut_return_val_if_fail	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_font.cpp	34;"	d	file:
glutStrokeHeight	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_font.cpp	/^GLfloat glutStrokeHeight( FontID fontID )$/;"	f	namespace:freeglut_minimal
glutStrokeLength	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_font.cpp	/^int glutStrokeLength( FontID fontID, const char* string_ )$/;"	f	namespace:freeglut_minimal
glutStrokeString	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_font.cpp	/^void glutStrokeString(FontID fontID, const char *string_)$/;"	f	namespace:freeglut_minimal
Characters	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    const SFG_StrokeChar** Characters;          \/* The characters mapping    *\/$/;"	m	struct:freeglut_minimal::tagSFG_StrokeFont
FontID	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^  enum FontID {$/;"	g	namespace:freeglut_minimal
G2O_FGAPI	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	36;"	d
G2O_FGAPI	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	38;"	d
G2O_FGAPI	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	41;"	d
GLUT_STROKE_MONO_ROMAN	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    GLUT_STROKE_MONO_ROMAN$/;"	e	enum:freeglut_minimal::FontID
GLUT_STROKE_ROMAN	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    GLUT_STROKE_ROMAN,$/;"	e	enum:freeglut_minimal::FontID
Height	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    GLfloat         Height;                     \/* Height of the characters  *\/$/;"	m	struct:freeglut_minimal::tagSFG_StrokeFont
Name	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    char*           Name;                       \/* The source font name      *\/$/;"	m	struct:freeglut_minimal::tagSFG_StrokeFont
Number	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    int             Number;$/;"	m	struct:freeglut_minimal::tagSFG_StrokeChar
Number	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    int             Number;$/;"	m	struct:freeglut_minimal::tagSFG_StrokeStrip
Quantity	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    int             Quantity;                   \/* Number of chars in font   *\/$/;"	m	struct:freeglut_minimal::tagSFG_StrokeFont
Right	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    GLfloat         Right;$/;"	m	struct:freeglut_minimal::tagSFG_StrokeChar
SFG_StrokeChar	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^  typedef struct tagSFG_StrokeChar SFG_StrokeChar;$/;"	t	namespace:freeglut_minimal
SFG_StrokeFont	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^  typedef struct tagSFG_StrokeFont SFG_StrokeFont;$/;"	t	namespace:freeglut_minimal
SFG_StrokeStrip	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^  typedef struct tagSFG_StrokeStrip SFG_StrokeStrip;$/;"	t	namespace:freeglut_minimal
SFG_StrokeVertex	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^  typedef struct tagSFG_StrokeVertex SFG_StrokeVertex;$/;"	t	namespace:freeglut_minimal
Strips	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    const SFG_StrokeStrip* Strips;$/;"	m	struct:freeglut_minimal::tagSFG_StrokeChar
Vertices	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    const SFG_StrokeVertex* Vertices;$/;"	m	struct:freeglut_minimal::tagSFG_StrokeStrip
X	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    GLfloat         X, Y;$/;"	m	struct:freeglut_minimal::tagSFG_StrokeVertex
Y	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^    GLfloat         X, Y;$/;"	m	struct:freeglut_minimal::tagSFG_StrokeVertex
__FREEGLUT_EXT_H__	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	2;"	d
freeglut_minimal	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^namespace freeglut_minimal {$/;"	n
tagSFG_StrokeChar	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^  struct tagSFG_StrokeChar$/;"	s	namespace:freeglut_minimal
tagSFG_StrokeFont	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^  struct tagSFG_StrokeFont$/;"	s	namespace:freeglut_minimal
tagSFG_StrokeStrip	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^  struct tagSFG_StrokeStrip$/;"	s	namespace:freeglut_minimal
tagSFG_StrokeVertex	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_minimal.h	/^  struct tagSFG_StrokeVertex$/;"	s	namespace:freeglut_minimal
ch100	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch100 = {104.762f,2,ch100st};$/;"	v	file:
ch100st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch100st[] =$/;"	v	file:
ch100st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch100st0[] =$/;"	v	file:
ch100st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch100st1[] =$/;"	v	file:
ch101	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch101 = {104.762f,1,ch101st};$/;"	v	file:
ch101st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch101st[] =$/;"	v	file:
ch101st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch101st0[] =$/;"	v	file:
ch102	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch102 = {104.762f,2,ch102st};$/;"	v	file:
ch102st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch102st[] =$/;"	v	file:
ch102st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch102st0[] =$/;"	v	file:
ch102st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch102st1[] =$/;"	v	file:
ch103	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch103 = {104.762f,2,ch103st};$/;"	v	file:
ch103st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch103st[] =$/;"	v	file:
ch103st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch103st0[] =$/;"	v	file:
ch103st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch103st1[] =$/;"	v	file:
ch104	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch104 = {104.762f,2,ch104st};$/;"	v	file:
ch104st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch104st[] =$/;"	v	file:
ch104st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch104st0[] =$/;"	v	file:
ch104st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch104st1[] =$/;"	v	file:
ch105	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch105 = {104.762f,2,ch105st};$/;"	v	file:
ch105st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch105st[] =$/;"	v	file:
ch105st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch105st0[] =$/;"	v	file:
ch105st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch105st1[] =$/;"	v	file:
ch106	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch106 = {104.762f,2,ch106st};$/;"	v	file:
ch106st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch106st[] =$/;"	v	file:
ch106st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch106st0[] =$/;"	v	file:
ch106st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch106st1[] =$/;"	v	file:
ch107	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch107 = {104.762f,3,ch107st};$/;"	v	file:
ch107st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch107st[] =$/;"	v	file:
ch107st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch107st0[] =$/;"	v	file:
ch107st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch107st1[] =$/;"	v	file:
ch107st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch107st2[] =$/;"	v	file:
ch108	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch108 = {104.762f,1,ch108st};$/;"	v	file:
ch108st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch108st[] =$/;"	v	file:
ch108st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch108st0[] =$/;"	v	file:
ch109	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch109 = {104.762f,3,ch109st};$/;"	v	file:
ch109st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch109st[] =$/;"	v	file:
ch109st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch109st0[] =$/;"	v	file:
ch109st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch109st1[] =$/;"	v	file:
ch109st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch109st2[] =$/;"	v	file:
ch110	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch110 = {104.762f,2,ch110st};$/;"	v	file:
ch110st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch110st[] =$/;"	v	file:
ch110st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch110st0[] =$/;"	v	file:
ch110st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch110st1[] =$/;"	v	file:
ch111	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch111 = {104.762f,1,ch111st};$/;"	v	file:
ch111st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch111st[] =$/;"	v	file:
ch111st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch111st0[] =$/;"	v	file:
ch112	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch112 = {104.762f,2,ch112st};$/;"	v	file:
ch112st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch112st[] =$/;"	v	file:
ch112st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch112st0[] =$/;"	v	file:
ch112st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch112st1[] =$/;"	v	file:
ch113	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch113 = {104.762f,2,ch113st};$/;"	v	file:
ch113st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch113st[] =$/;"	v	file:
ch113st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch113st0[] =$/;"	v	file:
ch113st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch113st1[] =$/;"	v	file:
ch114	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch114 = {104.762f,2,ch114st};$/;"	v	file:
ch114st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch114st[] =$/;"	v	file:
ch114st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch114st0[] =$/;"	v	file:
ch114st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch114st1[] =$/;"	v	file:
ch115	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch115 = {104.762f,1,ch115st};$/;"	v	file:
ch115st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch115st[] =$/;"	v	file:
ch115st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch115st0[] =$/;"	v	file:
ch116	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch116 = {104.762f,2,ch116st};$/;"	v	file:
ch116st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch116st[] =$/;"	v	file:
ch116st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch116st0[] =$/;"	v	file:
ch116st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch116st1[] =$/;"	v	file:
ch117	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch117 = {104.762f,2,ch117st};$/;"	v	file:
ch117st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch117st[] =$/;"	v	file:
ch117st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch117st0[] =$/;"	v	file:
ch117st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch117st1[] =$/;"	v	file:
ch118	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch118 = {104.762f,2,ch118st};$/;"	v	file:
ch118st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch118st[] =$/;"	v	file:
ch118st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch118st0[] =$/;"	v	file:
ch118st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch118st1[] =$/;"	v	file:
ch119	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch119 = {104.762f,4,ch119st};$/;"	v	file:
ch119st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch119st[] =$/;"	v	file:
ch119st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch119st0[] =$/;"	v	file:
ch119st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch119st1[] =$/;"	v	file:
ch119st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch119st2[] =$/;"	v	file:
ch119st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch119st3[] =$/;"	v	file:
ch120	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch120 = {104.762f,2,ch120st};$/;"	v	file:
ch120st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch120st[] =$/;"	v	file:
ch120st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch120st0[] =$/;"	v	file:
ch120st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch120st1[] =$/;"	v	file:
ch121	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch121 = {104.762f,2,ch121st};$/;"	v	file:
ch121st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch121st[] =$/;"	v	file:
ch121st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch121st0[] =$/;"	v	file:
ch121st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch121st1[] =$/;"	v	file:
ch122	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch122 = {104.762f,3,ch122st};$/;"	v	file:
ch122st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch122st[] =$/;"	v	file:
ch122st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch122st0[] =$/;"	v	file:
ch122st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch122st1[] =$/;"	v	file:
ch122st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch122st2[] =$/;"	v	file:
ch123	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch123 = {104.762f,3,ch123st};$/;"	v	file:
ch123st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch123st[] =$/;"	v	file:
ch123st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch123st0[] =$/;"	v	file:
ch123st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch123st1[] =$/;"	v	file:
ch123st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch123st2[] =$/;"	v	file:
ch124	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch124 = {104.762f,1,ch124st};$/;"	v	file:
ch124st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch124st[] =$/;"	v	file:
ch124st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch124st0[] =$/;"	v	file:
ch125	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch125 = {104.762f,3,ch125st};$/;"	v	file:
ch125st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch125st[] =$/;"	v	file:
ch125st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch125st0[] =$/;"	v	file:
ch125st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch125st1[] =$/;"	v	file:
ch125st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch125st2[] =$/;"	v	file:
ch126	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch126 = {104.762f,2,ch126st};$/;"	v	file:
ch126st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch126st[] =$/;"	v	file:
ch126st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch126st0[] =$/;"	v	file:
ch126st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch126st1[] =$/;"	v	file:
ch127	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch127 = {104.762f,2,ch127st};$/;"	v	file:
ch127st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch127st[] =$/;"	v	file:
ch127st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch127st0[] =$/;"	v	file:
ch127st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch127st1[] =$/;"	v	file:
ch32	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch32 = {104.762f,0,ch32st};$/;"	v	file:
ch32st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch32st[] =$/;"	v	file:
ch33	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch33 = {104.762f,2,ch33st};$/;"	v	file:
ch33st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch33st[] =$/;"	v	file:
ch33st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch33st0[] =$/;"	v	file:
ch33st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch33st1[] =$/;"	v	file:
ch34	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch34 = {104.762f,2,ch34st};$/;"	v	file:
ch34st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch34st[] =$/;"	v	file:
ch34st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch34st0[] =$/;"	v	file:
ch34st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch34st1[] =$/;"	v	file:
ch35	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch35 = {104.762f,4,ch35st};$/;"	v	file:
ch35st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch35st[] =$/;"	v	file:
ch35st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch35st0[] =$/;"	v	file:
ch35st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch35st1[] =$/;"	v	file:
ch35st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch35st2[] =$/;"	v	file:
ch35st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch35st3[] =$/;"	v	file:
ch36	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch36 = {104.762f,3,ch36st};$/;"	v	file:
ch36st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch36st[] =$/;"	v	file:
ch36st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch36st0[] =$/;"	v	file:
ch36st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch36st1[] =$/;"	v	file:
ch36st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch36st2[] =$/;"	v	file:
ch37	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch37 = {104.762f,3,ch37st};$/;"	v	file:
ch37st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch37st[] =$/;"	v	file:
ch37st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch37st0[] =$/;"	v	file:
ch37st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch37st1[] =$/;"	v	file:
ch37st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch37st2[] =$/;"	v	file:
ch38	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch38 = {104.762f,1,ch38st};$/;"	v	file:
ch38st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch38st[] =$/;"	v	file:
ch38st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch38st0[] =$/;"	v	file:
ch39	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch39 = {104.762f,1,ch39st};$/;"	v	file:
ch39st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch39st[] =$/;"	v	file:
ch39st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch39st0[] =$/;"	v	file:
ch40	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch40 = {104.762f,1,ch40st};$/;"	v	file:
ch40st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch40st[] =$/;"	v	file:
ch40st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch40st0[] =$/;"	v	file:
ch41	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch41 = {104.762f,1,ch41st};$/;"	v	file:
ch41st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch41st[] =$/;"	v	file:
ch41st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch41st0[] =$/;"	v	file:
ch42	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch42 = {104.762f,3,ch42st};$/;"	v	file:
ch42st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch42st[] =$/;"	v	file:
ch42st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch42st0[] =$/;"	v	file:
ch42st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch42st1[] =$/;"	v	file:
ch42st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch42st2[] =$/;"	v	file:
ch43	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch43 = {104.762f,2,ch43st};$/;"	v	file:
ch43st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch43st[] =$/;"	v	file:
ch43st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch43st0[] =$/;"	v	file:
ch43st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch43st1[] =$/;"	v	file:
ch44	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch44 = {104.762f,1,ch44st};$/;"	v	file:
ch44st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch44st[] =$/;"	v	file:
ch44st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch44st0[] =$/;"	v	file:
ch45	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch45 = {104.762f,1,ch45st};$/;"	v	file:
ch45st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch45st[] =$/;"	v	file:
ch45st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch45st0[] =$/;"	v	file:
ch46	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch46 = {104.762f,1,ch46st};$/;"	v	file:
ch46st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch46st[] =$/;"	v	file:
ch46st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch46st0[] =$/;"	v	file:
ch47	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch47 = {104.762f,1,ch47st};$/;"	v	file:
ch47st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch47st[] =$/;"	v	file:
ch47st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch47st0[] =$/;"	v	file:
ch48	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch48 = {104.762f,1,ch48st};$/;"	v	file:
ch48st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch48st[] =$/;"	v	file:
ch48st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch48st0[] =$/;"	v	file:
ch49	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch49 = {104.762f,1,ch49st};$/;"	v	file:
ch49st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch49st[] =$/;"	v	file:
ch49st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch49st0[] =$/;"	v	file:
ch50	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch50 = {104.762f,1,ch50st};$/;"	v	file:
ch50st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch50st[] =$/;"	v	file:
ch50st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch50st0[] =$/;"	v	file:
ch51	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch51 = {104.762f,1,ch51st};$/;"	v	file:
ch51st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch51st[] =$/;"	v	file:
ch51st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch51st0[] =$/;"	v	file:
ch52	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch52 = {104.762f,2,ch52st};$/;"	v	file:
ch52st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch52st[] =$/;"	v	file:
ch52st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch52st0[] =$/;"	v	file:
ch52st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch52st1[] =$/;"	v	file:
ch53	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch53 = {104.762f,1,ch53st};$/;"	v	file:
ch53st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch53st[] =$/;"	v	file:
ch53st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch53st0[] =$/;"	v	file:
ch54	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch54 = {104.762f,1,ch54st};$/;"	v	file:
ch54st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch54st[] =$/;"	v	file:
ch54st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch54st0[] =$/;"	v	file:
ch55	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch55 = {104.762f,2,ch55st};$/;"	v	file:
ch55st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch55st[] =$/;"	v	file:
ch55st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch55st0[] =$/;"	v	file:
ch55st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch55st1[] =$/;"	v	file:
ch56	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch56 = {104.762f,1,ch56st};$/;"	v	file:
ch56st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch56st[] =$/;"	v	file:
ch56st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch56st0[] =$/;"	v	file:
ch57	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch57 = {104.762f,1,ch57st};$/;"	v	file:
ch57st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch57st[] =$/;"	v	file:
ch57st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch57st0[] =$/;"	v	file:
ch58	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch58 = {104.762f,2,ch58st};$/;"	v	file:
ch58st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch58st[] =$/;"	v	file:
ch58st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch58st0[] =$/;"	v	file:
ch58st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch58st1[] =$/;"	v	file:
ch59	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch59 = {104.762f,2,ch59st};$/;"	v	file:
ch59st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch59st[] =$/;"	v	file:
ch59st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch59st0[] =$/;"	v	file:
ch59st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch59st1[] =$/;"	v	file:
ch60	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch60 = {104.762f,1,ch60st};$/;"	v	file:
ch60st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch60st[] =$/;"	v	file:
ch60st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch60st0[] =$/;"	v	file:
ch61	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch61 = {104.762f,2,ch61st};$/;"	v	file:
ch61st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch61st[] =$/;"	v	file:
ch61st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch61st0[] =$/;"	v	file:
ch61st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch61st1[] =$/;"	v	file:
ch62	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch62 = {104.762f,1,ch62st};$/;"	v	file:
ch62st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch62st[] =$/;"	v	file:
ch62st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch62st0[] =$/;"	v	file:
ch63	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch63 = {104.762f,2,ch63st};$/;"	v	file:
ch63st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch63st[] =$/;"	v	file:
ch63st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch63st0[] =$/;"	v	file:
ch63st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch63st1[] =$/;"	v	file:
ch64	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch64 = {104.762f,2,ch64st};$/;"	v	file:
ch64st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch64st[] =$/;"	v	file:
ch64st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch64st0[] =$/;"	v	file:
ch64st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch64st1[] =$/;"	v	file:
ch65	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch65 = {104.762f,3,ch65st};$/;"	v	file:
ch65st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch65st[] =$/;"	v	file:
ch65st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch65st0[] =$/;"	v	file:
ch65st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch65st1[] =$/;"	v	file:
ch65st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch65st2[] =$/;"	v	file:
ch66	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch66 = {104.762f,3,ch66st};$/;"	v	file:
ch66st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch66st[] =$/;"	v	file:
ch66st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch66st0[] =$/;"	v	file:
ch66st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch66st1[] =$/;"	v	file:
ch66st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch66st2[] =$/;"	v	file:
ch67	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch67 = {104.762f,1,ch67st};$/;"	v	file:
ch67st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch67st[] =$/;"	v	file:
ch67st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch67st0[] =$/;"	v	file:
ch68	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch68 = {104.762f,2,ch68st};$/;"	v	file:
ch68st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch68st[] =$/;"	v	file:
ch68st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch68st0[] =$/;"	v	file:
ch68st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch68st1[] =$/;"	v	file:
ch69	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch69 = {104.762f,4,ch69st};$/;"	v	file:
ch69st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch69st[] =$/;"	v	file:
ch69st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch69st0[] =$/;"	v	file:
ch69st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch69st1[] =$/;"	v	file:
ch69st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch69st2[] =$/;"	v	file:
ch69st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch69st3[] =$/;"	v	file:
ch70	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch70 = {104.762f,3,ch70st};$/;"	v	file:
ch70st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch70st[] =$/;"	v	file:
ch70st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch70st0[] =$/;"	v	file:
ch70st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch70st1[] =$/;"	v	file:
ch70st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch70st2[] =$/;"	v	file:
ch71	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch71 = {104.762f,2,ch71st};$/;"	v	file:
ch71st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch71st[] =$/;"	v	file:
ch71st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch71st0[] =$/;"	v	file:
ch71st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch71st1[] =$/;"	v	file:
ch72	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch72 = {104.762f,3,ch72st};$/;"	v	file:
ch72st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch72st[] =$/;"	v	file:
ch72st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch72st0[] =$/;"	v	file:
ch72st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch72st1[] =$/;"	v	file:
ch72st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch72st2[] =$/;"	v	file:
ch73	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch73 = {104.762f,1,ch73st};$/;"	v	file:
ch73st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch73st[] =$/;"	v	file:
ch73st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch73st0[] =$/;"	v	file:
ch74	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch74 = {104.762f,1,ch74st};$/;"	v	file:
ch74st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch74st[] =$/;"	v	file:
ch74st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch74st0[] =$/;"	v	file:
ch75	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch75 = {104.762f,3,ch75st};$/;"	v	file:
ch75st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch75st[] =$/;"	v	file:
ch75st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch75st0[] =$/;"	v	file:
ch75st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch75st1[] =$/;"	v	file:
ch75st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch75st2[] =$/;"	v	file:
ch76	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch76 = {104.762f,2,ch76st};$/;"	v	file:
ch76st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch76st[] =$/;"	v	file:
ch76st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch76st0[] =$/;"	v	file:
ch76st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch76st1[] =$/;"	v	file:
ch77	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch77 = {104.762f,4,ch77st};$/;"	v	file:
ch77st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch77st[] =$/;"	v	file:
ch77st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch77st0[] =$/;"	v	file:
ch77st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch77st1[] =$/;"	v	file:
ch77st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch77st2[] =$/;"	v	file:
ch77st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch77st3[] =$/;"	v	file:
ch78	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch78 = {104.762f,3,ch78st};$/;"	v	file:
ch78st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch78st[] =$/;"	v	file:
ch78st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch78st0[] =$/;"	v	file:
ch78st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch78st1[] =$/;"	v	file:
ch78st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch78st2[] =$/;"	v	file:
ch79	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch79 = {104.762f,1,ch79st};$/;"	v	file:
ch79st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch79st[] =$/;"	v	file:
ch79st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch79st0[] =$/;"	v	file:
ch80	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch80 = {104.762f,2,ch80st};$/;"	v	file:
ch80st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch80st[] =$/;"	v	file:
ch80st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch80st0[] =$/;"	v	file:
ch80st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch80st1[] =$/;"	v	file:
ch81	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch81 = {104.762f,2,ch81st};$/;"	v	file:
ch81st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch81st[] =$/;"	v	file:
ch81st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch81st0[] =$/;"	v	file:
ch81st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch81st1[] =$/;"	v	file:
ch82	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch82 = {104.762f,3,ch82st};$/;"	v	file:
ch82st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch82st[] =$/;"	v	file:
ch82st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch82st0[] =$/;"	v	file:
ch82st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch82st1[] =$/;"	v	file:
ch82st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch82st2[] =$/;"	v	file:
ch83	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch83 = {104.762f,1,ch83st};$/;"	v	file:
ch83st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch83st[] =$/;"	v	file:
ch83st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch83st0[] =$/;"	v	file:
ch84	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch84 = {104.762f,2,ch84st};$/;"	v	file:
ch84st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch84st[] =$/;"	v	file:
ch84st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch84st0[] =$/;"	v	file:
ch84st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch84st1[] =$/;"	v	file:
ch85	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch85 = {104.762f,1,ch85st};$/;"	v	file:
ch85st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch85st[] =$/;"	v	file:
ch85st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch85st0[] =$/;"	v	file:
ch86	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch86 = {104.762f,2,ch86st};$/;"	v	file:
ch86st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch86st[] =$/;"	v	file:
ch86st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch86st0[] =$/;"	v	file:
ch86st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch86st1[] =$/;"	v	file:
ch87	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch87 = {104.762f,4,ch87st};$/;"	v	file:
ch87st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch87st[] =$/;"	v	file:
ch87st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch87st0[] =$/;"	v	file:
ch87st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch87st1[] =$/;"	v	file:
ch87st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch87st2[] =$/;"	v	file:
ch87st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch87st3[] =$/;"	v	file:
ch88	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch88 = {104.762f,2,ch88st};$/;"	v	file:
ch88st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch88st[] =$/;"	v	file:
ch88st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch88st0[] =$/;"	v	file:
ch88st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch88st1[] =$/;"	v	file:
ch89	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch89 = {104.762f,2,ch89st};$/;"	v	file:
ch89st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch89st[] =$/;"	v	file:
ch89st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch89st0[] =$/;"	v	file:
ch89st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch89st1[] =$/;"	v	file:
ch90	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch90 = {104.762f,3,ch90st};$/;"	v	file:
ch90st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch90st[] =$/;"	v	file:
ch90st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch90st0[] =$/;"	v	file:
ch90st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch90st1[] =$/;"	v	file:
ch90st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch90st2[] =$/;"	v	file:
ch91	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch91 = {104.762f,4,ch91st};$/;"	v	file:
ch91st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch91st[] =$/;"	v	file:
ch91st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch91st0[] =$/;"	v	file:
ch91st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch91st1[] =$/;"	v	file:
ch91st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch91st2[] =$/;"	v	file:
ch91st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch91st3[] =$/;"	v	file:
ch92	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch92 = {104.762f,1,ch92st};$/;"	v	file:
ch92st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch92st[] =$/;"	v	file:
ch92st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch92st0[] =$/;"	v	file:
ch93	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch93 = {104.762f,4,ch93st};$/;"	v	file:
ch93st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch93st[] =$/;"	v	file:
ch93st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch93st0[] =$/;"	v	file:
ch93st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch93st1[] =$/;"	v	file:
ch93st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch93st2[] =$/;"	v	file:
ch93st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch93st3[] =$/;"	v	file:
ch94	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch94 = {104.762f,2,ch94st};$/;"	v	file:
ch94st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch94st[] =$/;"	v	file:
ch94st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch94st0[] =$/;"	v	file:
ch94st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch94st1[] =$/;"	v	file:
ch95	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch95 = {104.762f,1,ch95st};$/;"	v	file:
ch95st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch95st[] =$/;"	v	file:
ch95st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch95st0[] =$/;"	v	file:
ch96	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch96 = {104.762f,2,ch96st};$/;"	v	file:
ch96st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch96st[] =$/;"	v	file:
ch96st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch96st0[] =$/;"	v	file:
ch96st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch96st1[] =$/;"	v	file:
ch97	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch97 = {104.762f,2,ch97st};$/;"	v	file:
ch97st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch97st[] =$/;"	v	file:
ch97st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch97st0[] =$/;"	v	file:
ch97st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch97st1[] =$/;"	v	file:
ch98	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch98 = {104.762f,2,ch98st};$/;"	v	file:
ch98st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch98st[] =$/;"	v	file:
ch98st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch98st0[] =$/;"	v	file:
ch98st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch98st1[] =$/;"	v	file:
ch99	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar ch99 = {104.762f,1,ch99st};$/;"	v	file:
ch99st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeStrip ch99st[] =$/;"	v	file:
ch99st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeVertex ch99st0[] =$/;"	v	file:
chars	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^static const SFG_StrokeChar *chars[] =$/;"	v	file:
fgStrokeMonoRoman	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^const SFG_StrokeFont fgStrokeMonoRoman = {(char*)"MonoRoman",128,152.381f,chars};$/;"	v
freeglut_minimal	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_mono_roman.cpp	/^namespace freeglut_minimal {$/;"	n	file:
ch100	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch100 = {70.2629f,2,ch100st};$/;"	v	file:
ch100st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch100st[] =$/;"	v	file:
ch100st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch100st0[] =$/;"	v	file:
ch100st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch100st1[] =$/;"	v	file:
ch101	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch101 = {68.5229f,1,ch101st};$/;"	v	file:
ch101st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch101st[] =$/;"	v	file:
ch101st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch101st0[] =$/;"	v	file:
ch102	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch102 = {38.6552f,2,ch102st};$/;"	v	file:
ch102st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch102st[] =$/;"	v	file:
ch102st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch102st0[] =$/;"	v	file:
ch102st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch102st1[] =$/;"	v	file:
ch103	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch103 = {70.9829f,2,ch103st};$/;"	v	file:
ch103st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch103st[] =$/;"	v	file:
ch103st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch103st0[] =$/;"	v	file:
ch103st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch103st1[] =$/;"	v	file:
ch104	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch104 = {71.021f,2,ch104st};$/;"	v	file:
ch104st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch104st[] =$/;"	v	file:
ch104st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch104st0[] =$/;"	v	file:
ch104st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch104st1[] =$/;"	v	file:
ch105	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch105 = {28.8638f,2,ch105st};$/;"	v	file:
ch105st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch105st[] =$/;"	v	file:
ch105st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch105st0[] =$/;"	v	file:
ch105st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch105st1[] =$/;"	v	file:
ch106	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch106 = {36.2314f,2,ch106st};$/;"	v	file:
ch106st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch106st[] =$/;"	v	file:
ch106st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch106st0[] =$/;"	v	file:
ch106st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch106st1[] =$/;"	v	file:
ch107	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch107 = {62.521f,3,ch107st};$/;"	v	file:
ch107st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch107st[] =$/;"	v	file:
ch107st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch107st0[] =$/;"	v	file:
ch107st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch107st1[] =$/;"	v	file:
ch107st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch107st2[] =$/;"	v	file:
ch108	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch108 = {19.34f,1,ch108st};$/;"	v	file:
ch108st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch108st[] =$/;"	v	file:
ch108st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch108st0[] =$/;"	v	file:
ch109	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch109 = {123.962f,3,ch109st};$/;"	v	file:
ch109st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch109st[] =$/;"	v	file:
ch109st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch109st0[] =$/;"	v	file:
ch109st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch109st1[] =$/;"	v	file:
ch109st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch109st2[] =$/;"	v	file:
ch110	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch110 = {70.881f,2,ch110st};$/;"	v	file:
ch110st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch110st[] =$/;"	v	file:
ch110st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch110st0[] =$/;"	v	file:
ch110st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch110st1[] =$/;"	v	file:
ch111	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch111 = {71.7448f,1,ch111st};$/;"	v	file:
ch111st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch111st[] =$/;"	v	file:
ch111st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch111st0[] =$/;"	v	file:
ch112	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch112 = {70.8029f,2,ch112st};$/;"	v	file:
ch112st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch112st[] =$/;"	v	file:
ch112st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch112st0[] =$/;"	v	file:
ch112st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch112st1[] =$/;"	v	file:
ch113	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch113 = {70.7429f,2,ch113st};$/;"	v	file:
ch113st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch113st[] =$/;"	v	file:
ch113st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch113st0[] =$/;"	v	file:
ch113st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch113st1[] =$/;"	v	file:
ch114	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch114 = {49.4952f,2,ch114st};$/;"	v	file:
ch114st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch114st[] =$/;"	v	file:
ch114st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch114st0[] =$/;"	v	file:
ch114st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch114st1[] =$/;"	v	file:
ch115	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch115 = {62.321f,1,ch115st};$/;"	v	file:
ch115st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch115st[] =$/;"	v	file:
ch115st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch115st0[] =$/;"	v	file:
ch116	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch116 = {39.3152f,2,ch116st};$/;"	v	file:
ch116st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch116st[] =$/;"	v	file:
ch116st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch116st0[] =$/;"	v	file:
ch116st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch116st1[] =$/;"	v	file:
ch117	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch117 = {71.161f,2,ch117st};$/;"	v	file:
ch117st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch117st[] =$/;"	v	file:
ch117st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch117st0[] =$/;"	v	file:
ch117st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch117st1[] =$/;"	v	file:
ch118	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch118 = {60.6029f,2,ch118st};$/;"	v	file:
ch118st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch118st[] =$/;"	v	file:
ch118st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch118st0[] =$/;"	v	file:
ch118st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch118st1[] =$/;"	v	file:
ch119	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch119 = {80.4905f,4,ch119st};$/;"	v	file:
ch119st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch119st[] =$/;"	v	file:
ch119st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch119st0[] =$/;"	v	file:
ch119st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch119st1[] =$/;"	v	file:
ch119st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch119st2[] =$/;"	v	file:
ch119st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch119st3[] =$/;"	v	file:
ch120	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch120 = {56.401f,2,ch120st};$/;"	v	file:
ch120st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch120st[] =$/;"	v	file:
ch120st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch120st0[] =$/;"	v	file:
ch120st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch120st1[] =$/;"	v	file:
ch121	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch121 = {66.0648f,2,ch121st};$/;"	v	file:
ch121st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch121st[] =$/;"	v	file:
ch121st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch121st0[] =$/;"	v	file:
ch121st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch121st1[] =$/;"	v	file:
ch122	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch122 = {61.821f,3,ch122st};$/;"	v	file:
ch122st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch122st[] =$/;"	v	file:
ch122st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch122st0[] =$/;"	v	file:
ch122st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch122st1[] =$/;"	v	file:
ch122st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch122st2[] =$/;"	v	file:
ch123	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch123 = {41.6295f,3,ch123st};$/;"	v	file:
ch123st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch123st[] =$/;"	v	file:
ch123st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch123st0[] =$/;"	v	file:
ch123st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch123st1[] =$/;"	v	file:
ch123st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch123st2[] =$/;"	v	file:
ch124	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch124 = {23.78f,1,ch124st};$/;"	v	file:
ch124st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch124st[] =$/;"	v	file:
ch124st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch124st0[] =$/;"	v	file:
ch125	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch125 = {41.4695f,3,ch125st};$/;"	v	file:
ch125st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch125st[] =$/;"	v	file:
ch125st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch125st0[] =$/;"	v	file:
ch125st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch125st1[] =$/;"	v	file:
ch125st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch125st2[] =$/;"	v	file:
ch126	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch126 = {91.2743f,2,ch126st};$/;"	v	file:
ch126st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch126st[] =$/;"	v	file:
ch126st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch126st0[] =$/;"	v	file:
ch126st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch126st1[] =$/;"	v	file:
ch127	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch127 = {66.6667f,2,ch127st};$/;"	v	file:
ch127st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch127st[] =$/;"	v	file:
ch127st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch127st0[] =$/;"	v	file:
ch127st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch127st1[] =$/;"	v	file:
ch32	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch32 = {104.762f,0,ch32st};$/;"	v	file:
ch32st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch32st[] =$/;"	v	file:
ch33	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch33 = {26.6238f,2,ch33st};$/;"	v	file:
ch33st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch33st[] =$/;"	v	file:
ch33st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch33st0[] =$/;"	v	file:
ch33st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch33st1[] =$/;"	v	file:
ch34	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch34 = {51.4352f,2,ch34st};$/;"	v	file:
ch34st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch34st[] =$/;"	v	file:
ch34st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch34st0[] =$/;"	v	file:
ch34st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch34st1[] =$/;"	v	file:
ch35	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch35 = {79.4886f,4,ch35st};$/;"	v	file:
ch35st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch35st[] =$/;"	v	file:
ch35st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch35st0[] =$/;"	v	file:
ch35st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch35st1[] =$/;"	v	file:
ch35st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch35st2[] =$/;"	v	file:
ch35st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch35st3[] =$/;"	v	file:
ch36	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch36 = {76.2067f,3,ch36st};$/;"	v	file:
ch36st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch36st[] =$/;"	v	file:
ch36st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch36st0[] =$/;"	v	file:
ch36st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch36st1[] =$/;"	v	file:
ch36st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch36st2[] =$/;"	v	file:
ch37	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch37 = {96.5743f,3,ch37st};$/;"	v	file:
ch37st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch37st[] =$/;"	v	file:
ch37st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch37st0[] =$/;"	v	file:
ch37st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch37st1[] =$/;"	v	file:
ch37st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch37st2[] =$/;"	v	file:
ch38	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch38 = {101.758f,1,ch38st};$/;"	v	file:
ch38st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch38st[] =$/;"	v	file:
ch38st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch38st0[] =$/;"	v	file:
ch39	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch39 = {13.62f,1,ch39st};$/;"	v	file:
ch39st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch39st[] =$/;"	v	file:
ch39st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch39st0[] =$/;"	v	file:
ch40	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch40 = {47.1733f,1,ch40st};$/;"	v	file:
ch40st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch40st[] =$/;"	v	file:
ch40st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch40st0[] =$/;"	v	file:
ch41	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch41 = {47.5333f,1,ch41st};$/;"	v	file:
ch41st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch41st[] =$/;"	v	file:
ch41st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch41st0[] =$/;"	v	file:
ch42	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch42 = {59.439f,3,ch42st};$/;"	v	file:
ch42st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch42st[] =$/;"	v	file:
ch42st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch42st0[] =$/;"	v	file:
ch42st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch42st1[] =$/;"	v	file:
ch42st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch42st2[] =$/;"	v	file:
ch43	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch43 = {97.2543f,2,ch43st};$/;"	v	file:
ch43st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch43st[] =$/;"	v	file:
ch43st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch43st0[] =$/;"	v	file:
ch43st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch43st1[] =$/;"	v	file:
ch44	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch44 = {26.0638f,1,ch44st};$/;"	v	file:
ch44st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch44st[] =$/;"	v	file:
ch44st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch44st0[] =$/;"	v	file:
ch45	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch45 = {100.754f,1,ch45st};$/;"	v	file:
ch45st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch45st[] =$/;"	v	file:
ch45st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch45st0[] =$/;"	v	file:
ch46	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch46 = {26.4838f,1,ch46st};$/;"	v	file:
ch46st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch46st[] =$/;"	v	file:
ch46st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch46st0[] =$/;"	v	file:
ch47	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch47 = {82.1067f,1,ch47st};$/;"	v	file:
ch47st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch47st[] =$/;"	v	file:
ch47st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch47st0[] =$/;"	v	file:
ch48	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch48 = {77.0667f,1,ch48st};$/;"	v	file:
ch48st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch48st[] =$/;"	v	file:
ch48st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch48st0[] =$/;"	v	file:
ch49	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch49 = {66.5295f,1,ch49st};$/;"	v	file:
ch49st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch49st[] =$/;"	v	file:
ch49st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch49st0[] =$/;"	v	file:
ch50	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch50 = {77.6467f,1,ch50st};$/;"	v	file:
ch50st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch50st[] =$/;"	v	file:
ch50st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch50st0[] =$/;"	v	file:
ch51	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch51 = {77.0467f,1,ch51st};$/;"	v	file:
ch51st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch51st[] =$/;"	v	file:
ch51st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch51st0[] =$/;"	v	file:
ch52	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch52 = {80.1686f,2,ch52st};$/;"	v	file:
ch52st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch52st[] =$/;"	v	file:
ch52st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch52st0[] =$/;"	v	file:
ch52st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch52st1[] =$/;"	v	file:
ch53	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch53 = {77.6867f,1,ch53st};$/;"	v	file:
ch53st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch53st[] =$/;"	v	file:
ch53st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch53st0[] =$/;"	v	file:
ch54	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch54 = {73.8048f,1,ch54st};$/;"	v	file:
ch54st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch54st[] =$/;"	v	file:
ch54st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch54st0[] =$/;"	v	file:
ch55	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch55 = {77.2267f,2,ch55st};$/;"	v	file:
ch55st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch55st[] =$/;"	v	file:
ch55st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch55st0[] =$/;"	v	file:
ch55st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch55st1[] =$/;"	v	file:
ch56	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch56 = {77.6667f,1,ch56st};$/;"	v	file:
ch56st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch56st[] =$/;"	v	file:
ch56st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch56st0[] =$/;"	v	file:
ch57	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch57 = {74.0648f,1,ch57st};$/;"	v	file:
ch57st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch57st[] =$/;"	v	file:
ch57st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch57st0[] =$/;"	v	file:
ch58	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch58 = {26.2238f,2,ch58st};$/;"	v	file:
ch58st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch58st[] =$/;"	v	file:
ch58st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch58st0[] =$/;"	v	file:
ch58st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch58st1[] =$/;"	v	file:
ch59	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch59 = {26.3038f,2,ch59st};$/;"	v	file:
ch59st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch59st[] =$/;"	v	file:
ch59st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch59st0[] =$/;"	v	file:
ch59st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch59st1[] =$/;"	v	file:
ch60	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch60 = {81.6105f,1,ch60st};$/;"	v	file:
ch60st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch60st[] =$/;"	v	file:
ch60st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch60st0[] =$/;"	v	file:
ch61	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch61 = {97.2543f,2,ch61st};$/;"	v	file:
ch61st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch61st[] =$/;"	v	file:
ch61st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch61st0[] =$/;"	v	file:
ch61st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch61st1[] =$/;"	v	file:
ch62	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch62 = {81.6105f,1,ch62st};$/;"	v	file:
ch62st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch62st[] =$/;"	v	file:
ch62st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch62st0[] =$/;"	v	file:
ch63	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch63 = {73.9029f,2,ch63st};$/;"	v	file:
ch63st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch63st[] =$/;"	v	file:
ch63st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch63st0[] =$/;"	v	file:
ch63st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch63st1[] =$/;"	v	file:
ch64	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch64 = {74.3648f,2,ch64st};$/;"	v	file:
ch64st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch64st[] =$/;"	v	file:
ch64st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch64st0[] =$/;"	v	file:
ch64st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch64st1[] =$/;"	v	file:
ch65	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch65 = {80.4905f,3,ch65st};$/;"	v	file:
ch65st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch65st[] =$/;"	v	file:
ch65st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch65st0[] =$/;"	v	file:
ch65st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch65st1[] =$/;"	v	file:
ch65st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch65st2[] =$/;"	v	file:
ch66	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch66 = {83.6267f,3,ch66st};$/;"	v	file:
ch66st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch66st[] =$/;"	v	file:
ch66st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch66st0[] =$/;"	v	file:
ch66st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch66st1[] =$/;"	v	file:
ch66st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch66st2[] =$/;"	v	file:
ch67	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch67 = {84.4886f,1,ch67st};$/;"	v	file:
ch67st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch67st[] =$/;"	v	file:
ch67st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch67st0[] =$/;"	v	file:
ch68	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch68 = {85.2867f,2,ch68st};$/;"	v	file:
ch68st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch68st[] =$/;"	v	file:
ch68st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch68st0[] =$/;"	v	file:
ch68st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch68st1[] =$/;"	v	file:
ch69	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch69 = {78.1848f,4,ch69st};$/;"	v	file:
ch69st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch69st[] =$/;"	v	file:
ch69st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch69st0[] =$/;"	v	file:
ch69st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch69st1[] =$/;"	v	file:
ch69st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch69st2[] =$/;"	v	file:
ch69st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch69st3[] =$/;"	v	file:
ch70	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch70 = {78.7448f,3,ch70st};$/;"	v	file:
ch70st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch70st[] =$/;"	v	file:
ch70st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch70st0[] =$/;"	v	file:
ch70st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch70st1[] =$/;"	v	file:
ch70st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch70st2[] =$/;"	v	file:
ch71	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch71 = {89.7686f,2,ch71st};$/;"	v	file:
ch71st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch71st[] =$/;"	v	file:
ch71st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch71st0[] =$/;"	v	file:
ch71st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch71st1[] =$/;"	v	file:
ch72	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch72 = {89.0867f,3,ch72st};$/;"	v	file:
ch72st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch72st[] =$/;"	v	file:
ch72st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch72st0[] =$/;"	v	file:
ch72st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch72st1[] =$/;"	v	file:
ch72st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch72st2[] =$/;"	v	file:
ch73	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch73 = {21.3f,1,ch73st};$/;"	v	file:
ch73st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch73st[] =$/;"	v	file:
ch73st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch73st0[] =$/;"	v	file:
ch74	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch74 = {59.999f,1,ch74st};$/;"	v	file:
ch74st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch74st[] =$/;"	v	file:
ch74st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch74st0[] =$/;"	v	file:
ch75	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch75 = {79.3267f,3,ch75st};$/;"	v	file:
ch75st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch75st[] =$/;"	v	file:
ch75st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch75st0[] =$/;"	v	file:
ch75st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch75st1[] =$/;"	v	file:
ch75st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch75st2[] =$/;"	v	file:
ch76	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch76 = {71.3229f,2,ch76st};$/;"	v	file:
ch76st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch76st[] =$/;"	v	file:
ch76st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch76st0[] =$/;"	v	file:
ch76st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch76st1[] =$/;"	v	file:
ch77	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch77 = {97.2105f,4,ch77st};$/;"	v	file:
ch77st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch77st[] =$/;"	v	file:
ch77st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch77st0[] =$/;"	v	file:
ch77st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch77st1[] =$/;"	v	file:
ch77st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch77st2[] =$/;"	v	file:
ch77st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch77st3[] =$/;"	v	file:
ch78	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch78 = {88.8067f,3,ch78st};$/;"	v	file:
ch78st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch78st[] =$/;"	v	file:
ch78st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch78st0[] =$/;"	v	file:
ch78st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch78st1[] =$/;"	v	file:
ch78st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch78st2[] =$/;"	v	file:
ch79	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch79 = {88.8305f,1,ch79st};$/;"	v	file:
ch79st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch79st[] =$/;"	v	file:
ch79st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch79st0[] =$/;"	v	file:
ch80	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch80 = {85.6667f,2,ch80st};$/;"	v	file:
ch80st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch80st[] =$/;"	v	file:
ch80st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch80st0[] =$/;"	v	file:
ch80st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch80st1[] =$/;"	v	file:
ch81	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch81 = {88.0905f,2,ch81st};$/;"	v	file:
ch81st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch81st[] =$/;"	v	file:
ch81st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch81st0[] =$/;"	v	file:
ch81st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch81st1[] =$/;"	v	file:
ch82	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch82 = {82.3667f,3,ch82st};$/;"	v	file:
ch82st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch82st[] =$/;"	v	file:
ch82st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch82st0[] =$/;"	v	file:
ch82st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch82st1[] =$/;"	v	file:
ch82st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch82st2[] =$/;"	v	file:
ch83	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch83 = {80.8267f,1,ch83st};$/;"	v	file:
ch83st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch83st[] =$/;"	v	file:
ch83st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch83st0[] =$/;"	v	file:
ch84	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch84 = {71.9467f,2,ch84st};$/;"	v	file:
ch84st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch84st[] =$/;"	v	file:
ch84st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch84st0[] =$/;"	v	file:
ch84st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch84st1[] =$/;"	v	file:
ch85	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch85 = {89.4867f,1,ch85st};$/;"	v	file:
ch85st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch85st[] =$/;"	v	file:
ch85st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch85st0[] =$/;"	v	file:
ch86	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch86 = {81.6105f,2,ch86st};$/;"	v	file:
ch86st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch86st[] =$/;"	v	file:
ch86st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch86st0[] =$/;"	v	file:
ch86st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch86st1[] =$/;"	v	file:
ch87	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch87 = {100.518f,4,ch87st};$/;"	v	file:
ch87st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch87st[] =$/;"	v	file:
ch87st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch87st0[] =$/;"	v	file:
ch87st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch87st1[] =$/;"	v	file:
ch87st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch87st2[] =$/;"	v	file:
ch87st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch87st3[] =$/;"	v	file:
ch88	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch88 = {72.3667f,2,ch88st};$/;"	v	file:
ch88st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch88st[] =$/;"	v	file:
ch88st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch88st0[] =$/;"	v	file:
ch88st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch88st1[] =$/;"	v	file:
ch89	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch89 = {79.6505f,2,ch89st};$/;"	v	file:
ch89st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch89st[] =$/;"	v	file:
ch89st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch89st0[] =$/;"	v	file:
ch89st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch89st1[] =$/;"	v	file:
ch90	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch90 = {73.7467f,3,ch90st};$/;"	v	file:
ch90st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch90st[] =$/;"	v	file:
ch90st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch90st0[] =$/;"	v	file:
ch90st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch90st1[] =$/;"	v	file:
ch90st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch90st2[] =$/;"	v	file:
ch91	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch91 = {46.1133f,4,ch91st};$/;"	v	file:
ch91st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch91st[] =$/;"	v	file:
ch91st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch91st0[] =$/;"	v	file:
ch91st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch91st1[] =$/;"	v	file:
ch91st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch91st2[] =$/;"	v	file:
ch91st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch91st3[] =$/;"	v	file:
ch92	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch92 = {78.2067f,1,ch92st};$/;"	v	file:
ch92st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch92st[] =$/;"	v	file:
ch92st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch92st0[] =$/;"	v	file:
ch93	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch93 = {46.3933f,4,ch93st};$/;"	v	file:
ch93st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch93st[] =$/;"	v	file:
ch93st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch93st0[] =$/;"	v	file:
ch93st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch93st1[] =$/;"	v	file:
ch93st2	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch93st2[] =$/;"	v	file:
ch93st3	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch93st3[] =$/;"	v	file:
ch94	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch94 = {90.2305f,2,ch94st};$/;"	v	file:
ch94st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch94st[] =$/;"	v	file:
ch94st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch94st0[] =$/;"	v	file:
ch94st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch94st1[] =$/;"	v	file:
ch95	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch95 = {104.062f,1,ch95st};$/;"	v	file:
ch95st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch95st[] =$/;"	v	file:
ch95st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch95st0[] =$/;"	v	file:
ch96	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch96 = {83.5714f,2,ch96st};$/;"	v	file:
ch96st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch96st[] =$/;"	v	file:
ch96st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch96st0[] =$/;"	v	file:
ch96st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch96st1[] =$/;"	v	file:
ch97	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch97 = {66.6029f,2,ch97st};$/;"	v	file:
ch97st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch97st[] =$/;"	v	file:
ch97st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch97st0[] =$/;"	v	file:
ch97st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch97st1[] =$/;"	v	file:
ch98	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch98 = {70.4629f,2,ch98st};$/;"	v	file:
ch98st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch98st[] =$/;"	v	file:
ch98st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch98st0[] =$/;"	v	file:
ch98st1	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch98st1[] =$/;"	v	file:
ch99	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar ch99 = {68.9229f,1,ch99st};$/;"	v	file:
ch99st	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeStrip ch99st[] =$/;"	v	file:
ch99st0	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeVertex ch99st0[] =$/;"	v	file:
chars	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^static const SFG_StrokeChar *chars[] =$/;"	v	file:
fgStrokeRoman	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^const SFG_StrokeFont fgStrokeRoman = {(char*)"Roman",128,152.381f,chars};$/;"	v
freeglut_minimal	trunk/EXTERNAL/g2o/EXTERNAL/freeglut/freeglut_stroke_roman.cpp	/^namespace freeglut_minimal {$/;"	n	file:
DlWrapper	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	/^DlWrapper::DlWrapper()$/;"	f	class:g2o::DlWrapper
SO_EXT	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	42;"	d	file:
SO_EXT	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	45;"	d	file:
SO_EXT	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	48;"	d	file:
SO_EXT_LEN	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	43;"	d	file:
SO_EXT_LEN	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	46;"	d	file:
SO_EXT_LEN	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	49;"	d	file:
clear	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	/^void DlWrapper::clear()$/;"	f	class:g2o::DlWrapper
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	/^namespace g2o {$/;"	n	file:
openLibraries	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	/^int DlWrapper::openLibraries(const std::string& directory, const std::string& pattern)$/;"	f	class:g2o::DlWrapper
openLibrary	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	/^bool DlWrapper::openLibrary(const std::string& filename)$/;"	f	class:g2o::DlWrapper
~DlWrapper	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.cpp	/^DlWrapper::~DlWrapper()$/;"	f	class:g2o::DlWrapper
DlWrapper	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.h	/^  class G2O_CLI_API DlWrapper$/;"	c	namespace:g2o
G2O_DL_WRAPPER_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.h	28;"	d
_filenames	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.h	/^      std::vector<std::string> _filenames;$/;"	m	class:g2o::DlWrapper
_handles	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.h	/^      std::vector<HMODULE> _handles;$/;"	m	class:g2o::DlWrapper
_handles	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.h	/^      std::vector<void*> _handles;$/;"	m	class:g2o::DlWrapper
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/dl_wrapper.h	/^namespace g2o {$/;"	n
IncrementalEdgesCompare	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o.cpp	/^struct IncrementalEdgesCompare {$/;"	s	file:
hasToStop	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o.cpp	/^static bool hasToStop=false;$/;"	v	file:
main	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o.cpp	/^int main(int argc, char** argv)$/;"	f
operator ()	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o.cpp	/^  bool operator()(SparseOptimizer::Edge* const & e1, SparseOptimizer::Edge* const & e2)$/;"	f	struct:IncrementalEdgesCompare
sigquit_handler	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o.cpp	/^void sigquit_handler(int sig)$/;"	f
G2O_CLI_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_cli_api.h	19;"	d
G2O_CLI_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_cli_api.h	21;"	d
G2O_CLI_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_cli_api.h	24;"	d
G2O_CLI_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_cli_api.h	29;"	d
G2O_CLI_API_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_cli_api.h	11;"	d
G2O_LIBRARY_POSTFIX	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	78;"	d	file:
PATH_SEPARATOR	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	59;"	d	file:
PATH_SEPARATOR	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	61;"	d	file:
SOLVERS_PATTERN	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	/^static const string SOLVERS_PATTERN=string("*_solver_*")+string(G2O_LIBRARY_POSTFIX)+string(".")+string(SO_EXT);$/;"	v	file:
SO_EXT	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	42;"	d	file:
SO_EXT	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	44;"	d	file:
SO_EXT	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	46;"	d	file:
TYPES_PATTERN	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	/^static const string TYPES_PATTERN=string("*_types_*")+string(G2O_LIBRARY_POSTFIX)+string(".")+string(SO_EXT);$/;"	v	file:
_GNU_SOURCE	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	54;"	d	file:
fakeFunctionForWindows	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	/^static void fakeFunctionForWindows() {}$/;"	f	file:
findArguments	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	/^void findArguments(const std::string& option, vector<string>& args, int argc, char** argv)$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	/^namespace g2o {$/;"	n	file:
getMyInstance	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	/^HMODULE getMyInstance()$/;"	f
info	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	/^   static Dl_info info;$/;"	v	file:
loadStandardSolver	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	/^void loadStandardSolver(DlWrapper& dlSolverWrapper, int argc, char** argv)$/;"	f	namespace:g2o
loadStandardTypes	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.cpp	/^void loadStandardTypes(DlWrapper& dlTypesWrapper, int argc, char** argv)$/;"	f	namespace:g2o
G2O_COMMON_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.h	28;"	d
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/g2o_common.h	/^namespace g2o {$/;"	n
dumpEdges	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/output_helper.cpp	/^bool dumpEdges(std::ostream& os, const OptimizableGraph& optimizer)$/;"	f	namespace:g2o
edgeAllVertsSameDim	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/output_helper.cpp	/^bool edgeAllVertsSameDim(OptimizableGraph::Edge* e, int dim)$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/output_helper.cpp	/^namespace g2o {$/;"	n	file:
saveGnuplot	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/output_helper.cpp	/^bool saveGnuplot(const std::string& gnudump, const HyperGraph::VertexSet& vertices, const HyperGraph::EdgeSet& edges)$/;"	f	namespace:g2o
saveGnuplot	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/output_helper.cpp	/^bool saveGnuplot(const std::string& gnudump, const OptimizableGraph& optimizer)$/;"	f	namespace:g2o
G2O_OUTPUT_HELPER_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/output_helper.h	28;"	d
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_cli/output_helper.h	/^namespace g2o {$/;"	n
IncrementalEdgesCompare	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^struct IncrementalEdgesCompare {$/;"	s	file:
LineInfo	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^  LineInfo(VertexSegment2D* s) {$/;"	f	struct:LineInfo
LineInfo	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^struct LineInfo {$/;"	s	file:
LineInfoMap	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^typedef std::map<int, LineInfo> LineInfoMap;$/;"	t	file:
hasToStop	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^static bool hasToStop=false;$/;"	v	file:
line	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^  VertexLine2D* line;$/;"	m	struct:LineInfo	file:
main	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^int main(int argc, char** argv)$/;"	f
operator ()	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^  bool operator()(SparseOptimizer::Edge* const & e1, SparseOptimizer::Edge* const & e2)$/;"	f	struct:IncrementalEdgesCompare
p1	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^  VertexPointXY* p1;$/;"	m	struct:LineInfo	file:
p2	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^  VertexPointXY* p2;$/;"	m	struct:LineInfo	file:
sigquit_handler	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/converteSegmentLine.cpp	/^void sigquit_handler(int sig)$/;"	f
G2O_SIMULATOR_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/g2o_simulator_api.h	19;"	d
G2O_SIMULATOR_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/g2o_simulator_api.h	21;"	d
G2O_SIMULATOR_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/g2o_simulator_api.h	24;"	d
G2O_SIMULATOR_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/g2o_simulator_api.h	29;"	d
G2O_SIMULATOR_API_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/g2o_simulator_api.h	11;"	d
PointSensorParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.cpp	/^  PointSensorParameters::PointSensorParameters(){$/;"	f	class:g2o::PointSensorParameters
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.cpp	/^namespace g2o {$/;"	n	file:
G2O_POINTSENSORPARAMETERS_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	28;"	d
PointSensorParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^  class G2O_SIMULATOR_API PointSensorParameters{$/;"	c	namespace:g2o
_fov	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    double _maxRange2, _minRange2, _fov,  _maxAngularDifference;$/;"	m	class:g2o::PointSensorParameters
_maxAngularDifference	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    double _maxRange2, _minRange2, _fov,  _maxAngularDifference;$/;"	m	class:g2o::PointSensorParameters
_maxRange2	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    double _maxRange2, _minRange2, _fov,  _maxAngularDifference;$/;"	m	class:g2o::PointSensorParameters
_minRange2	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    double _maxRange2, _minRange2, _fov,  _maxAngularDifference;$/;"	m	class:g2o::PointSensorParameters
fov	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    double fov() const {return _fov;}$/;"	f	class:g2o::PointSensorParameters
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^namespace g2o {$/;"	n
maxAngularDifference	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    double maxAngularDifference() const { return _maxAngularDifference; }$/;"	f	class:g2o::PointSensorParameters
maxRange	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    double maxRange() const {return sqrt(_maxRange2);}$/;"	f	class:g2o::PointSensorParameters
minRange	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    double minRange() const {return sqrt(_minRange2);}$/;"	f	class:g2o::PointSensorParameters
setFov	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    void setFov(double fov_)  {_fov = fov_;}$/;"	f	class:g2o::PointSensorParameters
setMaxAngularDifference	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    void setMaxAngularDifference(double angularDifference) {_maxAngularDifference = angularDifference;}$/;"	f	class:g2o::PointSensorParameters
setMaxRange	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    void setMaxRange(double maxRange_)  {_maxRange2 = maxRange_*maxRange_;}$/;"	f	class:g2o::PointSensorParameters
setMinRange	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/pointsensorparameters.h	/^    void setMinRange(double minRange_)  {_minRange2 = minRange_*minRange_;}$/;"	f	class:g2o::PointSensorParameters
G2O_ODOMETRY_SENSOR_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry.h	28;"	d
SensorOdometry	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry.h	/^  SensorOdometry(const std::string name_): BinarySensor<R, E, O> (name_){};$/;"	f	class:g2o::SensorOdometry
SensorOdometry	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry.h	/^  class SensorOdometry: public BinarySensor<R, E, O > {$/;"	c	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry.h	/^namespace g2o {$/;"	n
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry.h	/^    virtual void sense(){$/;"	f	class:g2o::SensorOdometry
SensorOdometry2D	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry2d.cpp	/^  SensorOdometry2D::SensorOdometry2D(const std::string& name_):$/;"	f	class:g2o::SensorOdometry2D
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry2d.cpp	/^  void SensorOdometry2D::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorOdometry2D
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry2d.cpp	/^namespace g2o {$/;"	n	file:
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry2d.cpp	/^  void SensorOdometry2D::sense(){$/;"	f	class:g2o::SensorOdometry2D
G2O_SENSOR_ODOMETRY2D_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry2d.h	28;"	d
PoseObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry2d.h	/^    typedef Robot2D::PoseObject PoseObject;$/;"	t	class:g2o::SensorOdometry2D
SensorOdometry2D	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry2d.h	/^  class G2O_SIMULATOR_API SensorOdometry2D: public BinarySensor<Robot2D, EdgeSE2, WorldObjectSE2 > {$/;"	c	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry2d.h	/^namespace g2o {$/;"	n
SensorOdometry3D	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry3d.cpp	/^  SensorOdometry3D::SensorOdometry3D(const std::string& name_):$/;"	f	class:g2o::SensorOdometry3D
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry3d.cpp	/^  void SensorOdometry3D::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorOdometry3D
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry3d.cpp	/^namespace g2o {$/;"	n	file:
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry3d.cpp	/^  void SensorOdometry3D::sense(){$/;"	f	class:g2o::SensorOdometry3D
G2O_SENSOR_ODOMETRY3D_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry3d.h	28;"	d
SensorOdometry3D	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry3d.h	/^  class G2O_SIMULATOR_API SensorOdometry3D: public BinarySensor<Robot3D, EdgeSE3, WorldObjectSE3 > {$/;"	c	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_odometry3d.h	/^namespace g2o {$/;"	n
SensorPointXY	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy.cpp	/^  SensorPointXY::SensorPointXY(const std::string& name_): BinarySensor<Robot2D, EdgeSE2PointXY, WorldObjectPointXY>(name_) {}$/;"	f	class:g2o::SensorPointXY
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy.cpp	/^  void SensorPointXY::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorPointXY
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy.cpp	/^namespace g2o{$/;"	n	file:
isVisible	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy.cpp	/^  bool SensorPointXY::isVisible(SensorPointXY::WorldObjectType* to){$/;"	f	class:g2o::SensorPointXY
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy.cpp	/^  void SensorPointXY::sense() {$/;"	f	class:g2o::SensorPointXY
G2O_SENSOR_POINTXY_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy.h	28;"	d
SensorPointXY	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy.h	/^  class G2O_SIMULATOR_API SensorPointXY: public PointSensorParameters, public BinarySensor<Robot2D, EdgeSE2PointXY, WorldObjectPointXY>{ $/;"	c	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy.h	/^namespace g2o {$/;"	n
SensorPointXYBearing	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_bearing.cpp	/^  SensorPointXYBearing::SensorPointXYBearing(const std::string& name_): BinarySensor<Robot2D, EdgeSE2PointXYBearing, WorldObjectPointXY>(name_) {$/;"	f	class:g2o::SensorPointXYBearing
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_bearing.cpp	/^  void SensorPointXYBearing::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorPointXYBearing
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_bearing.cpp	/^namespace g2o {$/;"	n	file:
isVisible	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_bearing.cpp	/^  bool SensorPointXYBearing::isVisible(SensorPointXYBearing::WorldObjectType* to){$/;"	f	class:g2o::SensorPointXYBearing
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_bearing.cpp	/^  void SensorPointXYBearing::sense() {$/;"	f	class:g2o::SensorPointXYBearing
G2O_SENSOR_POINTXY_BEARING_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_bearing.h	28;"	d
SensorPointXYBearing	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_bearing.h	/^  class G2O_SIMULATOR_API SensorPointXYBearing: public PointSensorParameters, public BinarySensor<Robot2D, EdgeSE2PointXYBearing, WorldObjectPointXY>{ $/;"	c	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_bearing.h	/^namespace g2o {$/;"	n
SensorPointXYOffset	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.cpp	/^  SensorPointXYOffset::SensorPointXYOffset(const std::string& name_): BinarySensor<Robot2D, EdgeSE2PointXYOffset, WorldObjectPointXY>(name_) {$/;"	f	class:g2o::SensorPointXYOffset
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.cpp	/^  void SensorPointXYOffset::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorPointXYOffset
addParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.cpp	/^  void SensorPointXYOffset::addParameters(){$/;"	f	class:g2o::SensorPointXYOffset
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.cpp	/^namespace g2o {$/;"	n	file:
isVisible	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.cpp	/^  bool SensorPointXYOffset::isVisible(SensorPointXYOffset::WorldObjectType* to){$/;"	f	class:g2o::SensorPointXYOffset
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.cpp	/^  void SensorPointXYOffset::sense() {$/;"	f	class:g2o::SensorPointXYOffset
G2O_SENSOR_POINTXY_OFFSET_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.h	28;"	d
RobotPoseType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.h	/^    typedef PoseVertexType::EstimateType RobotPoseType;$/;"	t	class:g2o::SensorPointXYOffset
SensorPointXYOffset	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.h	/^  class G2O_SIMULATOR_API SensorPointXYOffset: public PointSensorParameters, public BinarySensor<Robot2D, EdgeSE2PointXYOffset, WorldObjectPointXY>{ $/;"	c	namespace:g2o
_offsetParam	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.h	/^    ParameterSE2Offset* _offsetParam;$/;"	m	class:g2o::SensorPointXYOffset
_sensorPose	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.h	/^    RobotPoseType _sensorPose;$/;"	m	class:g2o::SensorPointXYOffset
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxy_offset.h	/^namespace g2o {$/;"	n
SensorPointXYZ	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.cpp	/^  SensorPointXYZ::SensorPointXYZ(const std::string& name_): BinarySensor<Robot3D, EdgeSE3PointXYZ, WorldObjectTrackXYZ>(name_) {$/;"	f	class:g2o::SensorPointXYZ
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.cpp	/^  void SensorPointXYZ::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorPointXYZ
addParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.cpp	/^  void SensorPointXYZ::addParameters(){$/;"	f	class:g2o::SensorPointXYZ
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.cpp	/^namespace g2o {$/;"	n	file:
isVisible	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.cpp	/^  bool SensorPointXYZ::isVisible(SensorPointXYZ::WorldObjectType* to){$/;"	f	class:g2o::SensorPointXYZ
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.cpp	/^  void SensorPointXYZ::sense() {$/;"	f	class:g2o::SensorPointXYZ
G2O_SENSOR_POINTXYZ_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.h	28;"	d
RobotPoseType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.h	/^    typedef PoseVertexType::EstimateType RobotPoseType;$/;"	t	class:g2o::SensorPointXYZ
SensorPointXYZ	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.h	/^  class G2O_SIMULATOR_API SensorPointXYZ: public PointSensorParameters, public BinarySensor<Robot3D, EdgeSE3PointXYZ, WorldObjectTrackXYZ>{$/;"	c	namespace:g2o
_offsetParam	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.h	/^    ParameterSE3Offset* _offsetParam;$/;"	m	class:g2o::SensorPointXYZ
_sensorPose	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.h	/^    RobotPoseType _sensorPose;$/;"	m	class:g2o::SensorPointXYZ
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.h	/^namespace g2o {$/;"	n
offsetParam	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz.h	/^    ParameterSE3Offset* offsetParam() {return _offsetParam;};$/;"	f	class:g2o::SensorPointXYZ
SensorPointXYZDepth	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.cpp	/^  SensorPointXYZDepth::SensorPointXYZDepth(const std::string& name_): BinarySensor<Robot3D, EdgeSE3PointXYZDepth, WorldObjectTrackXYZ>(name_) {$/;"	f	class:g2o::SensorPointXYZDepth
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.cpp	/^  void SensorPointXYZDepth::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorPointXYZDepth
addParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.cpp	/^  void SensorPointXYZDepth::addParameters(){$/;"	f	class:g2o::SensorPointXYZDepth
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.cpp	/^namespace g2o {$/;"	n	file:
isVisible	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.cpp	/^  bool SensorPointXYZDepth::isVisible(SensorPointXYZDepth::WorldObjectType* to){$/;"	f	class:g2o::SensorPointXYZDepth
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.cpp	/^  void SensorPointXYZDepth::sense() {$/;"	f	class:g2o::SensorPointXYZDepth
G2O_SENSOR_POINTXYZ_DEPTH_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.h	28;"	d
RobotPoseType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.h	/^    typedef PoseVertexType::EstimateType RobotPoseType;$/;"	t	class:g2o::SensorPointXYZDepth
SensorPointXYZDepth	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.h	/^  class G2O_SIMULATOR_API SensorPointXYZDepth: public PointSensorParameters, public BinarySensor<Robot3D, EdgeSE3PointXYZDepth, WorldObjectTrackXYZ>{$/;"	c	namespace:g2o
_offsetParam	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.h	/^    ParameterSE3Offset* _offsetParam;$/;"	m	class:g2o::SensorPointXYZDepth
_sensorPose	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.h	/^    RobotPoseType _sensorPose;$/;"	m	class:g2o::SensorPointXYZDepth
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.h	/^namespace g2o {$/;"	n
offsetParam	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_depth.h	/^    ParameterSE3Offset* offsetParam() {return _offsetParam;};$/;"	f	class:g2o::SensorPointXYZDepth
SensorPointXYZDisparity	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.cpp	/^  SensorPointXYZDisparity::SensorPointXYZDisparity(const std::string& name_): BinarySensor<Robot3D, EdgeSE3PointXYZDisparity, WorldObjectTrackXYZ>(name_) {$/;"	f	class:g2o::SensorPointXYZDisparity
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.cpp	/^  void SensorPointXYZDisparity::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorPointXYZDisparity
addParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.cpp	/^  void SensorPointXYZDisparity::addParameters(){$/;"	f	class:g2o::SensorPointXYZDisparity
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.cpp	/^namespace g2o {$/;"	n	file:
isVisible	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.cpp	/^  bool SensorPointXYZDisparity::isVisible(SensorPointXYZDisparity::WorldObjectType* to){$/;"	f	class:g2o::SensorPointXYZDisparity
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.cpp	/^  void SensorPointXYZDisparity::sense() {$/;"	f	class:g2o::SensorPointXYZDisparity
G2O_SENSOR_POINTXYZ_DISPARITY_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.h	28;"	d
RobotPoseType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.h	/^    typedef PoseVertexType::EstimateType RobotPoseType;$/;"	t	class:g2o::SensorPointXYZDisparity
SensorPointXYZDisparity	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.h	/^  class G2O_SIMULATOR_API SensorPointXYZDisparity: public PointSensorParameters, public BinarySensor<Robot3D, EdgeSE3PointXYZDisparity, WorldObjectTrackXYZ>{$/;"	c	namespace:g2o
_offsetParam	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.h	/^    ParameterSE3Offset* _offsetParam;$/;"	m	class:g2o::SensorPointXYZDisparity
_sensorPose	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.h	/^    RobotPoseType _sensorPose;$/;"	m	class:g2o::SensorPointXYZDisparity
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.h	/^namespace g2o {$/;"	n
offsetParam	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pointxyz_disparity.h	/^    ParameterSE3Offset* offsetParam() {return _offsetParam;};$/;"	f	class:g2o::SensorPointXYZDisparity
SensorPose2D	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.cpp	/^  SensorPose2D::SensorPose2D(const std::string& name_):$/;"	f	class:g2o::SensorPose2D
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.cpp	/^  void SensorPose2D::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorPose2D
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.cpp	/^namespace g2o{$/;"	n	file:
isVisible	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.cpp	/^  bool SensorPose2D::isVisible(SensorPose2D::WorldObjectType* to){$/;"	f	class:g2o::SensorPose2D
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.cpp	/^  void SensorPose2D::sense() {$/;"	f	class:g2o::SensorPose2D
G2O_SENSOR_POSE2D_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.h	28;"	d
SensorPose2D	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.h	/^  class G2O_SIMULATOR_API SensorPose2D : public PointSensorParameters, public BinarySensor<Robot2D, EdgeSE2, WorldObjectSE2>  { $/;"	c	namespace:g2o
_posesToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.h	/^    std::set<PoseObject*> _posesToIgnore;$/;"	m	class:g2o::SensorPose2D
_stepsToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.h	/^    int _stepsToIgnore;$/;"	m	class:g2o::SensorPose2D
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.h	/^namespace g2o {$/;"	n
setStepsToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.h	/^    void setStepsToIgnore(int stepsToIgnore_) {_stepsToIgnore = stepsToIgnore_;}$/;"	f	class:g2o::SensorPose2D
stepsToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose2d.h	/^    int stepsToIgnore() const {return _stepsToIgnore;}$/;"	f	class:g2o::SensorPose2D
SensorPose3D	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.cpp	/^  SensorPose3D::SensorPose3D(const std::string& name_): BinarySensor<Robot3D, EdgeSE3, WorldObjectSE3>(name_){  $/;"	f	class:g2o::SensorPose3D
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.cpp	/^  void SensorPose3D::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorPose3D
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.cpp	/^namespace g2o {$/;"	n	file:
isVisible	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.cpp	/^  bool SensorPose3D::isVisible(SensorPose3D::WorldObjectType* to){$/;"	f	class:g2o::SensorPose3D
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.cpp	/^  void SensorPose3D::sense() {$/;"	f	class:g2o::SensorPose3D
G2O_SENSOR_POSE3D_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.h	28;"	d
SensorPose3D	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.h	/^  class G2O_SIMULATOR_API SensorPose3D : public PointSensorParameters, public BinarySensor<Robot3D, EdgeSE3, WorldObjectSE3>  { $/;"	c	namespace:g2o
_posesToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.h	/^    std::set<PoseObject*> _posesToIgnore;$/;"	m	class:g2o::SensorPose3D
_stepsToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.h	/^    int _stepsToIgnore;$/;"	m	class:g2o::SensorPose3D
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.h	/^namespace g2o {$/;"	n
setStepsToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.h	/^    void setStepsToIgnore(int stepsToIgnore_) {_stepsToIgnore = stepsToIgnore_;}$/;"	f	class:g2o::SensorPose3D
stepsToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d.h	/^    int stepsToIgnore() const {return _stepsToIgnore;}$/;"	f	class:g2o::SensorPose3D
SensorPose3DOffset	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.cpp	/^  SensorPose3DOffset::SensorPose3DOffset(const std::string& name_): $/;"	f	class:g2o::SensorPose3DOffset
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.cpp	/^  void SensorPose3DOffset::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorPose3DOffset
addParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.cpp	/^  void SensorPose3DOffset::addParameters(){$/;"	f	class:g2o::SensorPose3DOffset
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.cpp	/^namespace g2o {$/;"	n	file:
isVisible	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.cpp	/^  bool SensorPose3DOffset::isVisible(SensorPose3DOffset::WorldObjectType* to){$/;"	f	class:g2o::SensorPose3DOffset
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.cpp	/^  void SensorPose3DOffset::sense() {$/;"	f	class:g2o::SensorPose3DOffset
G2O_SENSOR_POSE3D_OFFSET_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	28;"	d
SensorPose3DOffset	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	/^  class SensorPose3DOffset : public PointSensorParameters, public BinarySensor<Robot3D, EdgeSE3Offset, WorldObjectSE3>  { $/;"	c	namespace:g2o
_offsetParam1	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	/^    ParameterSE3Offset* _offsetParam1, *_offsetParam2;$/;"	m	class:g2o::SensorPose3DOffset
_offsetParam2	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	/^    ParameterSE3Offset* _offsetParam1, *_offsetParam2;$/;"	m	class:g2o::SensorPose3DOffset
_posesToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	/^    std::set<PoseObject*> _posesToIgnore;$/;"	m	class:g2o::SensorPose3DOffset
_stepsToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	/^    int _stepsToIgnore;$/;"	m	class:g2o::SensorPose3DOffset
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	/^namespace g2o {$/;"	n
offsetParam1	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	/^    ParameterSE3Offset* offsetParam1() {return _offsetParam1;};$/;"	f	class:g2o::SensorPose3DOffset
offsetParam2	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	/^    ParameterSE3Offset* offsetParam2() {return _offsetParam2;};$/;"	f	class:g2o::SensorPose3DOffset
setStepsToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	/^    void setStepsToIgnore(int stepsToIgnore_) {_stepsToIgnore = stepsToIgnore_;}$/;"	f	class:g2o::SensorPose3DOffset
stepsToIgnore	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_pose3d_offset.h	/^    int stepsToIgnore() const {return _stepsToIgnore;}$/;"	f	class:g2o::SensorPose3DOffset
SensorSE3Prior	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.cpp	/^  SensorSE3Prior::SensorSE3Prior(const std::string& name_): UnarySensor<Robot3D, EdgeSE3Prior>(name_) {$/;"	f	class:g2o::SensorSE3Prior
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.cpp	/^  void SensorSE3Prior::addNoise(EdgeType* e){$/;"	f	class:g2o::SensorSE3Prior
addParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.cpp	/^  void SensorSE3Prior::addParameters(){$/;"	f	class:g2o::SensorSE3Prior
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.cpp	/^namespace g2o {$/;"	n	file:
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.cpp	/^  void SensorSE3Prior::sense() {$/;"	f	class:g2o::SensorSE3Prior
G2O_SENSOR_SE3_PRIOR_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.h	28;"	d
RobotPoseType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.h	/^    typedef PoseVertexType::EstimateType RobotPoseType;$/;"	t	class:g2o::SensorSE3Prior
SensorSE3Prior	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.h	/^  class G2O_SIMULATOR_API SensorSE3Prior: public PointSensorParameters, public UnarySensor<Robot3D, EdgeSE3Prior>{$/;"	c	namespace:g2o
_offsetParam	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.h	/^    ParameterSE3Offset* _offsetParam;$/;"	m	class:g2o::SensorSE3Prior
_sensorPose	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.h	/^    RobotPoseType _sensorPose;$/;"	m	class:g2o::SensorSE3Prior
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.h	/^namespace g2o {$/;"	n
offsetParam	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/sensor_se3_prior.h	/^    ParameterSE3Offset* offsetParam() {return _offsetParam;};$/;"	f	class:g2o::SensorSE3Prior
addParameter	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  bool World::addParameter(Parameter* param){$/;"	f	class:g2o::World
addRobot	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  bool World::addRobot(BaseRobot* robot){$/;"	f	class:g2o::World
addSensor	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  bool BaseRobot::addSensor(BaseSensor* sensor){$/;"	f	class:g2o::BaseRobot
addWorldObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  bool World::addWorldObject(BaseWorldObject* object){$/;"	f	class:g2o::World
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^namespace g2o{$/;"	n	file:
graph	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  OptimizableGraph* BaseRobot::graph() {$/;"	f	class:g2o::BaseRobot
graph	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  OptimizableGraph* BaseSensor::graph() {$/;"	f	class:g2o::BaseSensor
graph	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  OptimizableGraph* BaseWorldObject::graph() {$/;"	f	class:g2o::BaseWorldObject
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  void BaseRobot::sense() {$/;"	f	class:g2o::BaseRobot
setVertex	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  void BaseWorldObject::setVertex(OptimizableGraph::Vertex* vertex_){ $/;"	f	class:g2o::BaseWorldObject
world	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  World* BaseSensor::world() {$/;"	f	class:g2o::BaseSensor
~BaseWorldObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.cpp	/^  BaseWorldObject::~BaseWorldObject() {}$/;"	f	class:g2o::BaseWorldObject
BaseRobot	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  BaseRobot(World* world_, const std::string& name_){_world = world_; _name = name_; }$/;"	f	class:g2o::BaseRobot
BaseRobot	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^class G2O_SIMULATOR_API BaseRobot {$/;"	c	namespace:g2o
BaseSensor	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  BaseSensor(const std::string& name_){ _name = name_;}$/;"	f	class:g2o::BaseSensor
BaseSensor	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^class G2O_SIMULATOR_API BaseSensor{$/;"	c	namespace:g2o
BaseWorldObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  BaseWorldObject(World* world_=0) {_world = world_; _vertex=0;}$/;"	f	class:g2o::BaseWorldObject
BaseWorldObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^class G2O_SIMULATOR_API BaseWorldObject{$/;"	c	namespace:g2o
BinarySensor	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  BinarySensor(const std::string& name): BaseSensor(name) {$/;"	f	class:g2o::BinarySensor
BinarySensor	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^class BinarySensor: public BaseSensor {$/;"	c	namespace:g2o
EdgeType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef EdgeType_ EdgeType;$/;"	t	class:g2o::BinarySensor
EdgeType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef EdgeType_ EdgeType;$/;"	t	class:g2o::UnarySensor
EstimateType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename VertexType_::EstimateType EstimateType;$/;"	t	class:g2o::WorldObject
G2O_SIMULATOR_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	28;"	d
InformationType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename EdgeType::InformationType InformationType;$/;"	t	class:g2o::BinarySensor
InformationType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename EdgeType::InformationType InformationType;$/;"	t	class:g2o::UnarySensor
PoseObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef RobotPoseObject PoseObject;$/;"	t	class:g2o::Robot
PoseObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename RobotType::PoseObject PoseObject;$/;"	t	class:g2o::BinarySensor
PoseObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename RobotType::PoseObject PoseObject;$/;"	t	class:g2o::UnarySensor
PoseType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename PoseObject::EstimateType PoseType;$/;"	t	class:g2o::Robot
PoseVertexType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename RobotType::PoseObject::VertexType PoseVertexType;$/;"	t	class:g2o::BinarySensor
PoseVertexType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename RobotType::PoseObject::VertexType PoseVertexType;$/;"	t	class:g2o::UnarySensor
Robot	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^ Robot(World* world_, const std::string& name_): BaseRobot(world_, name_){}$/;"	f	class:g2o::Robot
Robot	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^class Robot: public BaseRobot{$/;"	c	namespace:g2o
RobotType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef RobotType_ RobotType;$/;"	t	class:g2o::BinarySensor
RobotType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef RobotType_ RobotType;$/;"	t	class:g2o::UnarySensor
TrajectoryType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef std::list<PoseObject*> TrajectoryType;$/;"	t	class:g2o::Robot
TrajectoryType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename RobotType::TrajectoryType TrajectoryType;$/;"	t	class:g2o::BinarySensor
TrajectoryType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename RobotType::TrajectoryType TrajectoryType;$/;"	t	class:g2o::UnarySensor
UnarySensor	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  UnarySensor(const std::string& name): BaseSensor(name) {$/;"	f	class:g2o::UnarySensor
UnarySensor	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^class UnarySensor: public BaseSensor {$/;"	c	namespace:g2o
VertexType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef VertexType_ VertexType;$/;"	t	class:g2o::WorldObject
VertexType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename PoseObject::VertexType VertexType;$/;"	t	class:g2o::Robot
VertexType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef typename WorldObjectType::VertexType VertexType;$/;"	t	class:g2o::BinarySensor
World	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  World(OptimizableGraph* graph_) {_graph = graph_; _runningId=0; _paramId=0;}$/;"	f	class:g2o::World
World	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^class G2O_SIMULATOR_API World{$/;"	c	namespace:g2o
WorldObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  WorldObject(World* world_=0): BaseWorldObject(world_){$/;"	f	class:g2o::WorldObject
WorldObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^class WorldObject: public BaseWorldObject, VertexType_{$/;"	c	namespace:g2o
WorldObjectType	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  typedef WorldObjectType_ WorldObjectType;$/;"	t	class:g2o::BinarySensor
_graph	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  OptimizableGraph* _graph;$/;"	m	class:g2o::BaseWorldObject
_graph	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  OptimizableGraph* _graph;$/;"	m	class:g2o::World
_information	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  InformationType _information;$/;"	m	class:g2o::BinarySensor
_information	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  InformationType _information;$/;"	m	class:g2o::UnarySensor
_name	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  std::string _name;$/;"	m	class:g2o::BaseRobot
_name	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  std::string _name;$/;"	m	class:g2o::BaseSensor
_objects	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  std::set<BaseWorldObject*> _objects;$/;"	m	class:g2o::World
_paramId	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  int _paramId;$/;"	m	class:g2o::World
_parameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  std::vector<Parameter*> _parameters;$/;"	m	class:g2o::BaseSensor
_pose	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  PoseType _pose;$/;"	m	class:g2o::Robot
_robot	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  BaseRobot* _robot;$/;"	m	class:g2o::BaseSensor
_robotPoseObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  PoseObject* _robotPoseObject;$/;"	m	class:g2o::BinarySensor
_robotPoseObject	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  PoseObject* _robotPoseObject;$/;"	m	class:g2o::UnarySensor
_robots	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  std::set<BaseRobot*> _robots;$/;"	m	class:g2o::World
_runningId	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  int _runningId;$/;"	m	class:g2o::World
_sampler	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  GaussianSampler<typename EdgeType::ErrorVector, InformationType> _sampler;$/;"	m	class:g2o::BinarySensor
_sampler	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  GaussianSampler<typename EdgeType::ErrorVector, InformationType> _sampler;$/;"	m	class:g2o::UnarySensor
_sensors	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  std::set<BaseSensor*> _sensors;$/;"	m	class:g2o::BaseRobot
_trajectory	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  TrajectoryType _trajectory;$/;"	m	class:g2o::Robot
_vertex	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  OptimizableGraph::Vertex* _vertex;$/;"	m	class:g2o::BaseWorldObject
_world	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  World* _world;$/;"	m	class:g2o::BaseRobot
_world	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  World* _world;$/;"	m	class:g2o::BaseWorldObject
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  virtual void addNoise(EdgeType*){};$/;"	f	class:g2o::BinarySensor
addNoise	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  virtual void addNoise(EdgeType*){};$/;"	f	class:g2o::UnarySensor
addParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  virtual void addParameters() {}$/;"	f	class:g2o::BaseSensor
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^namespace g2o{$/;"	n
graph	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  OptimizableGraph* graph() {return _graph;}$/;"	f	class:g2o::World
information	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  const InformationType& information() {return _information; }$/;"	f	class:g2o::BinarySensor
information	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  const InformationType& information() {return _information; }$/;"	f	class:g2o::UnarySensor
mkEdge	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  EdgeType* mkEdge(){$/;"	f	class:g2o::UnarySensor
mkEdge	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  EdgeType* mkEdge(WorldObjectType* object){$/;"	f	class:g2o::BinarySensor
move	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  virtual void move(const PoseType& pose_) {$/;"	f	class:g2o::Robot
name	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  const std::string& name() const {return _name;}$/;"	f	class:g2o::BaseRobot
objects	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  std::set<BaseWorldObject*>& objects() {return _objects;}$/;"	f	class:g2o::World
parameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  std::vector<Parameter*> parameters() {return _parameters;}$/;"	f	class:g2o::BaseSensor
pose	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  const PoseType& pose() const {return _pose;}$/;"	f	class:g2o::Robot
relativeMove	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  virtual void relativeMove(const PoseType& movement_) {$/;"	f	class:g2o::Robot
robot	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  inline BaseRobot* robot() {return _robot;}$/;"	f	class:g2o::BaseSensor
robots	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  std::set<BaseRobot*>&  robots() {return _robots; }$/;"	f	class:g2o::World
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  virtual void sense() {$/;"	f	class:g2o::BinarySensor
sense	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  virtual void sense() {$/;"	f	class:g2o::UnarySensor
sensors	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  const std::set<BaseSensor*> sensors() {return _sensors;}$/;"	f	class:g2o::BaseRobot
setInformation	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  void setInformation(const InformationType& information_ ) {$/;"	f	class:g2o::BinarySensor
setInformation	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  void setInformation(const InformationType& information_ ) {$/;"	f	class:g2o::UnarySensor
setRobot	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  inline void setRobot(BaseRobot* robot_) {_robot = robot_;}$/;"	f	class:g2o::BaseSensor
setVertex	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  virtual void setVertex(OptimizableGraph::Vertex* vertex_){$/;"	f	class:g2o::WorldObject
setWorld	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  void setWorld(World* world_) {_world = world_;}$/;"	f	class:g2o::BaseRobot
setWorld	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  void setWorld(World* world_) {_world = world_;}$/;"	f	class:g2o::BaseWorldObject
trajectory	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  TrajectoryType& trajectory() {return _trajectory;}$/;"	f	class:g2o::Robot
vertex	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  OptimizableGraph::Vertex* vertex() {return _vertex;}$/;"	f	class:g2o::BaseWorldObject
vertex	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  VertexType* vertex() {$/;"	f	class:g2o::WorldObject
world	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  World* world() {return _world;}$/;"	f	class:g2o::BaseRobot
world	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator.h	/^  World* world() {return _world;}$/;"	f	class:g2o::BaseWorldObject
G2O_SIMULATOR2D_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator2d.h	28;"	d
G2O_SIMULATOR2D_BASE_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator2d_base.h	28;"	d
Robot2D	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator2d_base.h	/^  typedef Robot<WorldObjectSE2>  Robot2D;$/;"	t	namespace:g2o
WorldObjectPointXY	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator2d_base.h	/^  typedef WorldObject<VertexPointXY> WorldObjectPointXY;$/;"	t	namespace:g2o
WorldObjectSE2	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator2d_base.h	/^  typedef WorldObject<VertexSE2> WorldObjectSE2;$/;"	t	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator2d_base.h	/^namespace g2o {$/;"	n
G2O_SIMULATOR3D_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator3d.h	28;"	d
G2O_SIMULATOR3D_BASE_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator3d_base.h	28;"	d
Robot3D	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator3d_base.h	/^  typedef Robot<WorldObjectSE3>  Robot3D;$/;"	t	namespace:g2o
WorldObjectSE3	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator3d_base.h	/^  typedef WorldObject<VertexSE3> WorldObjectSE3;$/;"	t	namespace:g2o
WorldObjectTrackXYZ	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator3d_base.h	/^  typedef WorldObject<VertexPointXYZ> WorldObjectTrackXYZ;$/;"	t	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simulator3d_base.h	/^namespace g2o {$/;"	n
clipSegmentCircle	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simutils.cpp	/^  int clipSegmentCircle(Vector2d& p1, Vector2d& p2, double r) {$/;"	f	namespace:g2o
clipSegmentFov	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simutils.cpp	/^  int clipSegmentFov(Vector2d& p1, Vector2d& p2, double min, double max){$/;"	f	namespace:g2o
clipSegmentLine	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simutils.cpp	/^  int clipSegmentLine(Vector2d& p1, Vector2d& p2, double a, double b, double c ){$/;"	f	namespace:g2o
computeLineParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simutils.cpp	/^  Vector2d computeLineParameters(const Vector2d& p1, const Vector2d& p2){$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simutils.cpp	/^namespace g2o {$/;"	n	file:
G2O_SIMUTILS_H_	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simutils.h	28;"	d
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/simutils.h	/^namespace g2o {$/;"	n
main	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/test_simulator2d.cpp	/^int main(int argc, char** argv) {$/;"	f
main	trunk/EXTERNAL/g2o/g2o/apps/g2o_simulator/test_simulator3d.cpp	/^int main(int argc, char** argv) {$/;"	f
G2oQGLViewer	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^G2oQGLViewer::G2oQGLViewer(QWidget* parent, const QGLWidget* shareWidget, Qt::WFlags flags) :$/;"	f	class:g2o::G2oQGLViewer
StandardCamera	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^      StandardCamera() : _standard(true) {};$/;"	f	class:g2o::<anonymous>::StandardCamera
StandardCamera	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^  class StandardCamera : public qglviewer::Camera$/;"	c	namespace:g2o::<anonymous>	file:
_standard	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^      bool _standard;$/;"	m	class:g2o::<anonymous>::StandardCamera	file:
draw	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^void G2oQGLViewer::draw()$/;"	f	class:g2o::G2oQGLViewer
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^namespace g2o {$/;"	n	file:
init	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^void G2oQGLViewer::init()$/;"	f	class:g2o::G2oQGLViewer
setStandard	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^      void setStandard(bool s) { _standard = s;}$/;"	f	class:g2o::<anonymous>::StandardCamera
setUpdateDisplay	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^void G2oQGLViewer::setUpdateDisplay(bool updateDisplay)$/;"	f	class:g2o::G2oQGLViewer
standard	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^      bool standard() const {return _standard;}$/;"	f	class:g2o::<anonymous>::StandardCamera
zFar	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^      float zFar() const$/;"	f	class:g2o::<anonymous>::StandardCamera
zNear	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^      float zNear() const {$/;"	f	class:g2o::<anonymous>::StandardCamera
~G2oQGLViewer	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.cpp	/^G2oQGLViewer::~G2oQGLViewer()$/;"	f	class:g2o::G2oQGLViewer
G2O_QGL_GRAPH_VIEWER_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.h	20;"	d
G2oQGLViewer	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.h	/^  class G2O_VIEWER_API G2oQGLViewer : public QGLViewer$/;"	c	namespace:g2o
_drawActionParameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.h	/^      DrawAction::Parameters* _drawActionParameters;$/;"	m	class:g2o::G2oQGLViewer
_drawActions	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.h	/^      HyperGraphElementAction* _drawActions;$/;"	m	class:g2o::G2oQGLViewer
_drawList	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.h	/^      GLuint _drawList;$/;"	m	class:g2o::G2oQGLViewer
_updateDisplay	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.h	/^      bool _updateDisplay;$/;"	m	class:g2o::G2oQGLViewer
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.h	/^namespace g2o {$/;"	n
graph	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.h	/^      SparseOptimizer* graph;$/;"	m	class:g2o::G2oQGLViewer
parameters	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.h	/^      DrawAction::Parameters* parameters() { return _drawActionParameters;}$/;"	f	class:g2o::G2oQGLViewer
updateDisplay	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_qglviewer.h	/^      bool updateDisplay() const { return _updateDisplay;}$/;"	f	class:g2o::G2oQGLViewer
main	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_viewer.cpp	/^int main(int argc, char** argv)$/;"	f
G2O_VIEWER_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_viewer_api.h	11;"	d
G2O_VIEWER_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_viewer_api.h	13;"	d
G2O_VIEWER_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_viewer_api.h	16;"	d
G2O_VIEWER_API	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_viewer_api.h	21;"	d
G2O_VIEWER_API_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/g2o_viewer_api.h	2;"	d
GuiHyperGraphAction	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/gui_hyper_graph_action.cpp	/^GuiHyperGraphAction::GuiHyperGraphAction() :$/;"	f	class:g2o::GuiHyperGraphAction
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/gui_hyper_graph_action.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/gui_hyper_graph_action.cpp	/^HyperGraphAction* GuiHyperGraphAction::operator()(const HyperGraph* graph, Parameters* parameters)$/;"	f	class:g2o::GuiHyperGraphAction
~GuiHyperGraphAction	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/gui_hyper_graph_action.cpp	/^GuiHyperGraphAction::~GuiHyperGraphAction()$/;"	f	class:g2o::GuiHyperGraphAction
G2O_GUI_HYPER_GRAPH_ACTION_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/gui_hyper_graph_action.h	20;"	d
GuiHyperGraphAction	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/gui_hyper_graph_action.h	/^  class G2O_VIEWER_API GuiHyperGraphAction : public HyperGraphAction$/;"	c	namespace:g2o
dumpScreenshots	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/gui_hyper_graph_action.h	/^      bool dumpScreenshots;$/;"	m	class:g2o::GuiHyperGraphAction
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/gui_hyper_graph_action.h	/^namespace g2o {$/;"	n
viewer	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/gui_hyper_graph_action.h	/^      G2oQGLViewer* viewer;   \/\/\/< the viewer which visualizes the graph$/;"	m	class:g2o::GuiHyperGraphAction
MainWindow	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^MainWindow::MainWindow(QWidget * parent, Qt::WindowFlags flags) :$/;"	f	class:MainWindow
allocateSolver	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^bool MainWindow::allocateSolver(bool& allocatedNewSolver)$/;"	f	class:MainWindow
fixGraph	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::fixGraph()$/;"	f	class:MainWindow
load	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^bool MainWindow::load(const QString& filename)$/;"	f	class:MainWindow
loadFromFile	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^bool MainWindow::loadFromFile(const QString& filename)$/;"	f	class:MainWindow
on_actionDefault_Background_triggered	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_actionDefault_Background_triggered(bool)$/;"	f	class:MainWindow
on_actionLoad_Viewer_State_triggered	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_actionLoad_Viewer_State_triggered(bool)$/;"	f	class:MainWindow
on_actionLoad_triggered	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_actionLoad_triggered(bool)$/;"	f	class:MainWindow
on_actionProperties_triggered	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_actionProperties_triggered(bool)$/;"	f	class:MainWindow
on_actionQuit_triggered	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_actionQuit_triggered(bool)$/;"	f	class:MainWindow
on_actionSave_Screenshot_triggered	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_actionSave_Screenshot_triggered(bool)$/;"	f	class:MainWindow
on_actionSave_Viewer_State_triggered	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_actionSave_Viewer_State_triggered(bool)$/;"	f	class:MainWindow
on_actionSave_triggered	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_actionSave_triggered(bool)$/;"	f	class:MainWindow
on_actionWhite_Background_triggered	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_actionWhite_Background_triggered(bool)$/;"	f	class:MainWindow
on_btnForceStop_clicked	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_btnForceStop_clicked()$/;"	f	class:MainWindow
on_btnInitialGuess_clicked	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_btnInitialGuess_clicked()$/;"	f	class:MainWindow
on_btnOptimize_clicked	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_btnOptimize_clicked()$/;"	f	class:MainWindow
on_btnOptimizerParamaters_clicked	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_btnOptimizerParamaters_clicked()$/;"	f	class:MainWindow
on_btnSetZero_clicked	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::on_btnSetZero_clicked()$/;"	f	class:MainWindow
prepare	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^bool MainWindow::prepare()$/;"	f	class:MainWindow
setRobustKernel	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::setRobustKernel()$/;"	f	class:MainWindow
updateDisplayedSolvers	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::updateDisplayedSolvers()$/;"	f	class:MainWindow
updateRobustKernels	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^void MainWindow::updateRobustKernels()$/;"	f	class:MainWindow
~MainWindow	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.cpp	/^MainWindow::~MainWindow()$/;"	f	class:MainWindow
G2O_MAIN_WINDOW_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.h	20;"	d
MainWindow	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.h	/^class G2O_VIEWER_API MainWindow : public QMainWindow, public Ui::BaseMainWindow$/;"	c
_currentOptimizationAlgorithmProperty	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.h	/^    g2o::OptimizationAlgorithmProperty _currentOptimizationAlgorithmProperty;$/;"	m	class:MainWindow
_currentSolver	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.h	/^    g2o::OptimizationAlgorithm* _currentSolver;$/;"	m	class:MainWindow
_forceStopFlag	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.h	/^    bool _forceStopFlag;$/;"	m	class:MainWindow
_knownSolvers	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.h	/^    std::vector<g2o::OptimizationAlgorithmProperty> _knownSolvers;$/;"	m	class:MainWindow
_lastSolver	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.h	/^    int _lastSolver;$/;"	m	class:MainWindow
_optimizerPropertiesWidget	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.h	/^    PropertiesWidget* _optimizerPropertiesWidget;$/;"	m	class:MainWindow
_viewerPropertiesWidget	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.h	/^    ViewerPropertiesWidget* _viewerPropertiesWidget;$/;"	m	class:MainWindow
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/main_window.h	/^namespace g2o {$/;"	n
PropertiesWidget	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.cpp	/^PropertiesWidget::PropertiesWidget(QWidget * parent, Qt::WindowFlags f) :$/;"	f	class:PropertiesWidget
applyProperties	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.cpp	/^void PropertiesWidget::applyProperties()$/;"	f	class:PropertiesWidget
humanReadablePropName	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.cpp	/^std::string PropertiesWidget::humanReadablePropName(const std::string& propertyName) const$/;"	f	class:PropertiesWidget
on_btnApply_clicked	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.cpp	/^void PropertiesWidget::on_btnApply_clicked()$/;"	f	class:PropertiesWidget
on_btnOK_clicked	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.cpp	/^void PropertiesWidget::on_btnOK_clicked()$/;"	f	class:PropertiesWidget
setProperties	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.cpp	/^void PropertiesWidget::setProperties(PropertyMap* properties)$/;"	f	class:PropertiesWidget
updateDisplayedProperties	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.cpp	/^void PropertiesWidget::updateDisplayedProperties()$/;"	f	class:PropertiesWidget
~PropertiesWidget	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.cpp	/^PropertiesWidget::~PropertiesWidget()$/;"	f	class:PropertiesWidget
G2O_PROPERTIES_WINDOW_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.h	20;"	d
PropertiesWidget	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.h	/^class G2O_VIEWER_API PropertiesWidget : public QDialog, public Ui::BasePropertiesWidget$/;"	c
_propNames	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.h	/^    std::vector<std::string> _propNames;$/;"	m	class:PropertiesWidget
_properties	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.h	/^    g2o::PropertyMap* _properties;$/;"	m	class:PropertiesWidget
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/properties_widget.h	/^namespace g2o$/;"	n
SleepThread	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/run_g2o_viewer.cpp	/^class SleepThread : public QThread$/;"	c	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/run_g2o_viewer.cpp	/^namespace g2o {$/;"	n	file:
run	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/run_g2o_viewer.cpp	/^int RunG2OViewer::run(int argc, char** argv, CommandArgs& arg)$/;"	f	class:g2o::RunG2OViewer
RunG2OViewer	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/run_g2o_viewer.h	/^  class G2O_VIEWER_API RunG2OViewer$/;"	c	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/run_g2o_viewer.h	/^namespace g2o {$/;"	n
StreamRedirect	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.cpp	/^StreamRedirect::StreamRedirect(std::ostream &stream, QPlainTextEdit* te):$/;"	f	class:StreamRedirect
overflow	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.cpp	/^std::char_traits<char>::int_type StreamRedirect::overflow(int_type v)$/;"	f	class:StreamRedirect
xsputn	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.cpp	/^std::streamsize StreamRedirect::xsputn(const char *p, std::streamsize n)$/;"	f	class:StreamRedirect
~StreamRedirect	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.cpp	/^StreamRedirect::~StreamRedirect()$/;"	f	class:StreamRedirect
G2O_STREAM_REDIRECT_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.h	18;"	d
StreamRedirect	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.h	/^class G2O_VIEWER_API StreamRedirect : public std::basic_streambuf<char>$/;"	c
_buffer	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.h	/^    std::string _buffer;$/;"	m	class:StreamRedirect
_mutex	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.h	/^    QMutex _mutex;$/;"	m	class:StreamRedirect
_old_buf	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.h	/^    std::streambuf* _old_buf;$/;"	m	class:StreamRedirect
_stream	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.h	/^    std::ostream& _stream;$/;"	m	class:StreamRedirect
_te	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.h	/^    QPlainTextEdit* _te;$/;"	m	class:StreamRedirect
int_type	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/stream_redirect.h	/^    typedef std::char_traits<char>::int_type int_type;$/;"	t	class:StreamRedirect
ViewerPropertiesWidget	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/viewer_properties_widget.cpp	/^ViewerPropertiesWidget::ViewerPropertiesWidget(QWidget * parent, Qt::WindowFlags f) :$/;"	f	class:ViewerPropertiesWidget
applyProperties	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/viewer_properties_widget.cpp	/^void ViewerPropertiesWidget::applyProperties()$/;"	f	class:ViewerPropertiesWidget
demangleName	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/viewer_properties_widget.cpp	/^static std::string demangleName(const std::string& fullPropName)$/;"	f	file:
humanReadablePropName	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/viewer_properties_widget.cpp	/^std::string ViewerPropertiesWidget::humanReadablePropName(const std::string& propertyName) const$/;"	f	class:ViewerPropertiesWidget
setViewer	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/viewer_properties_widget.cpp	/^void ViewerPropertiesWidget::setViewer(g2o::G2oQGLViewer* viewer)$/;"	f	class:ViewerPropertiesWidget
~ViewerPropertiesWidget	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/viewer_properties_widget.cpp	/^ViewerPropertiesWidget::~ViewerPropertiesWidget()$/;"	f	class:ViewerPropertiesWidget
G2O_VIEWER_PROPERTIES_WIDGET_H	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/viewer_properties_widget.h	20;"	d
ViewerPropertiesWidget	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/viewer_properties_widget.h	/^class G2O_VIEWER_API ViewerPropertiesWidget : public PropertiesWidget$/;"	c
_viewer	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/viewer_properties_widget.h	/^    g2o::G2oQGLViewer* _viewer;$/;"	m	class:ViewerPropertiesWidget
g2o	trunk/EXTERNAL/g2o/g2o/apps/g2o_viewer/viewer_properties_widget.h	/^namespace g2o$/;"	n
BaseBinaryEdge	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      BaseBinaryEdge() : BaseEdge<D,E>(),$/;"	f	class:g2o::BaseBinaryEdge
BaseBinaryEdge	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^  class BaseBinaryEdge : public BaseEdge<D, E>$/;"	c	namespace:g2o
Di	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      static const int Di = VertexXiType::Dimension;$/;"	m	class:g2o::BaseBinaryEdge
Dimension	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      static const int Dimension = BaseEdge<D, E>::Dimension;$/;"	m	class:g2o::BaseBinaryEdge
Dimension	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      static const int Dimension = BaseEdge<D, E>::Dimension;$/;"	m	class:g2o::BaseBinaryEdge::E
Dj	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      static const int Dj = VertexXjType::Dimension;$/;"	m	class:g2o::BaseBinaryEdge
ErrorVector	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      typedef typename BaseEdge<D,E>::ErrorVector ErrorVector;$/;"	t	class:g2o::BaseBinaryEdge
G2O_BASE_BINARY_EDGE_H	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	28;"	d
HessianBlockTransposedType	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      typedef Map<Matrix<double, Dj, Di>, Matrix<double, Dj, Di>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockTransposedType;$/;"	t	class:g2o::BaseBinaryEdge
HessianBlockType	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      typedef Map<Matrix<double, Di, Dj>, Matrix<double, Di, Dj>::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;$/;"	t	class:g2o::BaseBinaryEdge
InformationType	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      typedef typename BaseEdge<D,E>::InformationType InformationType;$/;"	t	class:g2o::BaseBinaryEdge
JacobianXiOplusType	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      typedef typename Matrix<double, D, Di>::AlignedMapType JacobianXiOplusType;$/;"	t	class:g2o::BaseBinaryEdge
JacobianXjOplusType	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      typedef typename Matrix<double, D, Dj>::AlignedMapType JacobianXjOplusType;$/;"	t	class:g2o::BaseBinaryEdge
Measurement	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      typedef typename BaseEdge<D,E>::Measurement Measurement;$/;"	t	class:g2o::BaseBinaryEdge
VertexXiType	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      typedef VertexXi VertexXiType;$/;"	t	class:g2o::BaseBinaryEdge
VertexXjType	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      typedef VertexXj VertexXjType;$/;"	t	class:g2o::BaseBinaryEdge
_hessian	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      HessianBlockType _hessian;$/;"	m	class:g2o::BaseBinaryEdge
_hessianRowMajor	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      bool _hessianRowMajor;$/;"	m	class:g2o::BaseBinaryEdge
_hessianTransposed	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      HessianBlockTransposedType _hessianTransposed;$/;"	m	class:g2o::BaseBinaryEdge
_jacobianOplusXi	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      JacobianXiOplusType _jacobianOplusXi;$/;"	m	class:g2o::BaseBinaryEdge
_jacobianOplusXj	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      JacobianXjOplusType _jacobianOplusXj;$/;"	m	class:g2o::BaseBinaryEdge
g2o	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^namespace g2o {$/;"	n
jacobianOplusXi	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      const JacobianXiOplusType& jacobianOplusXi() const { return _jacobianOplusXi;}$/;"	f	class:g2o::BaseBinaryEdge
jacobianOplusXj	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.h	/^      const JacobianXjOplusType& jacobianOplusXj() const { return _jacobianOplusXj;}$/;"	f	class:g2o::BaseBinaryEdge
allVerticesFixed	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.hpp	/^bool BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::allVerticesFixed() const$/;"	f	class:BaseBinaryEdge
constructQuadraticForm	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.hpp	/^void BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::constructQuadraticForm()$/;"	f	class:BaseBinaryEdge
createFrom	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.hpp	/^OptimizableGraph::Vertex* BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::createFrom(){$/;"	f	class:BaseBinaryEdge
createTo	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.hpp	/^OptimizableGraph::Vertex* BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::createTo(){$/;"	f	class:BaseBinaryEdge
linearizeOplus	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.hpp	/^void BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::linearizeOplus()$/;"	f	class:BaseBinaryEdge
linearizeOplus	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.hpp	/^void BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::linearizeOplus(JacobianWorkspace& jacobianWorkspace)$/;"	f	class:BaseBinaryEdge
mapHessianMemory	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.hpp	/^void BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::mapHessianMemory(double* d, int i, int j, bool rowMajor)$/;"	f	class:BaseBinaryEdge
resize	trunk/EXTERNAL/g2o/g2o/core/base_binary_edge.hpp	/^void BaseBinaryEdge<D, E, VertexXiType, VertexXjType>::resize(size_t size)$/;"	f	class:BaseBinaryEdge
BaseEdge	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      BaseEdge() : OptimizableGraph::Edge()$/;"	f	class:g2o::BaseEdge
BaseEdge	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^  class BaseEdge : public OptimizableGraph::Edge$/;"	c	namespace:g2o
Dimension	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      static const int Dimension = D;$/;"	m	class:g2o::BaseEdge
ErrorVector	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      typedef Matrix<double, D, 1> ErrorVector;$/;"	t	class:g2o::BaseEdge
G2O_BASE_EDGE_H	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	28;"	d
InformationType	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      typedef Matrix<double, D, D> InformationType;$/;"	t	class:g2o::BaseEdge
Measurement	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      typedef E Measurement;$/;"	t	class:g2o::BaseEdge
_error	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      ErrorVector _error;$/;"	m	class:g2o::BaseEdge
_information	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      InformationType _information;$/;"	m	class:g2o::BaseEdge
_measurement	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      Measurement _measurement;$/;"	m	class:g2o::BaseEdge
chi2	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      virtual double chi2() const $/;"	f	class:g2o::BaseEdge
error	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      ErrorVector& error() { return _error;}$/;"	f	class:g2o::BaseEdge
error	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      const ErrorVector& error() const { return _error;}$/;"	f	class:g2o::BaseEdge
errorData	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      virtual const double* errorData() const { return _error.data();}$/;"	f	class:g2o::BaseEdge
errorData	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      virtual double* errorData() { return _error.data();}$/;"	f	class:g2o::BaseEdge
g2o	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^namespace g2o {$/;"	n
information	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      InformationType& information() { return _information;}$/;"	f	class:g2o::BaseEdge
information	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      const InformationType& information() const { return _information;}$/;"	f	class:g2o::BaseEdge
informationData	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      virtual const double* informationData() const { return _information.data();}$/;"	f	class:g2o::BaseEdge
informationData	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      virtual double* informationData() { return _information.data();}$/;"	f	class:g2o::BaseEdge
initialEstimate	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      virtual void initialEstimate(const OptimizableGraph::VertexSet&, OptimizableGraph::Vertex*)$/;"	f	class:g2o::BaseEdge
measurement	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      const Measurement& measurement() const { return _measurement;}$/;"	f	class:g2o::BaseEdge
rank	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      virtual int rank() const {return _dimension;}$/;"	f	class:g2o::BaseEdge
robustInformation	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      InformationType robustInformation(const Eigen::Vector3d& rho)$/;"	f	class:g2o::BaseEdge
setInformation	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      void setInformation(const InformationType& information) { _information = information;}$/;"	f	class:g2o::BaseEdge
setMeasurement	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      virtual void setMeasurement(const Measurement& m) { _measurement = m;}$/;"	f	class:g2o::BaseEdge
~BaseEdge	trunk/EXTERNAL/g2o/g2o/core/base_edge.h	/^      virtual ~BaseEdge() {}$/;"	f	class:g2o::BaseEdge
BaseMultiEdge	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      BaseMultiEdge() : BaseEdge<D,E>()$/;"	f	class:g2o::BaseMultiEdge
BaseMultiEdge	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^  class BaseMultiEdge : public BaseEdge<D,E>$/;"	c	namespace:g2o
Dimension	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      static const int Dimension = BaseEdge<D,E>::Dimension;$/;"	m	class:g2o::BaseMultiEdge
Dimension	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      static const int Dimension = BaseEdge<D,E>::Dimension;$/;"	m	class:g2o::BaseMultiEdge::E
ErrorVector	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      typedef typename BaseEdge<D,E>::ErrorVector ErrorVector;$/;"	t	class:g2o::BaseMultiEdge
G2O_BASE_MULTI_EDGE_H	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	28;"	d
HessianBlockType	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      typedef Map<MatrixXd, MatrixXd::Flags & AlignedBit ? Aligned : Unaligned > HessianBlockType;$/;"	t	class:g2o::BaseMultiEdge
HessianHelper	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^        HessianHelper() : matrix(0, 0, 0), transposed(false) {}$/;"	f	struct:g2o::BaseMultiEdge::HessianHelper
HessianHelper	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      struct HessianHelper {$/;"	s	class:g2o::BaseMultiEdge
InformationType	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      typedef typename BaseEdge<D,E>::InformationType InformationType;$/;"	t	class:g2o::BaseMultiEdge
JacobianType	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      typedef MatrixXd::MapType JacobianType;$/;"	t	class:g2o::BaseMultiEdge
Measurement	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      typedef typename BaseEdge<D,E>::Measurement Measurement;$/;"	t	class:g2o::BaseMultiEdge
_hessian	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      std::vector<HessianHelper> _hessian;$/;"	m	class:g2o::BaseMultiEdge
_jacobianOplus	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^      std::vector<JacobianType, aligned_allocator<JacobianType> > _jacobianOplus; \/\/\/< jacobians of the edge (w.r.t. oplus)$/;"	m	class:g2o::BaseMultiEdge
g2o	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^namespace g2o {$/;"	n
matrix	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^        Map<MatrixXd> matrix;     \/\/\/< the mapped memory$/;"	m	struct:g2o::BaseMultiEdge::HessianHelper
transposed	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.h	/^        bool transposed;          \/\/\/< the block has to be transposed$/;"	m	struct:g2o::BaseMultiEdge::HessianHelper
allVerticesFixed	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.hpp	/^bool BaseMultiEdge<D, E>::allVerticesFixed() const$/;"	f	class:BaseMultiEdge
computeQuadraticForm	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::computeQuadraticForm(const InformationType& omega, const ErrorVector& weightedError)$/;"	f	class:BaseMultiEdge
computeUpperTriangleIndex	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.hpp	/^  inline int computeUpperTriangleIndex(int i, int j)$/;"	f	namespace:internal
constructQuadraticForm	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::constructQuadraticForm()$/;"	f	class:BaseMultiEdge
internal	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.hpp	/^namespace internal {$/;"	n
linearizeOplus	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::linearizeOplus()$/;"	f	class:BaseMultiEdge
linearizeOplus	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::linearizeOplus(JacobianWorkspace& jacobianWorkspace)$/;"	f	class:BaseMultiEdge
mapHessianMemory	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::mapHessianMemory(double* d, int i, int j, bool rowMajor)$/;"	f	class:BaseMultiEdge
resize	trunk/EXTERNAL/g2o/g2o/core/base_multi_edge.hpp	/^void BaseMultiEdge<D, E>::resize(size_t size)$/;"	f	class:BaseMultiEdge
BaseUnaryEdge	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      BaseUnaryEdge() : BaseEdge<D,E>(),$/;"	f	class:g2o::BaseUnaryEdge
BaseUnaryEdge	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^  class BaseUnaryEdge : public BaseEdge<D,E>$/;"	c	namespace:g2o
Dimension	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      static const int Dimension = BaseEdge<D, E>::Dimension;$/;"	m	class:g2o::BaseUnaryEdge
Dimension	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      static const int Dimension = BaseEdge<D, E>::Dimension;$/;"	m	class:g2o::BaseUnaryEdge::E
ErrorVector	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      typedef typename BaseEdge<D,E>::ErrorVector ErrorVector;$/;"	t	class:g2o::BaseUnaryEdge
G2O_BASE_UNARY_EDGE_H	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	28;"	d
InformationType	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      typedef typename BaseEdge<D,E>::InformationType InformationType;$/;"	t	class:g2o::BaseUnaryEdge
JacobianXiOplusType	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      typedef typename Matrix<double, D, VertexXiType::Dimension>::AlignedMapType JacobianXiOplusType;$/;"	t	class:g2o::BaseUnaryEdge
Measurement	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      typedef typename BaseEdge<D,E>::Measurement Measurement;$/;"	t	class:g2o::BaseUnaryEdge
VertexXiType	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      typedef VertexXi VertexXiType;$/;"	t	class:g2o::BaseUnaryEdge
_jacobianOplusXi	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      JacobianXiOplusType _jacobianOplusXi;$/;"	m	class:g2o::BaseUnaryEdge
g2o	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^namespace g2o {$/;"	n
jacobianOplusXi	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      const JacobianXiOplusType& jacobianOplusXi() const { return _jacobianOplusXi;}$/;"	f	class:g2o::BaseUnaryEdge
mapHessianMemory	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.h	/^      virtual void mapHessianMemory(double*, int, int, bool) {assert(0 && "BaseUnaryEdge does not map memory of the Hessian");}$/;"	f	class:g2o::BaseUnaryEdge
allVerticesFixed	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.hpp	/^bool BaseUnaryEdge<D, E, VertexXiType>::allVerticesFixed() const$/;"	f	class:BaseUnaryEdge
constructQuadraticForm	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.hpp	/^void BaseUnaryEdge<D, E, VertexXiType>::constructQuadraticForm()$/;"	f	class:BaseUnaryEdge
initialEstimate	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.hpp	/^void BaseUnaryEdge<D, E, VertexXiType>::initialEstimate(const OptimizableGraph::VertexSet&, OptimizableGraph::Vertex*)$/;"	f	class:BaseUnaryEdge
linearizeOplus	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.hpp	/^void BaseUnaryEdge<D, E, VertexXiType>::linearizeOplus()$/;"	f	class:BaseUnaryEdge
linearizeOplus	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.hpp	/^void BaseUnaryEdge<D, E, VertexXiType>::linearizeOplus(JacobianWorkspace& jacobianWorkspace)$/;"	f	class:BaseUnaryEdge
resize	trunk/EXTERNAL/g2o/g2o/core/base_unary_edge.hpp	/^void BaseUnaryEdge<D, E, VertexXiType>::resize(size_t size)$/;"	f	class:BaseUnaryEdge
A	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    HessianBlockType& A() { return _hessian;}$/;"	f	class:g2o::BaseVertex
A	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    const HessianBlockType& A() const { return _hessian;}$/;"	f	class:g2o::BaseVertex
BackupStackType	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    BackupStackType;$/;"	t	class:g2o::BaseVertex
BaseVertex	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^  class BaseVertex : public OptimizableGraph::Vertex {$/;"	c	namespace:g2o
Dimension	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    static const int Dimension = D;           \/\/\/< dimension of the estimate (minimal) in the manifold space$/;"	m	class:g2o::BaseVertex
EstimateType	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    typedef T EstimateType;$/;"	t	class:g2o::BaseVertex
G2O_BASE_VERTEX_H	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	28;"	d
HessianBlockType	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    typedef Map<Matrix<double, D, D>, Matrix<double,D,D>::Flags & AlignedBit ? Aligned : Unaligned >  HessianBlockType;$/;"	t	class:g2o::BaseVertex
_b	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    Matrix<double, D, 1> _b;$/;"	m	class:g2o::BaseVertex
_backup	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    BackupStackType _backup;$/;"	m	class:g2o::BaseVertex
_estimate	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    EstimateType _estimate;$/;"	m	class:g2o::BaseVertex
_hessian	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    HessianBlockType _hessian;$/;"	m	class:g2o::BaseVertex
b	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    Matrix<double, D, 1>& b() { return _b;}$/;"	f	class:g2o::BaseVertex
b	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    const Matrix<double, D, 1>& b() const { return _b;}$/;"	f	class:g2o::BaseVertex
b	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual const double& b(int i) const { assert(i < D); return _b(i);}$/;"	f	class:g2o::BaseVertex
b	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual double& b(int i) { assert(i < D); return _b(i);}$/;"	f	class:g2o::BaseVertex
bData	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual double* bData() { return _b.data();}$/;"	f	class:g2o::BaseVertex
copyB	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual int copyB(double* b_) const {$/;"	f	class:g2o::BaseVertex
discardTop	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual void discardTop() { assert(!_backup.empty()); _backup.pop();}$/;"	f	class:g2o::BaseVertex
estimate	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    const EstimateType& estimate() const { return _estimate;}$/;"	f	class:g2o::BaseVertex
g2o	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^namespace g2o {$/;"	n
hessian	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual const double& hessian(int i, int j) const { assert(i<D && j<D); return _hessian(i,j);}$/;"	f	class:g2o::BaseVertex
hessian	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual double& hessian(int i, int j)  { assert(i<D && j<D); return _hessian(i,j);}$/;"	f	class:g2o::BaseVertex
hessianData	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual double* hessianData() { return const_cast<double*>(_hessian.data());}$/;"	f	class:g2o::BaseVertex
hessianDeterminant	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual double hessianDeterminant() const {return _hessian.determinant();}$/;"	f	class:g2o::BaseVertex
pop	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual void pop() { assert(!_backup.empty()); _estimate = _backup.top(); _backup.pop(); updateCache();}$/;"	f	class:g2o::BaseVertex
push	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual void push() { _backup.push(_estimate);}$/;"	f	class:g2o::BaseVertex
setEstimate	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    void setEstimate(const EstimateType& et) { _estimate = et; updateCache();}$/;"	f	class:g2o::BaseVertex
stackSize	trunk/EXTERNAL/g2o/g2o/core/base_vertex.h	/^    virtual int stackSize() const {return _backup.size();}$/;"	f	class:g2o::BaseVertex
BaseVertex	trunk/EXTERNAL/g2o/g2o/core/base_vertex.hpp	/^BaseVertex<D, T>::BaseVertex() :$/;"	f	class:BaseVertex
clearQuadraticForm	trunk/EXTERNAL/g2o/g2o/core/base_vertex.hpp	/^void BaseVertex<D, T>::clearQuadraticForm() {$/;"	f	class:BaseVertex
mapHessianMemory	trunk/EXTERNAL/g2o/g2o/core/base_vertex.hpp	/^void BaseVertex<D, T>::mapHessianMemory(double* d)$/;"	f	class:BaseVertex
solveDirect	trunk/EXTERNAL/g2o/g2o/core/base_vertex.hpp	/^double BaseVertex<D, T>::solveDirect(double lambda) {$/;"	f	class:BaseVertex
G2OBatchStatistics	trunk/EXTERNAL/g2o/g2o/core/batch_stats.cpp	/^  G2OBatchStatistics::G2OBatchStatistics(){$/;"	f	class:g2o::G2OBatchStatistics
PTHING	trunk/EXTERNAL/g2o/g2o/core/batch_stats.cpp	36;"	d	file:
_globalStats	trunk/EXTERNAL/g2o/g2o/core/batch_stats.cpp	/^  G2OBatchStatistics* G2OBatchStatistics::_globalStats=0;$/;"	m	class:g2o::G2OBatchStatistics	file:
g2o	trunk/EXTERNAL/g2o/g2o/core/batch_stats.cpp	/^namespace g2o {$/;"	n	file:
operator <<	trunk/EXTERNAL/g2o/g2o/core/batch_stats.cpp	/^  std::ostream& operator << (std::ostream& os , const G2OBatchStatistics& st)$/;"	f	namespace:g2o
setGlobalStats	trunk/EXTERNAL/g2o/g2o/core/batch_stats.cpp	/^  void G2OBatchStatistics::setGlobalStats(G2OBatchStatistics* b)$/;"	f	class:g2o::G2OBatchStatistics
BatchStatisticsContainer	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^  typedef std::vector<G2OBatchStatistics> BatchStatisticsContainer;$/;"	t	namespace:g2o
G2OBatchStatistics	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^  struct G2O_CORE_API G2OBatchStatistics {$/;"	s	namespace:g2o
G2O_BATCH_STATS_H_	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	28;"	d
_globalStats	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    static G2OBatchStatistics* _globalStats;$/;"	m	struct:g2o::G2OBatchStatistics
chi2	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double chi2;                      \/\/\/< total chi2$/;"	m	struct:g2o::G2OBatchStatistics
choleskyNNZ	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    size_t choleskyNNZ;               \/\/\/< number of non-zeros in the cholesky factor$/;"	m	struct:g2o::G2OBatchStatistics
g2o	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^namespace g2o {$/;"	n
globalStats	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    static G2OBatchStatistics* globalStats() {return _globalStats;}$/;"	f	struct:g2o::G2OBatchStatistics
hessianDimension	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    size_t hessianDimension;          \/\/\/< rows \/ cols of the Hessian$/;"	m	struct:g2o::G2OBatchStatistics
hessianLandmarkDimension	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    size_t hessianLandmarkDimension;  \/\/\/< dimension of the landmark matrix in Schur$/;"	m	struct:g2o::G2OBatchStatistics
hessianPoseDimension	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    size_t hessianPoseDimension;      \/\/\/< dimension of the pose matrix in Schur$/;"	m	struct:g2o::G2OBatchStatistics
iteration	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    int iteration;                    \/\/\/< which iteration$/;"	m	struct:g2o::G2OBatchStatistics
iterationsLinearSolver	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    int    iterationsLinearSolver;    \/\/\/< iterations of PCG, (0 if not used, i.e., Cholesky)$/;"	m	struct:g2o::G2OBatchStatistics
levenbergIterations	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    int levenbergIterations;          \/\/\/< number of iterations performed by LM$/;"	m	struct:g2o::G2OBatchStatistics
numEdges	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    int numEdges;                     \/\/\/< how many edges$/;"	m	struct:g2o::G2OBatchStatistics
numVertices	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    int numVertices;                  \/\/\/< how many vertices are involved$/;"	m	struct:g2o::G2OBatchStatistics
timeIteration	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeIteration;             \/\/\/< total time;$/;"	m	struct:g2o::G2OBatchStatistics
timeLinearSolution	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeLinearSolution;        \/\/\/< total time for solving Ax=b (including detup for schur)$/;"	m	struct:g2o::G2OBatchStatistics
timeLinearSolver	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeLinearSolver;          \/\/\/< time for solving, excluding Schur setup$/;"	m	struct:g2o::G2OBatchStatistics
timeLinearize	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeLinearize;             \/\/\/< jacobians$/;"	m	struct:g2o::G2OBatchStatistics
timeMarginals	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeMarginals;             \/\/\/< computing the inverse elements (solve blocks) and thus the marginal covariances$/;"	m	struct:g2o::G2OBatchStatistics
timeNumericDecomposition	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeNumericDecomposition;  \/\/\/< numeric decomposition  (0 if not done)$/;"	m	struct:g2o::G2OBatchStatistics
timeQuadraticForm	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeQuadraticForm;         \/\/\/< construct the quadratic form in the graph$/;"	m	struct:g2o::G2OBatchStatistics
timeResiduals	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeResiduals;             \/\/\/< residuals$/;"	m	struct:g2o::G2OBatchStatistics
timeSchurComplement	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeSchurComplement;      \/\/\/< compute schur complement (0 if not done)$/;"	m	struct:g2o::G2OBatchStatistics
timeSymbolicDecomposition	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeSymbolicDecomposition; \/\/\/< symbolic decomposition (0 if not done)$/;"	m	struct:g2o::G2OBatchStatistics
timeUpdate	trunk/EXTERNAL/g2o/g2o/core/batch_stats.h	/^    double timeUpdate;                \/\/\/< time to apply the update$/;"	m	struct:g2o::G2OBatchStatistics
BlockSolver	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^  class BlockSolver: public BlockSolverBase {$/;"	c	namespace:g2o
BlockSolverBase	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^  class BlockSolverBase : public Solver$/;"	c	namespace:g2o
BlockSolverTraits	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^  struct BlockSolverTraits$/;"	s	namespace:g2o
BlockSolverTraits	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^  struct BlockSolverTraits<Eigen::Dynamic, Eigen::Dynamic>$/;"	s	namespace:g2o
BlockSolverX	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^  typedef BlockSolver< BlockSolverTraits<Eigen::Dynamic, Eigen::Dynamic> > BlockSolverX;$/;"	t	namespace:g2o
BlockSolver_3_2	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^  typedef BlockSolver< BlockSolverTraits<3, 2> > BlockSolver_3_2;$/;"	t	namespace:g2o
BlockSolver_6_3	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^  typedef BlockSolver< BlockSolverTraits<6, 3> > BlockSolver_6_3;  $/;"	t	namespace:g2o
BlockSolver_7_3	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^  typedef BlockSolver< BlockSolverTraits<7, 3> > BlockSolver_7_3;  $/;"	t	namespace:g2o
G2O_BLOCK_SOLVER_H	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	28;"	d
LandmarkDim	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      static const int LandmarkDim = Traits::LandmarkDim;$/;"	m	class:g2o::BlockSolver
LandmarkDim	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    static const int LandmarkDim = Eigen::Dynamic;$/;"	m	struct:g2o::BlockSolverTraits
LandmarkDim	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    static const int LandmarkDim = _LandmarkDim;$/;"	m	struct:g2o::BlockSolverTraits
LandmarkHessianType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::LandmarkHessianType LandmarkHessianType;$/;"	t	class:g2o::BlockSolver
LandmarkHessianType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef SparseBlockMatrix<LandmarkMatrixType> LandmarkHessianType;$/;"	t	struct:g2o::BlockSolverTraits
LandmarkMatrixType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::LandmarkMatrixType LandmarkMatrixType; $/;"	t	class:g2o::BlockSolver
LandmarkMatrixType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef Matrix<double, LandmarkDim, LandmarkDim> LandmarkMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
LandmarkMatrixType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef MatrixXd LandmarkMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
LandmarkVectorType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::LandmarkVectorType LandmarkVectorType;$/;"	t	class:g2o::BlockSolver
LandmarkVectorType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef Matrix<double, LandmarkDim, 1> LandmarkVectorType;$/;"	t	struct:g2o::BlockSolverTraits
LandmarkVectorType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef VectorXd LandmarkVectorType;$/;"	t	struct:g2o::BlockSolverTraits
LinearSolverType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::LinearSolverType LinearSolverType;$/;"	t	class:g2o::BlockSolver
LinearSolverType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef LinearSolver<PoseMatrixType> LinearSolverType;$/;"	t	struct:g2o::BlockSolverTraits
PoseDim	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      static const int PoseDim = Traits::PoseDim;$/;"	m	class:g2o::BlockSolver
PoseDim	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    static const int PoseDim = Eigen::Dynamic;$/;"	m	struct:g2o::BlockSolverTraits
PoseDim	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    static const int PoseDim = _PoseDim;$/;"	m	struct:g2o::BlockSolverTraits
PoseHessianType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::PoseHessianType PoseHessianType;$/;"	t	class:g2o::BlockSolver
PoseHessianType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef SparseBlockMatrix<PoseMatrixType> PoseHessianType;$/;"	t	struct:g2o::BlockSolverTraits
PoseLandmarkHessianType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::PoseLandmarkHessianType PoseLandmarkHessianType;$/;"	t	class:g2o::BlockSolver
PoseLandmarkHessianType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef SparseBlockMatrix<PoseLandmarkMatrixType> PoseLandmarkHessianType;$/;"	t	struct:g2o::BlockSolverTraits
PoseLandmarkMatrixType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::PoseLandmarkMatrixType PoseLandmarkMatrixType;$/;"	t	class:g2o::BlockSolver
PoseLandmarkMatrixType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef Matrix<double, PoseDim, LandmarkDim> PoseLandmarkMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
PoseLandmarkMatrixType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef MatrixXd PoseLandmarkMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
PoseMatrixType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::PoseMatrixType PoseMatrixType;$/;"	t	class:g2o::BlockSolver
PoseMatrixType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef Matrix<double, PoseDim, PoseDim> PoseMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
PoseMatrixType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef MatrixXd PoseMatrixType;$/;"	t	struct:g2o::BlockSolverTraits
PoseVectorType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      typedef typename Traits::PoseVectorType PoseVectorType;$/;"	t	class:g2o::BlockSolver
PoseVectorType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef Matrix<double, PoseDim, 1> PoseVectorType;$/;"	t	struct:g2o::BlockSolverTraits
PoseVectorType	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^    typedef VectorXd PoseVectorType;$/;"	t	struct:g2o::BlockSolverTraits
_DInvSchur	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrixDiagonal<LandmarkMatrixType>* _DInvSchur;$/;"	m	class:g2o::BlockSolver
_Hll	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrix<LandmarkMatrixType>* _Hll;$/;"	m	class:g2o::BlockSolver
_Hpl	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrix<PoseLandmarkMatrixType>* _Hpl;$/;"	m	class:g2o::BlockSolver
_HplCCS	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrixCCS<PoseLandmarkMatrixType>* _HplCCS;$/;"	m	class:g2o::BlockSolver
_Hpp	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrix<PoseMatrixType>* _Hpp;$/;"	m	class:g2o::BlockSolver
_Hschur	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrix<PoseMatrixType>* _Hschur;$/;"	m	class:g2o::BlockSolver
_HschurTransposedCCS	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      SparseBlockMatrixCCS<PoseMatrixType>* _HschurTransposedCCS;$/;"	m	class:g2o::BlockSolver
_bschur	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      double* _bschur;$/;"	m	class:g2o::BlockSolver
_coefficients	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      double* _coefficients;$/;"	m	class:g2o::BlockSolver
_coefficientsMutex	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      std::vector<OpenMPMutex> _coefficientsMutex;$/;"	m	class:g2o::BlockSolver
_diagonalBackupLandmark	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      std::vector<LandmarkVectorType, Eigen::aligned_allocator<LandmarkVectorType> > _diagonalBackupLandmark;$/;"	m	class:g2o::BlockSolver
_diagonalBackupPose	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      std::vector<PoseVectorType, Eigen::aligned_allocator<PoseVectorType> > _diagonalBackupPose;$/;"	m	class:g2o::BlockSolver
_doSchur	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      bool _doSchur;$/;"	m	class:g2o::BlockSolver
_linearSolver	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      LinearSolver<PoseMatrixType>* _linearSolver;$/;"	m	class:g2o::BlockSolver
_numLandmarks	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      int _numPoses, _numLandmarks;$/;"	m	class:g2o::BlockSolver
_numPoses	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      int _numPoses, _numLandmarks;$/;"	m	class:g2o::BlockSolver
_sizeLandmarks	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      int _sizePoses, _sizeLandmarks;$/;"	m	class:g2o::BlockSolver
_sizePoses	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      int _sizePoses, _sizeLandmarks;$/;"	m	class:g2o::BlockSolver
g2o	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^namespace g2o {$/;"	n
linearSolver	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      LinearSolver<PoseMatrixType>* linearSolver() const { return _linearSolver;}$/;"	f	class:g2o::BlockSolver
multiplyHessian	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      virtual void multiplyHessian(double* dest, const double* src) const { _Hpp->multiplySymmetricUpperTriangle(dest, src);}$/;"	f	class:g2o::BlockSolver
schur	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      virtual bool schur() { return _doSchur;}$/;"	f	class:g2o::BlockSolver
setSchur	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      virtual void setSchur(bool s) { _doSchur = s;}$/;"	f	class:g2o::BlockSolver
supportsSchur	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      virtual bool supportsSchur() {return true;}$/;"	f	class:g2o::BlockSolver
writeDebug	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      virtual bool writeDebug() const {return _linearSolver->writeDebug();}$/;"	f	class:g2o::BlockSolver
~BlockSolverBase	trunk/EXTERNAL/g2o/g2o/core/block_solver.h	/^      virtual ~BlockSolverBase() {}$/;"	f	class:g2o::BlockSolverBase
BlockSolver	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^BlockSolver<Traits>::BlockSolver(LinearSolverType* linearSolver) :$/;"	f	class:g2o::BlockSolver
buildStructure	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::buildStructure(bool zeroBlocks)$/;"	f	class:g2o::BlockSolver
buildSystem	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::buildSystem()$/;"	f	class:g2o::BlockSolver
computeMarginals	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::computeMarginals(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<std::pair<int, int> >& blockIndices)$/;"	f	class:g2o::BlockSolver
deallocate	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^void BlockSolver<Traits>::deallocate()$/;"	f	class:g2o::BlockSolver
g2o	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^namespace g2o {$/;"	n
init	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::init(SparseOptimizer* optimizer, bool online)$/;"	f	class:g2o::BlockSolver
resize	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^void BlockSolver<Traits>::resize(int* blockPoseIndices, int numPoseBlocks, $/;"	f	class:g2o::BlockSolver
restoreDiagonal	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^void BlockSolver<Traits>::restoreDiagonal()$/;"	f	class:g2o::BlockSolver
saveHessian	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::saveHessian(const std::string& fileName) const$/;"	f	class:g2o::BlockSolver
setLambda	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::setLambda(double lambda, bool backup)$/;"	f	class:g2o::BlockSolver
setWriteDebug	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^void BlockSolver<Traits>::setWriteDebug(bool writeDebug)$/;"	f	class:g2o::BlockSolver
solve	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::solve(){$/;"	f	class:g2o::BlockSolver
updateStructure	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^bool BlockSolver<Traits>::updateStructure(const std::vector<HyperGraph::Vertex*>& vset, const HyperGraph::EdgeSet& edges)$/;"	f	class:g2o::BlockSolver
~BlockSolver	trunk/EXTERNAL/g2o/g2o/core/block_solver.hpp	/^BlockSolver<Traits>::~BlockSolver()$/;"	f	class:g2o::BlockSolver
Cache	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  Cache::Cache(CacheContainer* container_, const ParameterVector& parameters_) :$/;"	f	class:g2o::Cache
CacheContainer	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  CacheContainer::CacheContainer(OptimizableGraph::Vertex* vertex_) {$/;"	f	class:g2o::CacheContainer
CacheKey	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  Cache::CacheKey::CacheKey() :$/;"	f	class:g2o::Cache::CacheKey
CacheKey	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  Cache::CacheKey::CacheKey(const std::string& type_, const ParameterVector& parameters_) :$/;"	f	class:g2o::Cache::CacheKey
container	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  CacheContainer* Cache::container() {$/;"	f	class:g2o::Cache
createCache	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  Cache* CacheContainer::createCache(const Cache::CacheKey& key){$/;"	f	class:g2o::CacheContainer
findCache	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  Cache* CacheContainer::findCache(const Cache::CacheKey& key) {$/;"	f	class:g2o::CacheContainer
g2o	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^namespace g2o {$/;"	n	file:
graph	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  OptimizableGraph* Cache::graph() {$/;"	f	class:g2o::Cache
graph	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  OptimizableGraph* CacheContainer::graph(){$/;"	f	class:g2o::CacheContainer
installDependency	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  Cache* Cache::installDependency(const std::string& type_, const std::vector<int>& parameterIndices){$/;"	f	class:g2o::Cache
key	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  Cache::CacheKey Cache::key() const {$/;"	f	class:g2o::Cache
operator <	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  bool Cache::CacheKey::operator<(const Cache::CacheKey& c) const{$/;"	f	class:g2o::Cache::CacheKey
parameters	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  ParameterVector& Cache::parameters() {$/;"	f	class:g2o::Cache
resolveDependancies	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  bool Cache::resolveDependancies(){$/;"	f	class:g2o::Cache
setUpdateNeeded	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  void CacheContainer::setUpdateNeeded(bool needUpdate) {$/;"	f	class:g2o::CacheContainer
update	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  void Cache::update(){$/;"	f	class:g2o::Cache
update	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  void CacheContainer::update() {$/;"	f	class:g2o::CacheContainer
vertex	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  OptimizableGraph::Vertex* Cache::vertex() { $/;"	f	class:g2o::Cache
vertex	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  OptimizableGraph::Vertex* CacheContainer::vertex() {$/;"	f	class:g2o::CacheContainer
~CacheContainer	trunk/EXTERNAL/g2o/g2o/core/cache.cpp	/^  CacheContainer::~CacheContainer(){$/;"	f	class:g2o::CacheContainer
Cache	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^  class G2O_CORE_API Cache: public HyperGraph::HyperGraphElement$/;"	c	namespace:g2o
CacheContainer	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^  class G2O_CORE_API CacheContainer: public std::map<Cache::CacheKey, Cache*>$/;"	c	namespace:g2o
CacheKey	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^      class G2O_CORE_API CacheKey$/;"	c	class:g2o::Cache
G2O_CACHE_HH_	trunk/EXTERNAL/g2o/g2o/core/cache.h	28;"	d
_container	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^      CacheContainer* _container;$/;"	m	class:g2o::Cache
_parameters	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^          ParameterVector _parameters;$/;"	m	class:g2o::Cache::CacheKey
_parameters	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^      ParameterVector _parameters;$/;"	m	class:g2o::Cache
_parentCaches	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^      std::vector<Cache*> _parentCaches;$/;"	m	class:g2o::Cache
_type	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^          std::string _type;$/;"	m	class:g2o::Cache::CacheKey
_updateNeeded	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^      bool _updateNeeded;$/;"	m	class:g2o::Cache
_updateNeeded	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^      bool _updateNeeded;$/;"	m	class:g2o::CacheContainer
_vertex	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^      OptimizableGraph::Vertex* _vertex;$/;"	m	class:g2o::CacheContainer
elementType	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^      virtual HyperGraph::HyperGraphElementType elementType() const { return HyperGraph::HGET_CACHE;}$/;"	f	class:g2o::Cache
g2o	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^namespace g2o {$/;"	n
parameters	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^          const ParameterVector& parameters() const { return _parameters;}$/;"	f	class:g2o::Cache::CacheKey
resolveCache	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^  void OptimizableGraph::Edge::resolveCache(CacheType*& cache, $/;"	f	class:g2o::OptimizableGraph::Edge
type	trunk/EXTERNAL/g2o/g2o/core/cache.h	/^          const std::string& type() const { return _type;}$/;"	f	class:g2o::Cache::CacheKey
AbstractHyperGraphElementCreator	trunk/EXTERNAL/g2o/g2o/core/creators.h	/^  class G2O_CORE_API AbstractHyperGraphElementCreator$/;"	c	namespace:g2o
G2O_CREATORS_H	trunk/EXTERNAL/g2o/g2o/core/creators.h	28;"	d
HyperGraphElementCreator	trunk/EXTERNAL/g2o/g2o/core/creators.h	/^      HyperGraphElementCreator() : _name(typeid(T).name()) {}$/;"	f	class:g2o::HyperGraphElementCreator
HyperGraphElementCreator	trunk/EXTERNAL/g2o/g2o/core/creators.h	/^  class HyperGraphElementCreator : public AbstractHyperGraphElementCreator$/;"	c	namespace:g2o
_name	trunk/EXTERNAL/g2o/g2o/core/creators.h	/^      std::string _name;$/;"	m	class:g2o::HyperGraphElementCreator
construct	trunk/EXTERNAL/g2o/g2o/core/creators.h	/^      HyperGraph::HyperGraphElement* construct() { return new T;}$/;"	f	class:g2o::HyperGraphElementCreator
g2o	trunk/EXTERNAL/g2o/g2o/core/creators.h	/^namespace g2o$/;"	n
name	trunk/EXTERNAL/g2o/g2o/core/creators.h	/^      virtual const std::string& name() const { return _name;}$/;"	f	class:g2o::HyperGraphElementCreator
~AbstractHyperGraphElementCreator	trunk/EXTERNAL/g2o/g2o/core/creators.h	/^      virtual ~AbstractHyperGraphElementCreator() { }$/;"	f	class:g2o::AbstractHyperGraphElementCreator
AdjacencyMapEntry	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  EstimatePropagator::AdjacencyMapEntry::AdjacencyMapEntry()$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
EstimatePropagator	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  EstimatePropagator::EstimatePropagator(OptimizableGraph* g): _graph(g)$/;"	f	class:g2o::EstimatePropagator
EstimatePropagatorCost	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  EstimatePropagatorCost::EstimatePropagatorCost (SparseOptimizer* graph) :$/;"	f	class:g2o::EstimatePropagatorCost
EstimatePropagatorCostOdometry	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  EstimatePropagatorCostOdometry::EstimatePropagatorCostOdometry(SparseOptimizer* graph) :$/;"	f	class:g2o::EstimatePropagatorCostOdometry
FrontierLevelCmp	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  struct FrontierLevelCmp {$/;"	s	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^    bool operator()(EstimatePropagator::AdjacencyMapEntry* e1, EstimatePropagator::AdjacencyMapEntry* e2) const$/;"	f	struct:g2o::FrontierLevelCmp
operator ()	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  double EstimatePropagatorCost::operator()(OptimizableGraph::Edge* edge, const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to_) const$/;"	f	class:g2o::EstimatePropagatorCost
operator ()	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  double EstimatePropagatorCostOdometry::operator()(OptimizableGraph::Edge* edge, const OptimizableGraph::VertexSet& from_, OptimizableGraph::Vertex* to_) const$/;"	f	class:g2o::EstimatePropagatorCostOdometry
pop	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  EstimatePropagator::AdjacencyMapEntry* EstimatePropagator::PriorityQueue::pop()$/;"	f	class:g2o::EstimatePropagator::PriorityQueue
propagate	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  void EstimatePropagator::propagate(OptimizableGraph::Vertex* v, $/;"	f	class:g2o::EstimatePropagator
propagate	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  void EstimatePropagator::propagate(OptimizableGraph::VertexSet& vset, $/;"	f	class:g2o::EstimatePropagator
push	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  void EstimatePropagator::PriorityQueue::push(AdjacencyMapEntry* entry)$/;"	f	class:g2o::EstimatePropagator::PriorityQueue
reset	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  void EstimatePropagator::AdjacencyMapEntry::reset()$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
reset	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.cpp	/^  void EstimatePropagator::reset()$/;"	f	class:g2o::EstimatePropagator
AdjacencyMap	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      typedef std::tr1::unordered_map<OptimizableGraph::Vertex*, AdjacencyMapEntry, VertexIDHashFunction> AdjacencyMap;$/;"	t	class:g2o::EstimatePropagator
AdjacencyMapEntry	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      class AdjacencyMapEntry {$/;"	c	class:g2o::EstimatePropagator
EstimatePropagator	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^  class G2O_CORE_API EstimatePropagator {$/;"	c	namespace:g2o
EstimatePropagatorCost	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^  class G2O_CORE_API EstimatePropagatorCost {$/;"	c	namespace:g2o
EstimatePropagatorCostOdometry	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^  class G2O_CORE_API EstimatePropagatorCostOdometry : public EstimatePropagatorCost {$/;"	c	namespace:g2o
G2O_ESTIMATE_PROPAGATOR_H	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	28;"	d
PriorityQueue	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      class PriorityQueue : public std::multimap<double, AdjacencyMapEntry*> {$/;"	c	class:g2o::EstimatePropagator
PropagateAction	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      struct PropagateAction {$/;"	s	class:g2o::EstimatePropagator
PropagateCost	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      typedef EstimatePropagatorCost PropagateCost;$/;"	t	class:g2o::EstimatePropagator
VertexIDHashFunction	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      class VertexIDHashFunction {$/;"	c	class:g2o::EstimatePropagator
_adjacencyMap	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      AdjacencyMap _adjacencyMap;$/;"	m	class:g2o::EstimatePropagator
_child	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          OptimizableGraph::Vertex* _child;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
_distance	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          double _distance;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
_edge	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          OptimizableGraph::Edge* _edge;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
_frontierLevel	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          int _frontierLevel;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
_graph	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      OptimizableGraph* _graph;$/;"	m	class:g2o::EstimatePropagator
_graph	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      SparseOptimizer* _graph;$/;"	m	class:g2o::EstimatePropagatorCost
_parent	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          OptimizableGraph::VertexSet _parent;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
_visited	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      OptimizableGraph::VertexSet _visited;$/;"	m	class:g2o::EstimatePropagator
adjacencyMap	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      AdjacencyMap& adjacencyMap() {return _adjacencyMap; }$/;"	f	class:g2o::EstimatePropagator
child	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          OptimizableGraph::Vertex* child() const {return _child;}$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
distance	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          double distance() const {return _distance;}$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
edge	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          OptimizableGraph::Edge* edge() const {return _edge;}$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
frontierLevel	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          int frontierLevel() const { return _frontierLevel;}$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
g2o	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^namespace g2o {$/;"	n
graph	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      OptimizableGraph* graph() {return _graph;} $/;"	f	class:g2o::EstimatePropagator
inQueue	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          bool inQueue;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
name	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      virtual const char* name() const { return "odometry";}$/;"	f	class:g2o::EstimatePropagatorCostOdometry
name	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      virtual const char* name() const { return "spanning tree";}$/;"	f	class:g2o::EstimatePropagatorCost
operator ()	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          size_t operator ()(const OptimizableGraph::Vertex* v) const { return v->id();}$/;"	f	class:g2o::EstimatePropagator::VertexIDHashFunction
operator ()	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^        virtual void operator()(OptimizableGraph::Edge* e, const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to) const$/;"	f	struct:g2o::EstimatePropagator::PropagateAction
parent	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          const OptimizableGraph::VertexSet& parent() const {return _parent;}$/;"	f	class:g2o::EstimatePropagator::AdjacencyMapEntry
queueIt	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^          PriorityQueue::iterator queueIt;$/;"	m	class:g2o::EstimatePropagator::AdjacencyMapEntry
visited	trunk/EXTERNAL/g2o/g2o/core/estimate_propagator.h	/^      OptimizableGraph::VertexSet& visited() {return _visited; }$/;"	f	class:g2o::EstimatePropagator
Factory	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^Factory::Factory()$/;"	f	class:g2o::Factory
construct	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^HyperGraph::HyperGraphElement* Factory::construct(const std::string& tag) const$/;"	f	class:g2o::Factory
construct	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^HyperGraph::HyperGraphElement* Factory::construct(const std::string& tag, const HyperGraph::GraphElemBitset& elemsToConstruct) const$/;"	f	class:g2o::Factory
destroy	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^void Factory::destroy()$/;"	f	class:g2o::Factory
factoryInstance	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^Factory* Factory::factoryInstance = 0;$/;"	m	class:g2o::Factory	file:
fillKnownTypes	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^void Factory::fillKnownTypes(std::vector<std::string>& types) const$/;"	f	class:g2o::Factory
g2o	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^namespace g2o {$/;"	n	file:
instance	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^Factory* Factory::instance()$/;"	f	class:g2o::Factory
knowsTag	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^bool Factory::knowsTag(const std::string& tag, int* elementType) const$/;"	f	class:g2o::Factory
printRegisteredTypes	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^void Factory::printRegisteredTypes(std::ostream& os, bool comment) const$/;"	f	class:g2o::Factory
registerType	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^void Factory::registerType(const std::string& tag, AbstractHyperGraphElementCreator* c)$/;"	f	class:g2o::Factory
tag	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^const std::string& Factory::tag(const HyperGraph::HyperGraphElement* e) const$/;"	f	class:g2o::Factory
unregisterType	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^  void Factory::unregisterType(const std::string& tag)$/;"	f	class:g2o::Factory
~Factory	trunk/EXTERNAL/g2o/g2o/core/factory.cpp	/^Factory::~Factory()$/;"	f	class:g2o::Factory
CreatorInformation	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^          CreatorInformation()$/;"	f	class:g2o::Factory::CreatorInformation
CreatorInformation	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^      class CreatorInformation$/;"	c	class:g2o::Factory
CreatorMap	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^      typedef std::map<std::string, CreatorInformation*>               CreatorMap;$/;"	t	class:g2o::Factory
Factory	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^  class G2O_CORE_API Factory$/;"	c	namespace:g2o
G2O_FACTORY_EXPORT	trunk/EXTERNAL/g2o/g2o/core/factory.h	155;"	d
G2O_FACTORY_EXPORT	trunk/EXTERNAL/g2o/g2o/core/factory.h	158;"	d
G2O_FACTORY_H	trunk/EXTERNAL/g2o/g2o/core/factory.h	28;"	d
G2O_FACTORY_IMPORT	trunk/EXTERNAL/g2o/g2o/core/factory.h	156;"	d
G2O_FACTORY_IMPORT	trunk/EXTERNAL/g2o/g2o/core/factory.h	159;"	d
G2O_REGISTER_TYPE	trunk/EXTERNAL/g2o/g2o/core/factory.h	163;"	d
G2O_REGISTER_TYPE_GROUP	trunk/EXTERNAL/g2o/g2o/core/factory.h	171;"	d
G2O_USE_TYPE_BY_CLASS_NAME	trunk/EXTERNAL/g2o/g2o/core/factory.h	167;"	d
G2O_USE_TYPE_GROUP	trunk/EXTERNAL/g2o/g2o/core/factory.h	174;"	d
RegisterTypeProxy	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^      RegisterTypeProxy(const std::string& name) : _name(name)$/;"	f	class:g2o::RegisterTypeProxy
RegisterTypeProxy	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^  class RegisterTypeProxy$/;"	c	namespace:g2o
TagLookup	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^      typedef std::map<std::string, std::string>                      TagLookup;$/;"	t	class:g2o::Factory
_creator	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^      CreatorMap _creator;     \/\/\/< look-up map for the existing creators$/;"	m	class:g2o::Factory
_name	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^      std::string _name;$/;"	m	class:g2o::RegisterTypeProxy
_tagLookup	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^      TagLookup _tagLookup;    \/\/\/< reverse look-up, class name to tag$/;"	m	class:g2o::Factory
creator	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^          AbstractHyperGraphElementCreator* creator;$/;"	m	class:g2o::Factory::CreatorInformation
elementTypeBit	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^          int elementTypeBit;$/;"	m	class:g2o::Factory::CreatorInformation
factoryInstance	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^      static Factory* factoryInstance;$/;"	m	class:g2o::Factory
g2o	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^namespace g2o {$/;"	n
~CreatorInformation	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^          ~CreatorInformation()$/;"	f	class:g2o::Factory::CreatorInformation
~RegisterTypeProxy	trunk/EXTERNAL/g2o/g2o/core/factory.h	/^      ~RegisterTypeProxy()$/;"	f	class:g2o::RegisterTypeProxy
G2O_CORE_API	trunk/EXTERNAL/g2o/g2o/core/g2o_core_api.h	19;"	d
G2O_CORE_API	trunk/EXTERNAL/g2o/g2o/core/g2o_core_api.h	21;"	d
G2O_CORE_API	trunk/EXTERNAL/g2o/g2o/core/g2o_core_api.h	24;"	d
G2O_CORE_API	trunk/EXTERNAL/g2o/g2o/core/g2o_core_api.h	29;"	d
G2O_CORE_API_H	trunk/EXTERNAL/g2o/g2o/core/g2o_core_api.h	11;"	d
AdjacencyMapEntry	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  HyperDijkstra::AdjacencyMapEntry::AdjacencyMapEntry(HyperGraph::Vertex* child_, HyperGraph::Vertex* parent_, $/;"	f	class:g2o::HyperDijkstra::AdjacencyMapEntry
HyperDijkstra	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  HyperDijkstra::HyperDijkstra(HyperGraph* g): _graph(g)$/;"	f	class:g2o::HyperDijkstra
computeTree	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::computeTree(AdjacencyMap& amap)$/;"	f	class:g2o::HyperDijkstra
connectedSubset	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::connectedSubset(HyperGraph::VertexSet& connected, HyperGraph::VertexSet& visited, $/;"	f	class:g2o::HyperDijkstra
g2o	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^namespace g2o{$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  double UniformCostFunction::operator () (HyperGraph::Edge* \/*edge*\/, HyperGraph::Vertex* \/*from*\/, HyperGraph::Vertex* \/*to*\/)$/;"	f	class:g2o::UniformCostFunction
operator <	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  bool operator<(const HyperDijkstra::AdjacencyMapEntry& a, const HyperDijkstra::AdjacencyMapEntry& b)$/;"	f	namespace:g2o
perform	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  double HyperDijkstra::TreeAction::perform(HyperGraph::Vertex* v, HyperGraph::Vertex* vParent, HyperGraph::Edge* e){$/;"	f	class:g2o::HyperDijkstra::TreeAction
perform	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  double HyperDijkstra::TreeAction::perform(HyperGraph::Vertex* v, HyperGraph::Vertex* vParent, HyperGraph::Edge* e, double distance){$/;"	f	class:g2o::HyperDijkstra::TreeAction
reset	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::reset()$/;"	f	class:g2o::HyperDijkstra
shortestPaths	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::shortestPaths(HyperGraph::Vertex* v, HyperDijkstra::CostFunction* cost, double maxDistance, $/;"	f	class:g2o::HyperDijkstra
shortestPaths	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::shortestPaths(HyperGraph::VertexSet& vset, HyperDijkstra::CostFunction* cost, $/;"	f	class:g2o::HyperDijkstra
visitAdjacencyMap	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.cpp	/^  void HyperDijkstra::visitAdjacencyMap(AdjacencyMap& amap, TreeAction* action, bool useDistance)$/;"	f	class:g2o::HyperDijkstra
AdjacencyMap	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^    typedef std::map<HyperGraph::Vertex*, AdjacencyMapEntry> AdjacencyMap;$/;"	t	struct:g2o::HyperDijkstra
AdjacencyMapEntry	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^    struct G2O_CORE_API AdjacencyMapEntry{$/;"	s	struct:g2o::HyperDijkstra
CostFunction	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^    struct G2O_CORE_API CostFunction {$/;"	s	struct:g2o::HyperDijkstra
G2O_AIS_GENERAL_DIJKSTRA_HH	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	28;"	d
HyperDijkstra	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^  struct G2O_CORE_API HyperDijkstra{$/;"	s	namespace:g2o
TreeAction	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^    struct G2O_CORE_API TreeAction {$/;"	s	struct:g2o::HyperDijkstra
UniformCostFunction	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^  struct G2O_CORE_API UniformCostFunction: public HyperDijkstra::CostFunction {$/;"	s	namespace:g2o
_adjacencyMap	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^    AdjacencyMap _adjacencyMap;$/;"	m	struct:g2o::HyperDijkstra
_child	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Vertex* _child;$/;"	m	struct:g2o::HyperDijkstra::AdjacencyMapEntry
_children	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::VertexSet _children;$/;"	m	struct:g2o::HyperDijkstra::AdjacencyMapEntry
_distance	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      double _distance;$/;"	m	struct:g2o::HyperDijkstra::AdjacencyMapEntry
_edge	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Edge* _edge;$/;"	m	struct:g2o::HyperDijkstra::AdjacencyMapEntry
_graph	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^    HyperGraph* _graph;$/;"	m	struct:g2o::HyperDijkstra
_parent	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Vertex* _parent;$/;"	m	struct:g2o::HyperDijkstra::AdjacencyMapEntry
_visited	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^    HyperGraph::VertexSet _visited;$/;"	m	struct:g2o::HyperDijkstra
adjacencyMap	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^    AdjacencyMap& adjacencyMap() {return _adjacencyMap; }$/;"	f	struct:g2o::HyperDijkstra
child	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Vertex* child() const {return _child;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
children	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::VertexSet& children() {return _children;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
children	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      const HyperGraph::VertexSet& children() const {return _children;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
distance	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      double distance() const {return _distance;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
edge	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Edge* edge() const {return _edge;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
g2o	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^namespace g2o{$/;"	n
graph	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^    HyperGraph* graph() {return _graph;} $/;"	f	struct:g2o::HyperDijkstra
parent	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      HyperGraph::Vertex* parent() const {return _parent;}$/;"	f	struct:g2o::HyperDijkstra::AdjacencyMapEntry
visited	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^    HyperGraph::VertexSet& visited() {return _visited; }$/;"	f	struct:g2o::HyperDijkstra
~CostFunction	trunk/EXTERNAL/g2o/g2o/core/hyper_dijkstra.h	/^      virtual ~CostFunction() { }$/;"	f	struct:g2o::HyperDijkstra::CostFunction
Edge	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::Edge::Edge(int id) : _id(id)$/;"	f	class:g2o::HyperGraph::Edge
HyperGraph	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::HyperGraph()$/;"	f	class:g2o::HyperGraph
Vertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::Vertex::Vertex(int id) : _id(id)$/;"	f	class:g2o::HyperGraph::Vertex
addEdge	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  bool HyperGraph::addEdge(Edge* e)$/;"	f	class:g2o::HyperGraph
addVertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  bool HyperGraph::addVertex(Vertex* v)$/;"	f	class:g2o::HyperGraph
changeId	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  bool HyperGraph::changeId(Vertex* v, int newId){$/;"	f	class:g2o::HyperGraph
clear	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  void HyperGraph::clear()$/;"	f	class:g2o::HyperGraph
g2o	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^namespace g2o {$/;"	n	file:
removeEdge	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  bool HyperGraph::removeEdge(Edge* e)$/;"	f	class:g2o::HyperGraph
removeVertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  bool HyperGraph::removeVertex(Vertex* v)$/;"	f	class:g2o::HyperGraph
resize	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  void HyperGraph::Edge::resize(size_t size)$/;"	f	class:g2o::HyperGraph::Edge
setId	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  void HyperGraph::Edge::setId(int id)$/;"	f	class:g2o::HyperGraph::Edge
vertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::Vertex* HyperGraph::vertex(int id)$/;"	f	class:g2o::HyperGraph
vertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  const HyperGraph::Vertex* HyperGraph::vertex(int id) const$/;"	f	class:g2o::HyperGraph
~Edge	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::Edge::~Edge()$/;"	f	class:g2o::HyperGraph::Edge
~HyperGraph	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::~HyperGraph()$/;"	f	class:g2o::HyperGraph
~Vertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.cpp	/^  HyperGraph::Vertex::~Vertex()$/;"	f	class:g2o::HyperGraph::Vertex
Edge	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      class G2O_CORE_API Edge : public HyperGraphElement {$/;"	c	class:g2o::HyperGraph
Edge	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      class G2O_CORE_API Edge;$/;"	m	class:g2o::HyperGraph
EdgeSet	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      typedef std::set<Edge*>                           EdgeSet;$/;"	t	class:g2o::HyperGraph
G2O_AIS_HYPER_GRAPH_HH	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	28;"	d
GraphElemBitset	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      typedef std::bitset<HyperGraph::HGET_NUM_ELEMS> GraphElemBitset;$/;"	t	class:g2o::HyperGraph
HGET_CACHE	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^        HGET_CACHE,$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HGET_DATA	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^        HGET_DATA,$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HGET_EDGE	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^        HGET_EDGE,$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HGET_NUM_ELEMS	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^        HGET_NUM_ELEMS \/\/ keep as last elem$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HGET_PARAMETER	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^        HGET_PARAMETER,$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HGET_VERTEX	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^        HGET_VERTEX,$/;"	e	enum:g2o::HyperGraph::HyperGraphElementType
HyperGraph	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      HyperGraph(const HyperGraph&) { }$/;"	f	class:g2o::HyperGraph
HyperGraph	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^  class G2O_CORE_API HyperGraph$/;"	c	namespace:g2o
HyperGraphElement	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      struct G2O_CORE_API HyperGraphElement {$/;"	s	class:g2o::HyperGraph
HyperGraphElementType	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      enum G2O_CORE_API HyperGraphElementType {$/;"	g	class:g2o::HyperGraph
Vertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      class G2O_CORE_API Vertex : public HyperGraphElement {$/;"	c	class:g2o::HyperGraph
Vertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      class G2O_CORE_API Vertex;$/;"	m	class:g2o::HyperGraph
VertexContainer	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      typedef std::vector<Vertex*>                      VertexContainer;$/;"	t	class:g2o::HyperGraph
VertexIDMap	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      typedef std::tr1::unordered_map<int, Vertex*>     VertexIDMap;$/;"	t	class:g2o::HyperGraph
VertexSet	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      typedef std::set<Vertex*>                         VertexSet;$/;"	t	class:g2o::HyperGraph
_edges	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          EdgeSet _edges;$/;"	m	class:g2o::HyperGraph::Vertex
_edges	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      EdgeSet _edges;$/;"	m	class:g2o::HyperGraph
_id	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          int _id; \/\/\/< unique id$/;"	m	class:g2o::HyperGraph::Edge
_id	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          int _id;$/;"	m	class:g2o::HyperGraph::Vertex
_vertices	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          VertexContainer _vertices;$/;"	m	class:g2o::HyperGraph::Edge
_vertices	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      VertexIDMap _vertices;$/;"	m	class:g2o::HyperGraph
edges	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          EdgeSet& edges() {return _edges;}$/;"	f	class:g2o::HyperGraph::Vertex
edges	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          const EdgeSet& edges() const {return _edges;}$/;"	f	class:g2o::HyperGraph::Vertex
edges	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      EdgeSet& edges() {return _edges;}$/;"	f	class:g2o::HyperGraph
edges	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      const EdgeSet& edges() const {return _edges;}$/;"	f	class:g2o::HyperGraph
elementType	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          virtual HyperGraphElementType elementType() const { return HGET_EDGE;}$/;"	f	class:g2o::HyperGraph::Edge
elementType	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          virtual HyperGraphElementType elementType() const { return HGET_VERTEX;}$/;"	f	class:g2o::HyperGraph::Vertex
g2o	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^namespace g2o {$/;"	n
id	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          int id() const {return _id;}$/;"	f	class:g2o::HyperGraph::Edge
id	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          int id() const {return _id;}$/;"	f	class:g2o::HyperGraph::Vertex
operator =	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      HyperGraph& operator= (const HyperGraph&) { return *this; }$/;"	f	class:g2o::HyperGraph
setId	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^	  virtual void setId( int newId) { _id=newId; }$/;"	f	class:g2o::HyperGraph::Vertex
setVertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          void setVertex(size_t i, Vertex* v) { assert(i < _vertices.size() && "index out of bounds"); _vertices[i]=v;}$/;"	f	class:g2o::HyperGraph::Edge
vertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          Vertex* vertex(size_t i) { assert(i < _vertices.size() && "index out of bounds"); return _vertices[i];}$/;"	f	class:g2o::HyperGraph::Edge
vertex	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          const Vertex* vertex(size_t i) const { assert(i < _vertices.size() && "index out of bounds"); return _vertices[i];}$/;"	f	class:g2o::HyperGraph::Edge
vertices	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          VertexContainer& vertices() { return _vertices;}$/;"	f	class:g2o::HyperGraph::Edge
vertices	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^          const VertexContainer& vertices() const { return _vertices;}$/;"	f	class:g2o::HyperGraph::Edge
vertices	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      VertexIDMap& vertices() {return _vertices;}$/;"	f	class:g2o::HyperGraph
vertices	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^      const VertexIDMap& vertices() const {return _vertices;}$/;"	f	class:g2o::HyperGraph
~HyperGraphElement	trunk/EXTERNAL/g2o/g2o/core/hyper_graph.h	/^        virtual ~HyperGraphElement() {}$/;"	f	struct:g2o::HyperGraph::HyperGraphElement
DrawAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  DrawAction::DrawAction(const std::string& typeName_) $/;"	f	class:g2o::DrawAction
HyperGraphActionLibrary	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphActionLibrary::HyperGraphActionLibrary()$/;"	f	class:g2o::HyperGraphActionLibrary
HyperGraphElementAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction::HyperGraphElementAction(const std::string& typeName_)$/;"	f	class:g2o::HyperGraphElementAction
HyperGraphElementActionCollection	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementActionCollection::HyperGraphElementActionCollection(const std::string& name_)$/;"	f	class:g2o::HyperGraphElementActionCollection
Parameters	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  DrawAction::Parameters::Parameters(){$/;"	f	class:g2o::DrawAction::Parameters
ParametersIteration	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphAction::ParametersIteration::ParametersIteration(int iter) :$/;"	f	class:g2o::HyperGraphAction::ParametersIteration
WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  WriteGnuplotAction::WriteGnuplotAction(const std::string& typeName_)$/;"	f	class:g2o::WriteGnuplotAction
actionByName	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction* HyperGraphActionLibrary::actionByName(const std::string& name)$/;"	f	class:g2o::HyperGraphActionLibrary
actionLibInstance	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphActionLibrary* HyperGraphActionLibrary::actionLibInstance = 0;$/;"	m	class:g2o::HyperGraphActionLibrary	file:
applyAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  void applyAction(HyperGraph* graph, HyperGraphElementAction* action, HyperGraphElementAction::Parameters* params, const std::string& typeName)$/;"	f	namespace:g2o
destroy	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  void HyperGraphActionLibrary::destroy()$/;"	f	class:g2o::HyperGraphActionLibrary
g2o	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^namespace g2o {$/;"	n	file:
instance	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphActionLibrary* HyperGraphActionLibrary::instance()$/;"	f	class:g2o::HyperGraphActionLibrary
operator ()	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphAction* HyperGraphAction::operator()(const HyperGraph*, Parameters*)$/;"	f	class:g2o::HyperGraphAction
operator ()	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction* HyperGraphElementAction::operator()(HyperGraph::HyperGraphElement* , HyperGraphElementAction::Parameters* )$/;"	f	class:g2o::HyperGraphElementAction
operator ()	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction* HyperGraphElementAction::operator()(const HyperGraph::HyperGraphElement* , HyperGraphElementAction::Parameters* )$/;"	f	class:g2o::HyperGraphElementAction
operator ()	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction* HyperGraphElementActionCollection::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params)$/;"	f	class:g2o::HyperGraphElementActionCollection
operator ()	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction* HyperGraphElementActionCollection::operator()(const HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params)$/;"	f	class:g2o::HyperGraphElementActionCollection
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  bool DrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::DrawAction
registerAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  bool HyperGraphActionLibrary::registerAction(HyperGraphElementAction* action)$/;"	f	class:g2o::HyperGraphActionLibrary
registerAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  bool HyperGraphElementActionCollection::registerAction(HyperGraphElementAction* action)$/;"	f	class:g2o::HyperGraphElementActionCollection
setTypeName	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  void HyperGraphElementAction::setTypeName(const std::string& typeName_)$/;"	f	class:g2o::HyperGraphElementAction
unregisterAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  bool HyperGraphActionLibrary::unregisterAction(HyperGraphElementAction* action)$/;"	f	class:g2o::HyperGraphActionLibrary
unregisterAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  bool HyperGraphElementActionCollection::unregisterAction(HyperGraphElementAction* action)$/;"	f	class:g2o::HyperGraphElementActionCollection
~HyperGraphAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphAction::~HyperGraphAction()$/;"	f	class:g2o::HyperGraphAction
~HyperGraphActionLibrary	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphActionLibrary::~HyperGraphActionLibrary()$/;"	f	class:g2o::HyperGraphActionLibrary
~HyperGraphElementAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction::~HyperGraphElementAction()$/;"	f	class:g2o::HyperGraphElementAction
~HyperGraphElementActionCollection	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementActionCollection::~HyperGraphElementActionCollection()$/;"	f	class:g2o::HyperGraphElementActionCollection
~Parameters	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphAction::Parameters::~Parameters()$/;"	f	class:g2o::HyperGraphAction::Parameters
~Parameters	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.cpp	/^  HyperGraphElementAction::Parameters::~Parameters()$/;"	f	class:g2o::HyperGraphElementAction::Parameters
ActionMap	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      typedef std::map<std::string, HyperGraphElementAction*> ActionMap;$/;"	t	class:g2o::HyperGraphElementAction
DrawAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^  class G2O_CORE_API DrawAction : public HyperGraphElementAction{$/;"	c	namespace:g2o
G2O_HYPER_GRAPH_ACTION_H	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	28;"	d
G2O_REGISTER_ACTION	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	218;"	d
HyperGraphAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^  class G2O_CORE_API HyperGraphAction {$/;"	c	namespace:g2o
HyperGraphActionLibrary	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^  class G2O_CORE_API HyperGraphActionLibrary{$/;"	c	namespace:g2o
HyperGraphElementAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^  class G2O_CORE_API HyperGraphElementAction{$/;"	c	namespace:g2o
HyperGraphElementActionCollection	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^  class G2O_CORE_API HyperGraphElementActionCollection: public HyperGraphElementAction{$/;"	c	namespace:g2o
Parameters	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      class G2O_CORE_API Parameters {$/;"	c	class:g2o::HyperGraphAction
Parameters	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      struct G2O_CORE_API Parameters: public HyperGraphElementAction::Parameters{$/;"	s	class:g2o::WriteGnuplotAction
Parameters	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      struct G2O_CORE_API Parameters{$/;"	s	class:g2o::HyperGraphElementAction
Parameters	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^    class G2O_CORE_API Parameters: public HyperGraphElementAction::Parameters,  public PropertyMap{$/;"	c	class:g2o::DrawAction
ParametersIteration	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      class G2O_CORE_API ParametersIteration : public Parameters {$/;"	c	class:g2o::HyperGraphAction
RegisterActionProxy	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      RegisterActionProxy()$/;"	f	class:g2o::RegisterActionProxy
RegisterActionProxy	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^  template<typename T> class RegisterActionProxy$/;"	c	namespace:g2o
WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^  class G2O_CORE_API WriteGnuplotAction: public HyperGraphElementAction{$/;"	c	namespace:g2o
_action	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^        HyperGraphElementAction* _action;$/;"	m	class:g2o::RegisterActionProxy
_actionMap	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      ActionMap _actionMap;$/;"	m	class:g2o::HyperGraphElementActionCollection
_actionMap	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      HyperGraphElementAction::ActionMap _actionMap;$/;"	m	class:g2o::HyperGraphActionLibrary
_name	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      std::string _name;$/;"	m	class:g2o::HyperGraphElementAction
_previousParams	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^    Parameters* _previousParams;$/;"	m	class:g2o::DrawAction
_show	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^    BoolProperty* _show;$/;"	m	class:g2o::DrawAction
_showId	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^    BoolProperty* _showId;$/;"	m	class:g2o::DrawAction
_typeName	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      std::string _typeName;$/;"	m	class:g2o::HyperGraphElementAction
actionLibInstance	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      static HyperGraphActionLibrary* actionLibInstance;$/;"	m	class:g2o::HyperGraphActionLibrary
actionMap	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      ActionMap& actionMap() {return _actionMap;}$/;"	f	class:g2o::HyperGraphElementActionCollection
actionMap	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      inline HyperGraphElementAction::ActionMap& actionMap() {return _actionMap;}$/;"	f	class:g2o::HyperGraphActionLibrary
g2o	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^namespace g2o {$/;"	n
iteration	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^          int iteration;$/;"	m	class:g2o::HyperGraphAction::ParametersIteration
name	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      const std::string& name() const{ return _name;}$/;"	f	class:g2o::HyperGraphElementAction
os	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^        std::ostream* os;$/;"	m	struct:g2o::WriteGnuplotAction::Parameters
typeName	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^      const std::string& typeName() const { return _typeName;}$/;"	f	class:g2o::HyperGraphElementAction
~RegisterActionProxy	trunk/EXTERNAL/g2o/g2o/core/hyper_graph_action.h	/^        ~RegisterActionProxy()$/;"	f	class:g2o::RegisterActionProxy
JacobianWorkspace	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.cpp	/^JacobianWorkspace::JacobianWorkspace() :$/;"	f	class:g2o::JacobianWorkspace
allocate	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.cpp	/^bool JacobianWorkspace::allocate()$/;"	f	class:g2o::JacobianWorkspace
g2o	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.cpp	/^namespace g2o {$/;"	n	file:
updateSize	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.cpp	/^void JacobianWorkspace::updateSize(const HyperGraph::Edge* e_)$/;"	f	class:g2o::JacobianWorkspace
updateSize	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.cpp	/^void JacobianWorkspace::updateSize(const OptimizableGraph& graph)$/;"	f	class:g2o::JacobianWorkspace
updateSize	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.cpp	/^void JacobianWorkspace::updateSize(int numVertices, int dimension)$/;"	f	class:g2o::JacobianWorkspace
~JacobianWorkspace	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.cpp	/^JacobianWorkspace::~JacobianWorkspace()$/;"	f	class:g2o::JacobianWorkspace
JACOBIAN_WORKSPACE_H	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.h	28;"	d
JacobianWorkspace	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.h	/^  class G2O_CORE_API JacobianWorkspace$/;"	c	namespace:g2o
WorkspaceVector	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.h	/^      typedef std::vector<Eigen::VectorXd, Eigen::aligned_allocator<Eigen::VectorXd> >      WorkspaceVector;$/;"	t	class:g2o::JacobianWorkspace
_maxDimension	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.h	/^      int _maxDimension;            \/\/\/< the maximum dimension (number of elements) for a Jacobian$/;"	m	class:g2o::JacobianWorkspace
_maxNumVertices	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.h	/^      int _maxNumVertices;          \/\/\/< the maximum number of vertices connected by a hyper-edge$/;"	m	class:g2o::JacobianWorkspace
_workspace	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.h	/^      WorkspaceVector _workspace;   \/\/\/< the memory pre-allocated for computing the Jacobians$/;"	m	class:g2o::JacobianWorkspace
g2o	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.h	/^namespace g2o {$/;"	n
workspaceForVertex	trunk/EXTERNAL/g2o/g2o/core/jacobian_workspace.h	/^      double* workspaceForVertex(int vertexIndex)$/;"	f	class:g2o::JacobianWorkspace
G2O_LINEAR_SOLVER_H	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	28;"	d
LinearSolver	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^    LinearSolver() {};$/;"	f	class:g2o::LinearSolver
LinearSolver	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^class LinearSolver$/;"	c	namespace:g2o
LinearSolverCCS	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^    LinearSolverCCS() : LinearSolver<MatrixType>(), _ccsMatrix(0) {}$/;"	f	class:g2o::LinearSolverCCS
LinearSolverCCS	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^class LinearSolverCCS : public LinearSolver<MatrixType>$/;"	c	namespace:g2o
_ccsMatrix	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^    SparseBlockMatrixCCS<MatrixType>* _ccsMatrix;$/;"	m	class:g2o::LinearSolverCCS
g2o	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^namespace g2o {$/;"	n
initMatrixStructure	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^    void initMatrixStructure(const SparseBlockMatrix<MatrixType>& A)$/;"	f	class:g2o::LinearSolverCCS
setWriteDebug	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^    virtual void setWriteDebug(bool) {}$/;"	f	class:g2o::LinearSolver
solveBlocks	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^    virtual bool solveBlocks(double**&blocks, const SparseBlockMatrix<MatrixType>& A) { (void)blocks; (void) A; return false; }$/;"	f	class:g2o::LinearSolver
solvePattern	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^    virtual bool solvePattern(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<std::pair<int, int> >& blockIndices, const SparseBlockMatrix<MatrixType>& A){$/;"	f	class:g2o::LinearSolver
writeDebug	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^    virtual bool writeDebug() const { return false;}$/;"	f	class:g2o::LinearSolver
~LinearSolver	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^    virtual ~LinearSolver() {}$/;"	f	class:g2o::LinearSolver
~LinearSolverCCS	trunk/EXTERNAL/g2o/g2o/core/linear_solver.h	/^    ~LinearSolverCCS()$/;"	f	class:g2o::LinearSolverCCS
MarginalCovarianceCholesky	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^MarginalCovarianceCholesky::MarginalCovarianceCholesky() :$/;"	f	class:g2o::MarginalCovarianceCholesky
MatrixElem	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^  MatrixElem(int r_, int c_) : r(r_), c(c_) {}$/;"	f	struct:g2o::MatrixElem
MatrixElem	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^struct MatrixElem$/;"	s	namespace:g2o	file:
c	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^  int r, c;$/;"	m	struct:g2o::MatrixElem	file:
computeCovariance	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^void MarginalCovarianceCholesky::computeCovariance(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<int>& rowBlockIndices, const std::vector< std::pair<int, int> >& blockIndices)$/;"	f	class:g2o::MarginalCovarianceCholesky
computeCovariance	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^void MarginalCovarianceCholesky::computeCovariance(double** covBlocks, const std::vector<int>& blockIndices)$/;"	f	class:g2o::MarginalCovarianceCholesky
computeEntry	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^double MarginalCovarianceCholesky::computeEntry(int r, int c)$/;"	f	class:g2o::MarginalCovarianceCholesky
g2o	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^namespace g2o {$/;"	n	file:
operator <	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^  bool operator<(const MatrixElem& other) const$/;"	f	struct:g2o::MatrixElem
r	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^  int r, c;$/;"	m	struct:g2o::MatrixElem	file:
setCholeskyFactor	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^void MarginalCovarianceCholesky::setCholeskyFactor(int n, int* Lp, int* Li, double* Lx, int* permInv)$/;"	f	class:g2o::MarginalCovarianceCholesky
~MarginalCovarianceCholesky	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.cpp	/^MarginalCovarianceCholesky::~MarginalCovarianceCholesky()$/;"	f	class:g2o::MarginalCovarianceCholesky
G2O_MARGINAL_COVARIANCE_CHOLESKY_H	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	28;"	d
LookupMap	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^      typedef std::tr1::unordered_map<int, double>     LookupMap;$/;"	t	class:g2o::MarginalCovarianceCholesky
MarginalCovarianceCholesky	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^  class G2O_CORE_API MarginalCovarianceCholesky {$/;"	c	namespace:g2o
_Ai	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^      int* _Ai;         \/\/\/< row indices of the CCS storage$/;"	m	class:g2o::MarginalCovarianceCholesky
_Ap	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^      int* _Ap;         \/\/\/< column pointer of the CCS storage$/;"	m	class:g2o::MarginalCovarianceCholesky
_Ax	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^      double* _Ax;      \/\/\/< values of the cholesky factor$/;"	m	class:g2o::MarginalCovarianceCholesky
_diag	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^      std::vector<double> _diag;  \/\/\/< cache 1 \/ H_ii to avoid recalculations$/;"	m	class:g2o::MarginalCovarianceCholesky
_map	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^      LookupMap _map;             \/\/\/< hash look up table for the already computed entries$/;"	m	class:g2o::MarginalCovarianceCholesky
_n	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^      int _n;           \/\/\/< L is an n X n matrix$/;"	m	class:g2o::MarginalCovarianceCholesky
_perm	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^      int* _perm;       \/\/\/< permutation of the cholesky factor. Variable re-ordering for better fill-in$/;"	m	class:g2o::MarginalCovarianceCholesky
computeIndex	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^      int computeIndex(int r, int c) const { \/*assert(r <= c);*\/ return r*_n + c;}$/;"	f	class:g2o::MarginalCovarianceCholesky
g2o	trunk/EXTERNAL/g2o/g2o/core/marginal_covariance_cholesky.h	/^namespace g2o {$/;"	n
G2O_CORE_MATRIX_OPERATIONS_H	trunk/EXTERNAL/g2o/g2o/core/matrix_operations.h	28;"	d
atxpy	trunk/EXTERNAL/g2o/g2o/core/matrix_operations.h	/^    inline void atxpy(const Eigen::Matrix<double, Eigen::Dynamic, t>& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
atxpy	trunk/EXTERNAL/g2o/g2o/core/matrix_operations.h	/^    inline void atxpy(const Eigen::MatrixXd& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
atxpy	trunk/EXTERNAL/g2o/g2o/core/matrix_operations.h	/^    inline void atxpy(const MatrixType& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
axpy	trunk/EXTERNAL/g2o/g2o/core/matrix_operations.h	/^    inline void axpy(const Eigen::Matrix<double, Eigen::Dynamic, t>& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
axpy	trunk/EXTERNAL/g2o/g2o/core/matrix_operations.h	/^    inline void axpy(const Eigen::MatrixXd& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
axpy	trunk/EXTERNAL/g2o/g2o/core/matrix_operations.h	/^    inline void axpy(const MatrixType& A, const Eigen::Map<const Eigen::VectorXd>& x, int xoff, Eigen::Map<Eigen::VectorXd>& y, int yoff)$/;"	f	namespace:g2o::internal
g2o	trunk/EXTERNAL/g2o/g2o/core/matrix_operations.h	/^namespace g2o {$/;"	n
internal	trunk/EXTERNAL/g2o/g2o/core/matrix_operations.h	/^  namespace internal {$/;"	n	namespace:g2o
ColSort	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.cpp	/^struct ColSort$/;"	s	namespace:g2o	file:
MatrixStructure	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.cpp	/^MatrixStructure::MatrixStructure() :$/;"	f	class:g2o::MatrixStructure
alloc	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.cpp	/^void MatrixStructure::alloc(int n_, int nz)$/;"	f	class:g2o::MatrixStructure
free	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.cpp	/^void MatrixStructure::free()$/;"	f	class:g2o::MatrixStructure
g2o	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.cpp	/^  bool operator()(const pair<int, int>& e1, const pair<int, int>& e2) const$/;"	f	struct:g2o::ColSort
write	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.cpp	/^bool MatrixStructure::write(const char* filename) const$/;"	f	class:g2o::MatrixStructure
~MatrixStructure	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.cpp	/^MatrixStructure::~MatrixStructure()$/;"	f	class:g2o::MatrixStructure
Aii	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.h	/^    int* Aii; \/\/\/< row indices of A, of size nz = Ap [n]$/;"	m	class:g2o::MatrixStructure
Ap	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.h	/^    int* Ap;  \/\/\/< column pointers for A, of size n+1$/;"	m	class:g2o::MatrixStructure
G2O_MATRIX_STRUCTURE_H	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.h	28;"	d
MatrixStructure	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.h	/^class G2O_CORE_API MatrixStructure$/;"	c	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.h	/^namespace g2o {$/;"	n
m	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.h	/^    int m;    \/\/\/< A is m-by-n.  m must be >= 0.$/;"	m	class:g2o::MatrixStructure
maxN	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.h	/^    int maxN;     \/\/\/< size of the allocated memory$/;"	m	class:g2o::MatrixStructure
maxNz	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.h	/^    int maxNz;    \/\/\/< size of the allocated memory$/;"	m	class:g2o::MatrixStructure
n	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.h	/^    int n;    \/\/\/< A is m-by-n.  n must be >= 0.$/;"	m	class:g2o::MatrixStructure
nzMax	trunk/EXTERNAL/g2o/g2o/core/matrix_structure.h	/^    int nzMax() const { return maxNz;}$/;"	f	class:g2o::MatrixStructure
G2O_OPENMP_MUTEX	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	28;"	d
OpenMPMutex	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^      OpenMPMutex() { omp_init_lock(&_lock); }$/;"	f	class:g2o::OpenMPMutex
OpenMPMutex	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^  class OpenMPMutex$/;"	c	namespace:g2o
ScopedOpenMPMutex	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^      explicit ScopedOpenMPMutex(OpenMPMutex* mutex) : _mutex(mutex) { _mutex->lock(); }$/;"	f	class:g2o::ScopedOpenMPMutex
ScopedOpenMPMutex	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^  class ScopedOpenMPMutex$/;"	c	namespace:g2o
_lock	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^      omp_lock_t _lock;$/;"	m	class:g2o::OpenMPMutex
_mutex	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^      OpenMPMutex* const _mutex;$/;"	m	class:g2o::ScopedOpenMPMutex
g2o	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^namespace g2o {$/;"	n
lock	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^      void lock() { omp_set_lock(&_lock); }$/;"	f	class:g2o::OpenMPMutex
unlock	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^      void unlock() { omp_unset_lock(&_lock); }$/;"	f	class:g2o::OpenMPMutex
~OpenMPMutex	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^      ~OpenMPMutex() { omp_destroy_lock(&_lock); }$/;"	f	class:g2o::OpenMPMutex
~ScopedOpenMPMutex	trunk/EXTERNAL/g2o/g2o/core/openmp_mutex.h	/^      ~ScopedOpenMPMutex() { _mutex->unlock(); }$/;"	f	class:g2o::ScopedOpenMPMutex
Data	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Data::Data(){$/;"	f	class:g2o::OptimizableGraph::Data
Edge	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Edge::Edge() :$/;"	f	class:g2o::OptimizableGraph::Edge
OptimizableGraph	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::OptimizableGraph()$/;"	f	class:g2o::OptimizableGraph
Vertex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Vertex::Vertex() :$/;"	f	class:g2o::OptimizableGraph::Vertex
addEdge	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::addEdge(HyperGraph::Edge* e_)$/;"	f	class:g2o::OptimizableGraph
addGraph	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::addGraph(OptimizableGraph* g){$/;"	f	class:g2o::OptimizableGraph
addPostIterationAction	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::addPostIterationAction(HyperGraphAction* action)$/;"	f	class:g2o::OptimizableGraph
addPreIterationAction	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::addPreIterationAction(HyperGraphAction* action)$/;"	f	class:g2o::OptimizableGraph
addVertex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::addVertex(HyperGraph::Vertex* v, Data* userData)$/;"	f	class:g2o::OptimizableGraph
cacheContainer	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  CacheContainer* OptimizableGraph::Vertex::cacheContainer(){$/;"	f	class:g2o::OptimizableGraph::Vertex
chi2	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^double OptimizableGraph::chi2() const$/;"	f	class:g2o::OptimizableGraph
clearParameters	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::clearParameters()$/;"	f	class:g2o::OptimizableGraph
clone	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Edge* OptimizableGraph::Edge::clone() const$/;"	f	class:g2o::OptimizableGraph::Edge
clone	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Vertex* OptimizableGraph::Vertex::clone() const$/;"	f	class:g2o::OptimizableGraph::Vertex
dimensions	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^std::set<int> OptimizableGraph::dimensions() const$/;"	f	class:g2o::OptimizableGraph
discardTop	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::discardTop()$/;"	f	class:g2o::OptimizableGraph
discardTop	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::discardTop(HyperGraph::VertexSet& vset)$/;"	f	class:g2o::OptimizableGraph
estimateDimension	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  int OptimizableGraph::Vertex::estimateDimension() const$/;"	f	class:g2o::OptimizableGraph::Vertex
g2o	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^namespace g2o {$/;"	n	file:
getEstimateData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Vertex::getEstimateData(double *) const$/;"	f	class:g2o::OptimizableGraph::Vertex
getMeasurementData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::getMeasurementData(double *) const$/;"	f	class:g2o::OptimizableGraph::Edge
getMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Vertex::getMinimalEstimateData(double *) const$/;"	f	class:g2o::OptimizableGraph::Vertex
graph	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph* OptimizableGraph::Edge::graph(){$/;"	f	class:g2o::OptimizableGraph::Edge
graph	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  const OptimizableGraph* OptimizableGraph::Edge::graph() const{$/;"	f	class:g2o::OptimizableGraph::Edge
initMultiThreading	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::initMultiThreading()$/;"	f	class:g2o::OptimizableGraph
isSolverSuitable	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::isSolverSuitable(const OptimizationAlgorithmProperty& solverProperty, const std::set<int>& vertDims_) const$/;"	f	class:g2o::OptimizableGraph
load	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::load(const char* filename, bool createEdges)$/;"	f	class:g2o::OptimizableGraph
load	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::load(istream& is, bool createEdges)$/;"	f	class:g2o::OptimizableGraph
maxDimension	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^int OptimizableGraph::maxDimension() const{$/;"	f	class:g2o::OptimizableGraph
measurementDimension	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  int OptimizableGraph::Edge::measurementDimension() const$/;"	f	class:g2o::OptimizableGraph::Edge
minimalEstimateDimension	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  int OptimizableGraph::Vertex::minimalEstimateDimension() const$/;"	f	class:g2o::OptimizableGraph::Vertex
optimize	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  int OptimizableGraph::optimize(int \/*iterations*\/, bool \/*online*\/) {return 0;}$/;"	f	class:g2o::OptimizableGraph
pop	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::pop()$/;"	f	class:g2o::OptimizableGraph
pop	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::pop(HyperGraph::VertexSet& vset)$/;"	f	class:g2o::OptimizableGraph
postIteration	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::postIteration(int iter)$/;"	f	class:g2o::OptimizableGraph
preIteration	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::preIteration(int iter)$/;"	f	class:g2o::OptimizableGraph
push	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::push()$/;"	f	class:g2o::OptimizableGraph
push	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::push(HyperGraph::VertexSet& vset)$/;"	f	class:g2o::OptimizableGraph
removePostIterationAction	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::removePostIterationAction(HyperGraphAction* action)$/;"	f	class:g2o::OptimizableGraph
removePreIterationAction	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::removePreIterationAction(HyperGraphAction* action)$/;"	f	class:g2o::OptimizableGraph
resolveCaches	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::resolveCaches() {$/;"	f	class:g2o::OptimizableGraph::Edge
resolveParameters	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::resolveParameters() {$/;"	f	class:g2o::OptimizableGraph::Edge
save	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::save(const char* filename, int level) const$/;"	f	class:g2o::OptimizableGraph
save	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::save(ostream& os, int level) const$/;"	f	class:g2o::OptimizableGraph
saveEdge	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::saveEdge(std::ostream& os, OptimizableGraph::Edge* e) const$/;"	f	class:g2o::OptimizableGraph
saveSubset	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::saveSubset(ostream& os, HyperGraph::EdgeSet& eset)$/;"	f	class:g2o::OptimizableGraph
saveSubset	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::saveSubset(ostream& os, HyperGraph::VertexSet& vset, int level)$/;"	f	class:g2o::OptimizableGraph
saveVertex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::saveVertex(std::ostream& os, OptimizableGraph::Vertex* v) const$/;"	f	class:g2o::OptimizableGraph
setEstimateData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Vertex::setEstimateData(const double* v)$/;"	f	class:g2o::OptimizableGraph::Vertex
setFixed	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  void OptimizableGraph::setFixed(HyperGraph::VertexSet& vset, bool fixed)$/;"	f	class:g2o::OptimizableGraph
setMeasurementData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::setMeasurementData(const double *)$/;"	f	class:g2o::OptimizableGraph::Edge
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::setMeasurementFromState(){$/;"	f	class:g2o::OptimizableGraph::Edge
setMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Vertex::setMinimalEstimateData(const double* v)$/;"	f	class:g2o::OptimizableGraph::Vertex
setParameterId	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  bool OptimizableGraph::Edge::setParameterId(int argNum, int paramId){$/;"	f	class:g2o::OptimizableGraph::Edge
setRenamedTypesFromString	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^void OptimizableGraph::setRenamedTypesFromString(const std::string& types)$/;"	f	class:g2o::OptimizableGraph
setRobustKernel	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  void OptimizableGraph::Edge::setRobustKernel(RobustKernel* ptr)$/;"	f	class:g2o::OptimizableGraph::Edge
updateCache	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  void OptimizableGraph::Vertex::updateCache(){$/;"	f	class:g2o::OptimizableGraph::Vertex
verifyInformationMatrices	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^bool OptimizableGraph::verifyInformationMatrices(bool verbose) const$/;"	f	class:g2o::OptimizableGraph
~Data	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Data::~Data(){$/;"	f	class:g2o::OptimizableGraph::Data
~Edge	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Edge::~Edge()$/;"	f	class:g2o::OptimizableGraph::Edge
~OptimizableGraph	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::~OptimizableGraph()$/;"	f	class:g2o::OptimizableGraph
~Vertex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.cpp	/^  OptimizableGraph::Vertex::~Vertex()$/;"	f	class:g2o::OptimizableGraph::Vertex
AT_NUM_ELEMENTS	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^      AT_NUM_ELEMENTS, \/\/ keep as last element$/;"	e	enum:g2o::OptimizableGraph::ActionType
AT_POSTITERATION	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^      AT_PREITERATION, AT_POSTITERATION,$/;"	e	enum:g2o::OptimizableGraph::ActionType
AT_PREITERATION	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^      AT_PREITERATION, AT_POSTITERATION,$/;"	e	enum:g2o::OptimizableGraph::ActionType
ActionType	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    enum ActionType {$/;"	g	struct:g2o::OptimizableGraph
Data	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    class G2O_CORE_API Data : public HyperGraph::HyperGraphElement$/;"	c	struct:g2o::OptimizableGraph
Edge	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    class G2O_CORE_API Edge: public HyperGraph::Edge {$/;"	c	struct:g2o::OptimizableGraph
Edge	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    class G2O_CORE_API Edge;$/;"	m	struct:g2o::OptimizableGraph
EdgeContainer	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    typedef std::vector<OptimizableGraph::Edge*>        EdgeContainer;$/;"	t	struct:g2o::OptimizableGraph
EdgeIDCompare	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    struct G2O_CORE_API EdgeIDCompare {$/;"	s	struct:g2o::OptimizableGraph
G2O_AIS_OPTIMIZABLE_GRAPH_HH_	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	28;"	d
HyperGraphActionSet	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    typedef std::set<HyperGraphAction*>    HyperGraphActionSet;$/;"	t	struct:g2o::OptimizableGraph
OptimizableGraph	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^  struct G2O_CORE_API OptimizableGraph : public HyperGraph {$/;"	s	namespace:g2o
Vertex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    class G2O_CORE_API Vertex : public HyperGraph::Vertex {$/;"	c	struct:g2o::OptimizableGraph
Vertex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    class G2O_CORE_API Vertex;$/;"	m	struct:g2o::OptimizableGraph
VertexContainer	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    typedef std::vector<OptimizableGraph::Vertex*>      VertexContainer;$/;"	t	struct:g2o::OptimizableGraph
VertexIDCompare	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    struct G2O_CORE_API VertexIDCompare {$/;"	s	struct:g2o::OptimizableGraph
_cacheContainer	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        CacheContainer* _cacheContainer;$/;"	m	class:g2o::OptimizableGraph::Vertex
_cacheIds	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        std::vector<int> _cacheIds;$/;"	m	class:g2o::OptimizableGraph::Edge
_colInHessian	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int _colInHessian;$/;"	m	class:g2o::OptimizableGraph::Vertex
_dimension	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int _dimension;$/;"	m	class:g2o::OptimizableGraph::Edge
_dimension	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int _dimension;$/;"	m	class:g2o::OptimizableGraph::Vertex
_edge_has_id	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    bool _edge_has_id;$/;"	m	struct:g2o::OptimizableGraph
_fixed	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        bool _fixed;$/;"	m	class:g2o::OptimizableGraph::Vertex
_graph	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        OptimizableGraph* _graph;$/;"	m	class:g2o::OptimizableGraph::Vertex
_graphActions	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    std::vector<HyperGraphActionSet> _graphActions;$/;"	m	struct:g2o::OptimizableGraph
_hessianIndex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int _hessianIndex;$/;"	m	class:g2o::OptimizableGraph::Vertex
_internalId	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        long long _internalId;$/;"	m	class:g2o::OptimizableGraph::Edge
_jacobianWorkspace	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    JacobianWorkspace _jacobianWorkspace;$/;"	m	struct:g2o::OptimizableGraph
_level	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int _level;$/;"	m	class:g2o::OptimizableGraph::Edge
_marginalized	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        bool _marginalized;$/;"	m	class:g2o::OptimizableGraph::Vertex
_next	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        Data* _next; \/\/ linked list of multiple data;$/;"	m	class:g2o::OptimizableGraph::Data
_nextEdgeId	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    long long _nextEdgeId;$/;"	m	struct:g2o::OptimizableGraph
_parameterIds	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        std::vector<int> _parameterIds;$/;"	m	class:g2o::OptimizableGraph::Edge
_parameterTypes	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        std::vector<std::string> _parameterTypes;$/;"	m	class:g2o::OptimizableGraph::Edge
_parameters	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        std::vector<Parameter**> _parameters;$/;"	m	class:g2o::OptimizableGraph::Edge
_parameters	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    ParameterContainer _parameters;$/;"	m	struct:g2o::OptimizableGraph
_quadraticFormMutex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        OpenMPMutex _quadraticFormMutex;$/;"	m	class:g2o::OptimizableGraph::Vertex
_renamedTypesLookup	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    std::map<std::string, std::string> _renamedTypesLookup;$/;"	m	struct:g2o::OptimizableGraph
_robustKernel	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        RobustKernel* _robustKernel;$/;"	m	class:g2o::OptimizableGraph::Edge
_userData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        Data* _userData;$/;"	m	class:g2o::OptimizableGraph::Vertex
addParameter	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    bool addParameter(Parameter* p) {$/;"	f	struct:g2o::OptimizableGraph
addUserData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^	void addUserData(Data* obs) { $/;"	f	class:g2o::OptimizableGraph::Vertex
addVertex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    virtual bool addVertex(HyperGraph::Vertex* v) { return addVertex(v, 0);}$/;"	f	struct:g2o::OptimizableGraph
colInHessian	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int colInHessian() const {return _colInHessian;}$/;"	f	class:g2o::OptimizableGraph::Vertex
createFrom	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        virtual Vertex* createFrom() {return 0;}$/;"	f	class:g2o::OptimizableGraph::Edge
createTo	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        virtual Vertex* createTo()   {return 0;}$/;"	f	class:g2o::OptimizableGraph::Edge
dimension	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int dimension() const { return _dimension;}$/;"	f	class:g2o::OptimizableGraph::Edge
dimension	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int dimension() const { return _dimension;}$/;"	f	class:g2o::OptimizableGraph::Vertex
elementType	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        virtual HyperGraph::HyperGraphElementType elementType() const { return HyperGraph::HGET_DATA;}$/;"	f	class:g2o::OptimizableGraph::Data
fixed	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        bool fixed() const {return _fixed;}$/;"	f	class:g2o::OptimizableGraph::Vertex
g2o	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^namespace g2o {$/;"	n
getEstimateData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        virtual bool getEstimateData(std::vector<double>& estimate) const {$/;"	f	class:g2o::OptimizableGraph::Vertex
getMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        virtual bool getMinimalEstimateData(std::vector<double>& estimate) const {$/;"	f	class:g2o::OptimizableGraph::Vertex
graph	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        OptimizableGraph* graph() {return _graph;}$/;"	f	class:g2o::OptimizableGraph::Vertex
graph	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        const OptimizableGraph* graph() const {return _graph;}$/;"	f	class:g2o::OptimizableGraph::Vertex
hessianIndex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int hessianIndex() const { return _hessianIndex;}$/;"	f	class:g2o::OptimizableGraph::Vertex
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to) { (void) from; (void) to; return -1.;}$/;"	f	class:g2o::OptimizableGraph::Edge
installParameter	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^          bool installParameter(ParameterType*& p, size_t argNo, int paramId=-1){$/;"	f	class:g2o::OptimizableGraph::Edge
internalId	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        long long internalId() const { return _internalId;}$/;"	f	class:g2o::OptimizableGraph::Edge
jacobianWorkspace	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    JacobianWorkspace& jacobianWorkspace() { return _jacobianWorkspace;}$/;"	f	struct:g2o::OptimizableGraph
jacobianWorkspace	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    const JacobianWorkspace& jacobianWorkspace() const { return _jacobianWorkspace;}$/;"	f	struct:g2o::OptimizableGraph
level	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int level() const { return _level;}$/;"	f	class:g2o::OptimizableGraph::Edge
lockQuadraticForm	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void lockQuadraticForm() { _quadraticFormMutex.lock();}$/;"	f	class:g2o::OptimizableGraph::Vertex
marginalized	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        bool marginalized() const {return _marginalized;}$/;"	f	class:g2o::OptimizableGraph::Vertex
next	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        Data* next() {return _next;}$/;"	f	class:g2o::OptimizableGraph::Data
next	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        const Data* next() const {return _next;}$/;"	f	class:g2o::OptimizableGraph::Data
numParameters	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        inline size_t numParameters() const {return _parameters.size();}$/;"	f	class:g2o::OptimizableGraph::Edge
operator ()	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^      bool operator() (const Edge* e1, const Edge* e2) const$/;"	f	struct:g2o::OptimizableGraph::EdgeIDCompare
operator ()	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^      bool operator() (const Vertex* v1, const Vertex* v2) const$/;"	f	struct:g2o::OptimizableGraph::VertexIDCompare
oplus	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void oplus(const double* v)$/;"	f	class:g2o::OptimizableGraph::Vertex
parameter	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        inline const Parameter* parameter(int argNo) const {return *_parameters.at(argNo);}$/;"	f	class:g2o::OptimizableGraph::Edge
parameter	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    Parameter* parameter(int id) {$/;"	f	struct:g2o::OptimizableGraph
resizeParameters	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        inline void resizeParameters(size_t newSize) {$/;"	f	class:g2o::OptimizableGraph::Edge
robustKernel	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        RobustKernel* robustKernel() const { return _robustKernel;}$/;"	f	class:g2o::OptimizableGraph::Edge
setColInHessian	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void setColInHessian(int c) { _colInHessian = c;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setEstimateData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        bool setEstimateData(const std::vector<double>& estimate) { $/;"	f	class:g2o::OptimizableGraph::Vertex
setEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        virtual bool setEstimateDataImpl(const double* ) { return false;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setFixed	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void setFixed(bool fixed) { _fixed = fixed;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setHessianIndex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void setHessianIndex(int ti) { _hessianIndex = ti;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setId	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        virtual void setId(int id) {_id = id;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setLevel	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void setLevel(int l) { _level=l;}$/;"	f	class:g2o::OptimizableGraph::Edge
setMarginalized	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void setMarginalized(bool marginalized) { _marginalized = marginalized;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        bool setMinimalEstimateData(const std::vector<double>& estimate) {$/;"	f	class:g2o::OptimizableGraph::Vertex
setMinimalEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        virtual bool setMinimalEstimateDataImpl(const double* ) { return false;}$/;"	f	class:g2o::OptimizableGraph::Vertex
setNext	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void setNext(Data* next_) { _next = next_; }$/;"	f	class:g2o::OptimizableGraph::Data
setTempIndex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void G2O_ATTRIBUTE_DEPRECATED(setTempIndex(int ti)) { setHessianIndex(ti);}$/;"	f	class:g2o::OptimizableGraph::Vertex
setToOrigin	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void setToOrigin() { setToOriginImpl(); updateCache();}$/;"	f	class:g2o::OptimizableGraph::Vertex
setUserData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void setUserData(Data* obs) { _userData = obs;}$/;"	f	class:g2o::OptimizableGraph::Vertex
tempIndex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        int G2O_ATTRIBUTE_DEPRECATED(tempIndex() const) { return hessianIndex();}$/;"	f	class:g2o::OptimizableGraph::Vertex
unlockQuadraticForm	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        void unlockQuadraticForm() { _quadraticFormMutex.unlock();}$/;"	f	class:g2o::OptimizableGraph::Vertex
userData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        Data* userData() { return _userData; }$/;"	f	class:g2o::OptimizableGraph::Vertex
userData	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^        const Data* userData() const { return _userData; }$/;"	f	class:g2o::OptimizableGraph::Vertex
vertex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    inline Vertex* vertex(int id) { return reinterpret_cast<Vertex*>(HyperGraph::vertex(id));}$/;"	f	struct:g2o::OptimizableGraph
vertex	trunk/EXTERNAL/g2o/g2o/core/optimizable_graph.h	/^    inline const Vertex* vertex (int id) const{ return reinterpret_cast<const Vertex*>(HyperGraph::vertex(id));}$/;"	f	struct:g2o::OptimizableGraph
OptimizationAlgorithm	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.cpp	/^OptimizationAlgorithm::OptimizationAlgorithm() :$/;"	f	class:g2o::OptimizationAlgorithm
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.cpp	/^namespace g2o {$/;"	n	file:
printProperties	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.cpp	/^void OptimizationAlgorithm::printProperties(std::ostream& os) const$/;"	f	class:g2o::OptimizationAlgorithm
setOptimizer	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.cpp	/^void OptimizationAlgorithm::setOptimizer(SparseOptimizer* optimizer)$/;"	f	class:g2o::OptimizationAlgorithm
updatePropertiesFromString	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.cpp	/^bool OptimizationAlgorithm::updatePropertiesFromString(const std::string& propString)$/;"	f	class:g2o::OptimizationAlgorithm
~OptimizationAlgorithm	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.cpp	/^OptimizationAlgorithm::~OptimizationAlgorithm()$/;"	f	class:g2o::OptimizationAlgorithm
Fail	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      enum G2O_CORE_API SolverResult {Terminate=2, OK=1, Fail=-1};$/;"	e	enum:g2o::OptimizationAlgorithm::SolverResult
G2O_OPTIMIZATION_ALGORITHM_H	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	28;"	d
OK	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      enum G2O_CORE_API SolverResult {Terminate=2, OK=1, Fail=-1};$/;"	e	enum:g2o::OptimizationAlgorithm::SolverResult
OptimizationAlgorithm	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      OptimizationAlgorithm(const OptimizationAlgorithm&) { }$/;"	f	class:g2o::OptimizationAlgorithm
OptimizationAlgorithm	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^  class G2O_CORE_API OptimizationAlgorithm$/;"	c	namespace:g2o
SolverResult	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      enum G2O_CORE_API SolverResult {Terminate=2, OK=1, Fail=-1};$/;"	g	class:g2o::OptimizationAlgorithm
Terminate	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      enum G2O_CORE_API SolverResult {Terminate=2, OK=1, Fail=-1};$/;"	e	enum:g2o::OptimizationAlgorithm::SolverResult
_optimizer	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      SparseOptimizer* _optimizer;   \/\/\/< the optimizer the solver is working on$/;"	m	class:g2o::OptimizationAlgorithm
_properties	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      PropertyMap _properties;       \/\/\/< the properties of your solver, use this to store the parameters of your solver$/;"	m	class:g2o::OptimizationAlgorithm
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^namespace g2o {$/;"	n
operator =	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      OptimizationAlgorithm& operator= (const OptimizationAlgorithm&) { return *this; }$/;"	f	class:g2o::OptimizationAlgorithm
optimizer	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      SparseOptimizer* optimizer() { return _optimizer;}$/;"	f	class:g2o::OptimizationAlgorithm
optimizer	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      const SparseOptimizer* optimizer() const { return _optimizer;}$/;"	f	class:g2o::OptimizationAlgorithm
printVerbose	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      virtual void printVerbose(std::ostream& os) const {(void) os;};$/;"	f	class:g2o::OptimizationAlgorithm
properties	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm.h	/^      const PropertyMap& properties() const { return _properties;}$/;"	f	class:g2o::OptimizationAlgorithm
OptimizationAlgorithmDogleg	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^  OptimizationAlgorithmDogleg::OptimizationAlgorithmDogleg(BlockSolverBase* solver) :$/;"	f	class:g2o::OptimizationAlgorithmDogleg
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^namespace g2o {$/;"	n	file:
printVerbose	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^  void OptimizationAlgorithmDogleg::printVerbose(std::ostream& os) const$/;"	f	class:g2o::OptimizationAlgorithmDogleg
solve	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^  OptimizationAlgorithm::SolverResult OptimizationAlgorithmDogleg::solve(int iteration, bool online)$/;"	f	class:g2o::OptimizationAlgorithmDogleg
stepType2Str	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^  const char* OptimizationAlgorithmDogleg::stepType2Str(int stepType)$/;"	f	class:g2o::OptimizationAlgorithmDogleg
~OptimizationAlgorithmDogleg	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.cpp	/^  OptimizationAlgorithmDogleg::~OptimizationAlgorithmDogleg()$/;"	f	class:g2o::OptimizationAlgorithmDogleg
G2O_OPTIMIZATION_ALGORITHM_DOGLEG_H	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	28;"	d
OptimizationAlgorithmDogleg	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^  class G2O_CORE_API OptimizationAlgorithmDogleg : public OptimizationAlgorithmWithHessian$/;"	c	namespace:g2o
STEP_DL	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^        STEP_SD, STEP_GN, STEP_DL$/;"	e	enum:g2o::OptimizationAlgorithmDogleg::<anonymous>
STEP_GN	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^        STEP_SD, STEP_GN, STEP_DL$/;"	e	enum:g2o::OptimizationAlgorithmDogleg::<anonymous>
STEP_SD	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^        STEP_SD, STEP_GN, STEP_DL$/;"	e	enum:g2o::OptimizationAlgorithmDogleg::<anonymous>
STEP_UNDEFINED	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^        STEP_UNDEFINED,$/;"	e	enum:g2o::OptimizationAlgorithmDogleg::<anonymous>
_auxVector	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Eigen::VectorXd _auxVector;   \/\/\/< auxilary vector used to perform multiplications or other stuff$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_currentLambda	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      double _currentLambda;        \/\/\/< the damping factor to force positive definite matrix$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_delta	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      double _delta;                \/\/\/< trust region$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_hdl	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Eigen::VectorXd _hdl;         \/\/\/< final dogleg step$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_hsd	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Eigen::VectorXd _hsd;         \/\/\/< steepest decent step$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_initialLambda	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Property<double>* _initialLambda;$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_lamdbaFactor	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Property<double>* _lamdbaFactor;$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_lastNumTries	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      int _lastNumTries;$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_lastStep	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      int _lastStep;                \/\/\/< type of the step taken by the algorithm$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_maxTrialsAfterFailure	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Property<int>* _maxTrialsAfterFailure;$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_userDeltaInit	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      Property<double>* _userDeltaInit;$/;"	m	class:g2o::OptimizationAlgorithmDogleg
_wasPDInAllIterations	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      bool _wasPDInAllIterations;   \/\/\/< the matrix we solve was positive definite in all iterations -> if not apply damping$/;"	m	class:g2o::OptimizationAlgorithmDogleg
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^namespace g2o {$/;"	n
lastStep	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      int lastStep() const { return _lastStep;}$/;"	f	class:g2o::OptimizationAlgorithmDogleg
trustRegion	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_dogleg.h	/^      double trustRegion() const { return _delta;}$/;"	f	class:g2o::OptimizationAlgorithmDogleg
AbstractOptimizationAlgorithmCreator	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  AbstractOptimizationAlgorithmCreator::AbstractOptimizationAlgorithmCreator(const OptimizationAlgorithmProperty& p) :$/;"	f	class:g2o::AbstractOptimizationAlgorithmCreator
OptimizationAlgorithmFactory	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory::OptimizationAlgorithmFactory()$/;"	f	class:g2o::OptimizationAlgorithmFactory
construct	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithm* OptimizationAlgorithmFactory::construct(const std::string& name, OptimizationAlgorithmProperty& solverProperty) const$/;"	f	class:g2o::OptimizationAlgorithmFactory
destroy	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  void OptimizationAlgorithmFactory::destroy()$/;"	f	class:g2o::OptimizationAlgorithmFactory
factoryInstance	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory* OptimizationAlgorithmFactory::factoryInstance = 0;$/;"	m	class:g2o::OptimizationAlgorithmFactory	file:
findSolver	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory::CreatorList::const_iterator OptimizationAlgorithmFactory::findSolver(const std::string& name) const$/;"	f	class:g2o::OptimizationAlgorithmFactory
findSolver	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory::CreatorList::iterator OptimizationAlgorithmFactory::findSolver(const std::string& name)$/;"	f	class:g2o::OptimizationAlgorithmFactory
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^namespace g2o {$/;"	n	file:
instance	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory* OptimizationAlgorithmFactory::instance()$/;"	f	class:g2o::OptimizationAlgorithmFactory
listSolvers	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  void OptimizationAlgorithmFactory::listSolvers(std::ostream& os) const$/;"	f	class:g2o::OptimizationAlgorithmFactory
registerSolver	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  void OptimizationAlgorithmFactory::registerSolver(AbstractOptimizationAlgorithmCreator* c)$/;"	f	class:g2o::OptimizationAlgorithmFactory
unregisterSolver	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  void OptimizationAlgorithmFactory::unregisterSolver(AbstractOptimizationAlgorithmCreator* c)$/;"	f	class:g2o::OptimizationAlgorithmFactory
~OptimizationAlgorithmFactory	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.cpp	/^  OptimizationAlgorithmFactory::~OptimizationAlgorithmFactory()$/;"	f	class:g2o::OptimizationAlgorithmFactory
AbstractOptimizationAlgorithmCreator	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^  class G2O_CORE_API AbstractOptimizationAlgorithmCreator$/;"	c	namespace:g2o
CreatorList	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^      typedef std::list<AbstractOptimizationAlgorithmCreator*>      CreatorList;$/;"	t	class:g2o::OptimizationAlgorithmFactory
G2O_OAF_EXPORT	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	146;"	d
G2O_OAF_EXPORT	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	149;"	d
G2O_OAF_IMPORT	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	147;"	d
G2O_OAF_IMPORT	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	150;"	d
G2O_OPTMIZATION_ALGORITHM_PROPERTY_H	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	28;"	d
G2O_REGISTER_OPTIMIZATION_ALGORITHM	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	160;"	d
G2O_REGISTER_OPTIMIZATION_LIBRARY	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	153;"	d
G2O_USE_OPTIMIZATION_ALGORITHM	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	164;"	d
G2O_USE_OPTIMIZATION_LIBRARY	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	156;"	d
OptimizationAlgorithm	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^  class G2O_CORE_API OptimizationAlgorithm;$/;"	v
OptimizationAlgorithmFactory	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^  class G2O_CORE_API OptimizationAlgorithmFactory$/;"	c	namespace:g2o
RegisterOptimizationAlgorithmProxy	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^      RegisterOptimizationAlgorithmProxy(AbstractOptimizationAlgorithmCreator* c)$/;"	f	class:g2o::RegisterOptimizationAlgorithmProxy
RegisterOptimizationAlgorithmProxy	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^  class RegisterOptimizationAlgorithmProxy$/;"	c	namespace:g2o
SparseOptimizer	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^  class G2O_CORE_API SparseOptimizer;$/;"	v
_creator	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^      AbstractOptimizationAlgorithmCreator* _creator;$/;"	m	class:g2o::RegisterOptimizationAlgorithmProxy
_creator	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^      CreatorList _creator;$/;"	m	class:g2o::OptimizationAlgorithmFactory
_property	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^      OptimizationAlgorithmProperty _property;$/;"	m	class:g2o::AbstractOptimizationAlgorithmCreator
creatorList	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^      const CreatorList& creatorList() const { return _creator;}$/;"	f	class:g2o::OptimizationAlgorithmFactory
factoryInstance	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^      static OptimizationAlgorithmFactory* factoryInstance;$/;"	m	class:g2o::OptimizationAlgorithmFactory
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^namespace g2o {$/;"	n
property	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^      const OptimizationAlgorithmProperty& property() const { return _property;}$/;"	f	class:g2o::AbstractOptimizationAlgorithmCreator
~AbstractOptimizationAlgorithmCreator	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^      virtual ~AbstractOptimizationAlgorithmCreator() { }$/;"	f	class:g2o::AbstractOptimizationAlgorithmCreator
~RegisterOptimizationAlgorithmProxy	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_factory.h	/^      ~RegisterOptimizationAlgorithmProxy()$/;"	f	class:g2o::RegisterOptimizationAlgorithmProxy
OptimizationAlgorithmGaussNewton	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp	/^  OptimizationAlgorithmGaussNewton::OptimizationAlgorithmGaussNewton(Solver* solver) :$/;"	f	class:g2o::OptimizationAlgorithmGaussNewton
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp	/^namespace g2o {$/;"	n	file:
printVerbose	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp	/^  void OptimizationAlgorithmGaussNewton::printVerbose(std::ostream& os) const$/;"	f	class:g2o::OptimizationAlgorithmGaussNewton
solve	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp	/^  OptimizationAlgorithm::SolverResult OptimizationAlgorithmGaussNewton::solve(int iteration, bool online)$/;"	f	class:g2o::OptimizationAlgorithmGaussNewton
~OptimizationAlgorithmGaussNewton	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_gauss_newton.cpp	/^  OptimizationAlgorithmGaussNewton::~OptimizationAlgorithmGaussNewton()$/;"	f	class:g2o::OptimizationAlgorithmGaussNewton
G2O_OPTIMIZATION_ALGORITHM_GAUSS_NEWTON_H	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_gauss_newton.h	28;"	d
OptimizationAlgorithmGaussNewton	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_gauss_newton.h	/^  class G2O_CORE_API OptimizationAlgorithmGaussNewton : public OptimizationAlgorithmWithHessian$/;"	c	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_gauss_newton.h	/^namespace g2o {$/;"	n
OptimizationAlgorithmLevenberg	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  OptimizationAlgorithmLevenberg::OptimizationAlgorithmLevenberg(Solver* solver) :$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
computeLambdaInit	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  double OptimizationAlgorithmLevenberg::computeLambdaInit() const$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
computeScale	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  double OptimizationAlgorithmLevenberg::computeScale() const$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^namespace g2o {$/;"	n	file:
printVerbose	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  void OptimizationAlgorithmLevenberg::printVerbose(std::ostream& os) const$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
setMaxTrialsAfterFailure	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  void OptimizationAlgorithmLevenberg::setMaxTrialsAfterFailure(int max_trials)$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
setUserLambdaInit	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  void OptimizationAlgorithmLevenberg::setUserLambdaInit(double lambda)$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
solve	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  OptimizationAlgorithm::SolverResult OptimizationAlgorithmLevenberg::solve(int iteration, bool online)$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
~OptimizationAlgorithmLevenberg	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.cpp	/^  OptimizationAlgorithmLevenberg::~OptimizationAlgorithmLevenberg()$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
G2O_SOLVER_LEVENBERG_H	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	28;"	d
OptimizationAlgorithmLevenberg	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^  class G2O_CORE_API OptimizationAlgorithmLevenberg : public OptimizationAlgorithmWithHessian$/;"	c	namespace:g2o
_currentLambda	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double _currentLambda;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_goodStepLowerScale	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double _goodStepLowerScale; \/\/\/< lower bound for lambda decrease if a good LM step$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_goodStepUpperScale	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double _goodStepUpperScale; \/\/\/< upper bound for lambda decrease if a good LM step$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_levenbergIterations	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      int _levenbergIterations;   \/\/\/< the numer of levenberg iterations performed to accept the last step$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_maxTrialsAfterFailure	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      Property<int>* _maxTrialsAfterFailure;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_ni	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double _ni;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_tau	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double _tau;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
_userLambdaInit	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      Property<double>* _userLambdaInit;$/;"	m	class:g2o::OptimizationAlgorithmLevenberg
currentLambda	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double currentLambda() const { return _currentLambda;}$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^namespace g2o {$/;"	n
levenbergIteration	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      int levenbergIteration() { return _levenbergIterations;}$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
maxTrialsAfterFailure	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      int maxTrialsAfterFailure() const { return _maxTrialsAfterFailure->value();}$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
userLambdaInit	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_levenberg.h	/^      double userLambdaInit() {return _userLambdaInit->value();}$/;"	f	class:g2o::OptimizationAlgorithmLevenberg
G2O_OPTIMIZATION_ALGORITHM_PROPERTY_H	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	28;"	d
OptimizationAlgorithmProperty	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	/^  OptimizationAlgorithmProperty() :$/;"	f	struct:g2o::OptimizationAlgorithmProperty
OptimizationAlgorithmProperty	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	/^  OptimizationAlgorithmProperty(const std::string& name_, const std::string& desc_, const std::string& type_, bool requiresMarginalize_, int poseDim_, int landmarkDim_) :$/;"	f	struct:g2o::OptimizationAlgorithmProperty
OptimizationAlgorithmProperty	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	/^struct G2O_CORE_API OptimizationAlgorithmProperty$/;"	s	namespace:g2o
desc	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	/^  std::string desc;           \/\/\/< short description of the solver$/;"	m	struct:g2o::OptimizationAlgorithmProperty
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	/^namespace g2o {$/;"	n
landmarkDim	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	/^  int landmarkDim;            \/\/\/< dimension of the landmar vertices (-1 if variable)$/;"	m	struct:g2o::OptimizationAlgorithmProperty
name	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	/^  std::string name;           \/\/\/< name of the solver, e.g., var$/;"	m	struct:g2o::OptimizationAlgorithmProperty
poseDim	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	/^  int poseDim;                \/\/\/< dimension of the pose vertices (-1 if variable)$/;"	m	struct:g2o::OptimizationAlgorithmProperty
requiresMarginalize	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	/^  bool requiresMarginalize;   \/\/\/< whether the solver requires marginalization of landmarks$/;"	m	struct:g2o::OptimizationAlgorithmProperty
type	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_property.h	/^  std::string type;           \/\/\/< type of solver, e.g., "CSparse Cholesky", "PCG"$/;"	m	struct:g2o::OptimizationAlgorithmProperty
OptimizationAlgorithmWithHessian	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  OptimizationAlgorithmWithHessian::OptimizationAlgorithmWithHessian(Solver* solver) :$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
buildLinearStructure	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  bool OptimizationAlgorithmWithHessian::buildLinearStructure()$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
computeMarginals	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  bool OptimizationAlgorithmWithHessian::computeMarginals(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<std::pair<int, int> >& blockIndices)$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^namespace g2o {$/;"	n	file:
init	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  bool OptimizationAlgorithmWithHessian::init(bool online)$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
setWriteDebug	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  void OptimizationAlgorithmWithHessian::setWriteDebug(bool writeDebug)$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
updateLinearSystem	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  void OptimizationAlgorithmWithHessian::updateLinearSystem()$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
updateStructure	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  bool OptimizationAlgorithmWithHessian::updateStructure(const std::vector<HyperGraph::Vertex*>& vset, const HyperGraph::EdgeSet& edges)$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
~OptimizationAlgorithmWithHessian	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.cpp	/^  OptimizationAlgorithmWithHessian::~OptimizationAlgorithmWithHessian()$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
G2O_OPTIMIZATION_ALGORITHM_WITH_HESSIAN_H	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.h	28;"	d
OptimizationAlgorithmWithHessian	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^  class G2O_CORE_API OptimizationAlgorithmWithHessian : public OptimizationAlgorithm$/;"	c	namespace:g2o
_solver	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^      Solver* _solver;$/;"	m	class:g2o::OptimizationAlgorithmWithHessian
_writeDebug	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^      Property<bool>* _writeDebug;$/;"	m	class:g2o::OptimizationAlgorithmWithHessian
g2o	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^namespace g2o {$/;"	n
solver	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^      Solver* solver() { return _solver;}$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
writeDebug	trunk/EXTERNAL/g2o/g2o/core/optimization_algorithm_with_hessian.h	/^      virtual bool writeDebug() const { return _writeDebug->value();}$/;"	f	class:g2o::OptimizationAlgorithmWithHessian
Parameter	trunk/EXTERNAL/g2o/g2o/core/parameter.cpp	/^  Parameter::Parameter() : _id(-1)$/;"	f	class:g2o::Parameter
g2o	trunk/EXTERNAL/g2o/g2o/core/parameter.cpp	/^namespace g2o {$/;"	n	file:
setId	trunk/EXTERNAL/g2o/g2o/core/parameter.cpp	/^  void Parameter::setId(int id_)$/;"	f	class:g2o::Parameter
G2O_GRAPH_PARAMETER_HH_	trunk/EXTERNAL/g2o/g2o/core/parameter.h	28;"	d
Parameter	trunk/EXTERNAL/g2o/g2o/core/parameter.h	/^    class G2O_CORE_API Parameter : public HyperGraph::HyperGraphElement$/;"	c	namespace:g2o
ParameterVector	trunk/EXTERNAL/g2o/g2o/core/parameter.h	/^    typedef std::vector<Parameter*> ParameterVector;$/;"	t	namespace:g2o
_id	trunk/EXTERNAL/g2o/g2o/core/parameter.h	/^        int _id;$/;"	m	class:g2o::Parameter
elementType	trunk/EXTERNAL/g2o/g2o/core/parameter.h	/^        virtual HyperGraph::HyperGraphElementType elementType() const { return HyperGraph::HGET_PARAMETER;}$/;"	f	class:g2o::Parameter
g2o	trunk/EXTERNAL/g2o/g2o/core/parameter.h	/^namespace g2o {$/;"	n
id	trunk/EXTERNAL/g2o/g2o/core/parameter.h	/^        int id() const {return _id;}$/;"	f	class:g2o::Parameter
~Parameter	trunk/EXTERNAL/g2o/g2o/core/parameter.h	/^        virtual ~Parameter() {};$/;"	f	class:g2o::Parameter
ParameterContainer	trunk/EXTERNAL/g2o/g2o/core/parameter_container.cpp	/^  ParameterContainer::ParameterContainer(bool isMainStorage_) :$/;"	f	class:g2o::ParameterContainer
addParameter	trunk/EXTERNAL/g2o/g2o/core/parameter_container.cpp	/^  bool ParameterContainer::addParameter(Parameter* p){$/;"	f	class:g2o::ParameterContainer
clear	trunk/EXTERNAL/g2o/g2o/core/parameter_container.cpp	/^  void ParameterContainer::clear() {$/;"	f	class:g2o::ParameterContainer
detachParameter	trunk/EXTERNAL/g2o/g2o/core/parameter_container.cpp	/^  Parameter* ParameterContainer::detachParameter(int id){$/;"	f	class:g2o::ParameterContainer
g2o	trunk/EXTERNAL/g2o/g2o/core/parameter_container.cpp	/^namespace g2o {$/;"	n	file:
getParameter	trunk/EXTERNAL/g2o/g2o/core/parameter_container.cpp	/^  Parameter* ParameterContainer::getParameter(int id) {$/;"	f	class:g2o::ParameterContainer
read	trunk/EXTERNAL/g2o/g2o/core/parameter_container.cpp	/^  bool ParameterContainer::read(std::istream& is, const std::map<std::string, std::string>* _renamedTypesLookup){$/;"	f	class:g2o::ParameterContainer
write	trunk/EXTERNAL/g2o/g2o/core/parameter_container.cpp	/^  bool ParameterContainer::write(std::ostream& os) const{$/;"	f	class:g2o::ParameterContainer
~ParameterContainer	trunk/EXTERNAL/g2o/g2o/core/parameter_container.cpp	/^  ParameterContainer::~ParameterContainer(){$/;"	f	class:g2o::ParameterContainer
BaseClass	trunk/EXTERNAL/g2o/g2o/core/parameter_container.h	/^      typedef std::map<int, Parameter*> BaseClass;$/;"	t	class:g2o::ParameterContainer
G2O_GRAPH_PARAMETER_CONTAINER_HH_	trunk/EXTERNAL/g2o/g2o/core/parameter_container.h	28;"	d
ParameterContainer	trunk/EXTERNAL/g2o/g2o/core/parameter_container.h	/^    class ParameterContainer : protected std::map<int, Parameter*> $/;"	c	namespace:g2o
_isMainStorage	trunk/EXTERNAL/g2o/g2o/core/parameter_container.h	/^      bool _isMainStorage;$/;"	m	class:g2o::ParameterContainer
g2o	trunk/EXTERNAL/g2o/g2o/core/parameter_container.h	/^namespace g2o {$/;"	n
isMainStorage	trunk/EXTERNAL/g2o/g2o/core/parameter_container.h	/^      bool isMainStorage() const {return _isMainStorage;}$/;"	f	class:g2o::ParameterContainer
RobustKernel	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.cpp	/^RobustKernel::RobustKernel() :$/;"	f	class:g2o::RobustKernel
RobustKernel	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.cpp	/^RobustKernel::RobustKernel(double delta) :$/;"	f	class:g2o::RobustKernel
g2o	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.cpp	/^namespace g2o {$/;"	n	file:
setDelta	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.cpp	/^void RobustKernel::setDelta(double delta)$/;"	f	class:g2o::RobustKernel
G2O_ROBUST_KERNEL_H	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.h	28;"	d
RobustKernel	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.h	/^  class G2O_CORE_API RobustKernel$/;"	c	namespace:g2o
RobustKernelPtr	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.h	/^  typedef std::tr1::shared_ptr<RobustKernel> RobustKernelPtr;$/;"	t	namespace:g2o
_delta	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.h	/^      double _delta;$/;"	m	class:g2o::RobustKernel
delta	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.h	/^      double delta() const { return _delta;}$/;"	f	class:g2o::RobustKernel
g2o	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.h	/^namespace g2o {$/;"	n
~RobustKernel	trunk/EXTERNAL/g2o/g2o/core/robust_kernel.h	/^      virtual ~RobustKernel() {}$/;"	f	class:g2o::RobustKernel
RobustKernelFactory	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^RobustKernelFactory::RobustKernelFactory()$/;"	f	class:g2o::RobustKernelFactory
construct	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^RobustKernel* RobustKernelFactory::construct(const std::string& tag) const$/;"	f	class:g2o::RobustKernelFactory
creator	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^AbstractRobustKernelCreator* RobustKernelFactory::creator(const std::string& tag) const$/;"	f	class:g2o::RobustKernelFactory
destroy	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^void RobustKernelFactory::destroy()$/;"	f	class:g2o::RobustKernelFactory
factoryInstance	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^RobustKernelFactory* RobustKernelFactory::factoryInstance = 0;$/;"	m	class:g2o::RobustKernelFactory	file:
fillKnownKernels	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^void RobustKernelFactory::fillKnownKernels(std::vector<std::string>& types) const$/;"	f	class:g2o::RobustKernelFactory
g2o	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^namespace g2o {$/;"	n	file:
instance	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^RobustKernelFactory* RobustKernelFactory::instance()$/;"	f	class:g2o::RobustKernelFactory
registerRobustKernel	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^void RobustKernelFactory::registerRobustKernel(const std::string& tag, AbstractRobustKernelCreator* c)$/;"	f	class:g2o::RobustKernelFactory
unregisterType	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^void RobustKernelFactory::unregisterType(const std::string& tag)$/;"	f	class:g2o::RobustKernelFactory
~RobustKernelFactory	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.cpp	/^RobustKernelFactory::~RobustKernelFactory()$/;"	f	class:g2o::RobustKernelFactory
AbstractRobustKernelCreator	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^  class G2O_CORE_API AbstractRobustKernelCreator$/;"	c	namespace:g2o
CreatorMap	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^      typedef std::map<std::string, AbstractRobustKernelCreator*>              CreatorMap;$/;"	t	class:g2o::RobustKernelFactory
G2O_REGISTER_ROBUST_KERNEL	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	142;"	d
G2O_ROBUST_KERNEL_FACTORY_EXPORT	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	134;"	d
G2O_ROBUST_KERNEL_FACTORY_EXPORT	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	137;"	d
G2O_ROBUST_KERNEL_FACTORY_H	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	28;"	d
G2O_ROBUST_KERNEL_FACTORY_IMPORT	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	135;"	d
G2O_ROBUST_KERNEL_FACTORY_IMPORT	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	138;"	d
G2O_USE_ROBUST_KERNEL	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	146;"	d
RegisterRobustKernelProxy	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^      RegisterRobustKernelProxy(const std::string& name) : _name(name)$/;"	f	class:g2o::RegisterRobustKernelProxy
RegisterRobustKernelProxy	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^  class RegisterRobustKernelProxy$/;"	c	namespace:g2o
RobustKernelCreator	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^  class RobustKernelCreator : public AbstractRobustKernelCreator$/;"	c	namespace:g2o
RobustKernelFactory	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^  class G2O_CORE_API RobustKernelFactory$/;"	c	namespace:g2o
_creator	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^      CreatorMap _creator;     \/\/\/< look-up map for the existing creators$/;"	m	class:g2o::RobustKernelFactory
_name	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^      std::string _name;$/;"	m	class:g2o::RegisterRobustKernelProxy
construct	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^      RobustKernel* construct() { return new T;}$/;"	f	class:g2o::RobustKernelCreator
factoryInstance	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^      static RobustKernelFactory* factoryInstance;$/;"	m	class:g2o::RobustKernelFactory
g2o	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^namespace g2o {$/;"	n
~AbstractRobustKernelCreator	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^      virtual ~AbstractRobustKernelCreator() { }$/;"	f	class:g2o::AbstractRobustKernelCreator
~RegisterRobustKernelProxy	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_factory.h	/^      ~RegisterRobustKernelProxy()$/;"	f	class:g2o::RegisterRobustKernelProxy
RobustKernelScaleDelta	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.cpp	/^RobustKernelScaleDelta::RobustKernelScaleDelta(const RobustKernelPtr& kernel, double delta) :$/;"	f	class:g2o::RobustKernelScaleDelta
RobustKernelScaleDelta	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.cpp	/^RobustKernelScaleDelta::RobustKernelScaleDelta(double delta) :$/;"	f	class:g2o::RobustKernelScaleDelta
g2o	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.cpp	/^namespace g2o {$/;"	n	file:
robustify	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelCauchy::robustify(double e2, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelCauchy
robustify	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelDCS::robustify(double e2, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelDCS
robustify	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelHuber::robustify(double e, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelHuber
robustify	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelPseudoHuber::robustify(double e2, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelPseudoHuber
robustify	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelSaturated::robustify(double e2, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelSaturated
robustify	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelScaleDelta::robustify(double error, Eigen::Vector3d& rho) const$/;"	f	class:g2o::RobustKernelScaleDelta
setKernel	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.cpp	/^void RobustKernelScaleDelta::setKernel(const RobustKernelPtr& ptr)$/;"	f	class:g2o::RobustKernelScaleDelta
G2O_ROBUST_KERNEL_IMPL_H	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.h	28;"	d
RobustKernelCauchy	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.h	/^  class G2O_CORE_API RobustKernelCauchy : public RobustKernel$/;"	c	namespace:g2o
RobustKernelDCS	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.h	/^  class G2O_CORE_API RobustKernelDCS : public RobustKernel$/;"	c	namespace:g2o
RobustKernelHuber	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.h	/^  class G2O_CORE_API RobustKernelHuber : public RobustKernel$/;"	c	namespace:g2o
RobustKernelPseudoHuber	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.h	/^  class G2O_CORE_API RobustKernelPseudoHuber : public RobustKernel$/;"	c	namespace:g2o
RobustKernelSaturated	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.h	/^  class G2O_CORE_API RobustKernelSaturated : public RobustKernel$/;"	c	namespace:g2o
RobustKernelScaleDelta	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.h	/^  class G2O_CORE_API RobustKernelScaleDelta : public RobustKernel$/;"	c	namespace:g2o
_kernel	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.h	/^      RobustKernelPtr _kernel;$/;"	m	class:g2o::RobustKernelScaleDelta
g2o	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.h	/^namespace g2o {$/;"	n
kernel	trunk/EXTERNAL/g2o/g2o/core/robust_kernel_impl.h	/^      const RobustKernelPtr kernel() const { return _kernel;}$/;"	f	class:g2o::RobustKernelScaleDelta
Solver	trunk/EXTERNAL/g2o/g2o/core/solver.cpp	/^Solver::Solver() :$/;"	f	class:g2o::Solver
g2o	trunk/EXTERNAL/g2o/g2o/core/solver.cpp	/^namespace g2o {$/;"	n	file:
resizeVector	trunk/EXTERNAL/g2o/g2o/core/solver.cpp	/^void Solver::resizeVector(size_t sx)$/;"	f	class:g2o::Solver
setAdditionalVectorSpace	trunk/EXTERNAL/g2o/g2o/core/solver.cpp	/^void Solver::setAdditionalVectorSpace(size_t s)$/;"	f	class:g2o::Solver
setLevenberg	trunk/EXTERNAL/g2o/g2o/core/solver.cpp	/^void Solver::setLevenberg(bool levenberg)$/;"	f	class:g2o::Solver
setOptimizer	trunk/EXTERNAL/g2o/g2o/core/solver.cpp	/^void Solver::setOptimizer(SparseOptimizer* optimizer)$/;"	f	class:g2o::Solver
~Solver	trunk/EXTERNAL/g2o/g2o/core/solver.cpp	/^Solver::~Solver()$/;"	f	class:g2o::Solver
G2O_SOLVER_H	trunk/EXTERNAL/g2o/g2o/core/solver.h	28;"	d
Solver	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      Solver(const Solver&) { }$/;"	f	class:g2o::Solver
Solver	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^  class G2O_CORE_API Solver$/;"	c	namespace:g2o
_additionalVectorSpace	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      size_t _additionalVectorSpace;$/;"	m	class:g2o::Solver
_b	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      double* _b;$/;"	m	class:g2o::Solver
_isLevenberg	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      bool _isLevenberg; \/\/\/< the system we gonna solve is a Levenberg-Marquardt system$/;"	m	class:g2o::Solver
_maxXSize	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      size_t _xSize, _maxXSize;$/;"	m	class:g2o::Solver
_optimizer	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      SparseOptimizer* _optimizer;$/;"	m	class:g2o::Solver
_x	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      double* _x;$/;"	m	class:g2o::Solver
_xSize	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      size_t _xSize, _maxXSize;$/;"	m	class:g2o::Solver
additionalVectorSpace	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      size_t additionalVectorSpace() const { return _additionalVectorSpace;}$/;"	f	class:g2o::Solver
b	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      const double* b() const { return _b;}$/;"	f	class:g2o::Solver
b	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      double* b() { return _b;}$/;"	f	class:g2o::Solver
g2o	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^namespace g2o {$/;"	n
levenberg	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      bool levenberg() const { return _isLevenberg;}$/;"	f	class:g2o::Solver
operator =	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      Solver& operator= (const Solver&) { return *this; }$/;"	f	class:g2o::Solver
optimizer	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      SparseOptimizer* optimizer() const { return _optimizer;}$/;"	f	class:g2o::Solver
supportsSchur	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      virtual bool supportsSchur() {return false;}$/;"	f	class:g2o::Solver
vectorSize	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      size_t vectorSize() const { return _xSize;}$/;"	f	class:g2o::Solver
x	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      const double* x() const { return _x;}$/;"	f	class:g2o::Solver
x	trunk/EXTERNAL/g2o/g2o/core/solver.h	/^      double* x() { return _x;}$/;"	f	class:g2o::Solver
G2O_SPARSE_BLOCK_MATRIX_	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	28;"	d
IntBlockMap	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    typedef std::map<int, SparseMatrixBlock*> IntBlockMap;$/;"	t	class:g2o::SparseBlockMatrix
SparseBlockMatrix	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^class SparseBlockMatrix {$/;"	c	namespace:g2o
SparseBlockMatrixXd	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^  typedef SparseBlockMatrix<MatrixXd> SparseBlockMatrixXd;   $/;"	t	namespace:g2o
SparseMatrixBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    typedef MatrixType SparseMatrixBlock;$/;"	t	class:g2o::SparseBlockMatrix
_blockCols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector <IntBlockMap> _blockCols;$/;"	m	class:g2o::SparseBlockMatrix
_colBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector<int> _colBlockIndices; \/\/\/< vector of the indices of the blocks along the cols$/;"	m	class:g2o::SparseBlockMatrix
_hasStorage	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    bool _hasStorage;$/;"	m	class:g2o::SparseBlockMatrix
_rowBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector<int> _rowBlockIndices; \/\/\/< vector of the indices of the blocks along the rows.$/;"	m	class:g2o::SparseBlockMatrix
blockCols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    const std::vector<IntBlockMap>& blockCols() const { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrix
blockCols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector<IntBlockMap>& blockCols() { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrix
colBaseOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    inline int colBaseOfBlock(int c) const { return c ? _colBlockIndices[c-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrix
colBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    const std::vector<int>& colBlockIndices() const { return _colBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrix
colBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector<int>& colBlockIndices() { return _colBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrix
cols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    inline int cols() const {return _colBlockIndices.size() ? _colBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrix
colsOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    inline int colsOfBlock(int c) const { return c ? _colBlockIndices[c] - _colBlockIndices[c-1] : _colBlockIndices[0]; }$/;"	f	class:g2o::SparseBlockMatrix
g2o	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^namespace g2o {$/;"	n
rowBaseOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    inline int rowBaseOfBlock(int r) const { return r ? _rowBlockIndices[r-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrix
rowBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    const std::vector<int>& rowBlockIndices() const { return _rowBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrix
rowBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    std::vector<int>& rowBlockIndices() { return _rowBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrix
rows	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    inline int rows() const {return _rowBlockIndices.size() ? _rowBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrix
rowsOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.h	/^    inline int rowsOfBlock(int r) const { return r ? _rowBlockIndices[r] - _rowBlockIndices[r-1] : _rowBlockIndices[0] ; }$/;"	f	class:g2o::SparseBlockMatrix
CmpPairFirst	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^    struct CmpPairFirst {$/;"	s	namespace:g2o::<anonymous>
SparseBlockMatrix	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  SparseBlockMatrix<MatrixType>::SparseBlockMatrix( ):$/;"	f	class:g2o::SparseBlockMatrix
SparseBlockMatrix	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  SparseBlockMatrix<MatrixType>::SparseBlockMatrix( const int * rbi, const int* cbi, int rb, int cb, bool hasStorage):$/;"	f	class:g2o::SparseBlockMatrix
TripletColSort	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^    struct TripletColSort$/;"	s	namespace:g2o::<anonymous>
TripletEntry	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^      TripletEntry(int r_, int c_, double x_) : r(r_), c(c_), x(x_) {}$/;"	f	struct:g2o::<anonymous>::TripletEntry
TripletEntry	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^    struct TripletEntry$/;"	s	namespace:g2o::<anonymous>
add	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  bool SparseBlockMatrix<MatrixType>::add(SparseBlockMatrix*& dest) const {$/;"	f	class:g2o::SparseBlockMatrix
block	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  const typename SparseBlockMatrix<MatrixType>::SparseMatrixBlock* SparseBlockMatrix<MatrixType>::block(int r, int c) const {$/;"	f	class:g2o::SparseBlockMatrix
block	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  typename SparseBlockMatrix<MatrixType>::SparseMatrixBlock* SparseBlockMatrix<MatrixType>::block(int r, int c, bool alloc) {$/;"	f	class:g2o::SparseBlockMatrix
c	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^      int r, c;$/;"	m	struct:g2o::<anonymous>::TripletEntry
clear	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::clear(bool dealloc) {$/;"	f	class:g2o::SparseBlockMatrix
clone	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  SparseBlockMatrix<MatrixType>* SparseBlockMatrix<MatrixType>::clone() const {$/;"	f	class:g2o::SparseBlockMatrix
fillBlockStructure	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::fillBlockStructure(MatrixStructure& ms) const$/;"	f	class:g2o::SparseBlockMatrix
fillCCS	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  int SparseBlockMatrix<MatrixType>::fillCCS(double* Cx, bool upperTriangle) const$/;"	f	class:g2o::SparseBlockMatrix
fillCCS	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  int SparseBlockMatrix<MatrixType>::fillCCS(int* Cp, int* Ci, double* Cx, bool upperTriangle) const$/;"	f	class:g2o::SparseBlockMatrix
fillSparseBlockMatrixCCS	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  int SparseBlockMatrix<MatrixType>::fillSparseBlockMatrixCCS(SparseBlockMatrixCCS<MatrixType>& blockCCS) const$/;"	f	class:g2o::SparseBlockMatrix
fillSparseBlockMatrixCCSTransposed	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  int SparseBlockMatrix<MatrixType>::fillSparseBlockMatrixCCSTransposed(SparseBlockMatrixCCS<MatrixType>& blockCCS) const$/;"	f	class:g2o::SparseBlockMatrix
g2o	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^namespace g2o {$/;"	n
multiply	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  bool SparseBlockMatrix<MatrixType>::multiply(SparseBlockMatrix<MatrixResultType>*& dest, const SparseBlockMatrix<MatrixFactorType> * M) const {$/;"	f	class:g2o::SparseBlockMatrix
multiply	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::multiply(double*& dest, const double* src) const {$/;"	f	class:g2o::SparseBlockMatrix
multiplySymmetricUpperTriangle	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::multiplySymmetricUpperTriangle(double*& dest, const double* src) const$/;"	f	class:g2o::SparseBlockMatrix
nonZeroBlocks	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  size_t SparseBlockMatrix<MatrixType>::nonZeroBlocks() const {$/;"	f	class:g2o::SparseBlockMatrix
nonZeros	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  size_t SparseBlockMatrix<MatrixType>::nonZeros() const{$/;"	f	class:g2o::SparseBlockMatrix
operator ()	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^      bool operator()(const TripletEntry& e1, const TripletEntry& e2) const$/;"	f	struct:g2o::<anonymous>::TripletColSort
operator ()	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^      bool operator()(const std::pair<T1,T2>& left, const std::pair<T1,T2>& right) {$/;"	f	struct:g2o::<anonymous>::CmpPairFirst
operator <<	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  std::ostream& operator << (std::ostream& os, const SparseBlockMatrix<MatrixType>& m){$/;"	f	namespace:g2o
r	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^      int r, c;$/;"	m	struct:g2o::<anonymous>::TripletEntry
rightMultiply	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::rightMultiply(double*& dest, const double* src) const {$/;"	f	class:g2o::SparseBlockMatrix
scale	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::scale(double a_) {$/;"	f	class:g2o::SparseBlockMatrix
slice	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  SparseBlockMatrix<MatrixType>*  SparseBlockMatrix<MatrixType>::slice(int rmin, int rmax, int cmin, int cmax, bool alloc) const {$/;"	f	class:g2o::SparseBlockMatrix
symmPermutation	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  bool SparseBlockMatrix<MatrixType>::symmPermutation(SparseBlockMatrix<MatrixType>*& dest, const int* pinv, bool  upperTriangle) const{$/;"	f	class:g2o::SparseBlockMatrix
takePatternFromHash	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  void SparseBlockMatrix<MatrixType>::takePatternFromHash(SparseBlockMatrixHashMap<MatrixType>& hashMatrix)$/;"	f	class:g2o::SparseBlockMatrix
transpose	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  bool SparseBlockMatrix<MatrixType>::transpose(SparseBlockMatrix<MatrixTransposedType>*& dest) const {$/;"	f	class:g2o::SparseBlockMatrix
writeOctave	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  bool SparseBlockMatrix<MatrixType>::writeOctave(const char* filename, bool upperTriangle) const$/;"	f	class:g2o::SparseBlockMatrix
x	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^      double x;$/;"	m	struct:g2o::<anonymous>::TripletEntry
~SparseBlockMatrix	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix.hpp	/^  SparseBlockMatrix<MatrixType>::~SparseBlockMatrix(){$/;"	f	class:g2o::SparseBlockMatrix
G2O_SPARSE_BLOCK_MATRIX_CCS_H	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	28;"	d
RowBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^        RowBlock() : row(-1), block(0) {}$/;"	f	struct:g2o::SparseBlockMatrixCCS::RowBlock
RowBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^        RowBlock(int r, MatrixType* b) : row(r), block(b) {}$/;"	f	struct:g2o::SparseBlockMatrixCCS::RowBlock
RowBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      struct RowBlock$/;"	s	class:g2o::SparseBlockMatrixCCS
SparseBlockMatrixCCS	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      SparseBlockMatrixCCS(const std::vector<int>& rowIndices, const std::vector<int>& colIndices) :$/;"	f	class:g2o::SparseBlockMatrixCCS
SparseBlockMatrixCCS	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^  class SparseBlockMatrixCCS$/;"	c	namespace:g2o
SparseBlockMatrixHashMap	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      SparseBlockMatrixHashMap(const std::vector<int>& rowIndices, const std::vector<int>& colIndices) :$/;"	f	class:g2o::SparseBlockMatrixHashMap
SparseBlockMatrixHashMap	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^  class SparseBlockMatrixHashMap$/;"	c	namespace:g2o
SparseColumn	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      typedef std::tr1::unordered_map<int, MatrixType*> SparseColumn;$/;"	t	class:g2o::SparseBlockMatrixHashMap
SparseColumn	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      typedef std::vector<RowBlock>      SparseColumn;$/;"	t	class:g2o::SparseBlockMatrixCCS
SparseMatrixBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      typedef MatrixType SparseMatrixBlock;$/;"	t	class:g2o::SparseBlockMatrixCCS
SparseMatrixBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      typedef MatrixType SparseMatrixBlock;$/;"	t	class:g2o::SparseBlockMatrixHashMap
_blockCols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      std::vector<SparseColumn> _blockCols;     \/\/\/< the matrices stored in CCS order$/;"	m	class:g2o::SparseBlockMatrixCCS
_blockCols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      std::vector<SparseColumn> _blockCols;     \/\/\/< the matrices stored in CCS order$/;"	m	class:g2o::SparseBlockMatrixHashMap
_colBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& _colBlockIndices; \/\/\/< vector of the indices of the blocks along the cols$/;"	m	class:g2o::SparseBlockMatrixCCS
_colBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& _colBlockIndices; \/\/\/< vector of the indices of the blocks along the cols$/;"	m	class:g2o::SparseBlockMatrixHashMap
_rowBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& _rowBlockIndices; \/\/\/< vector of the indices of the blocks along the rows.$/;"	m	class:g2o::SparseBlockMatrixCCS
_rowBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& _rowBlockIndices; \/\/\/< vector of the indices of the blocks along the rows.$/;"	m	class:g2o::SparseBlockMatrixHashMap
addBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      MatrixType* addBlock(int r, int c, bool zeroBlock = false)$/;"	f	class:g2o::SparseBlockMatrixHashMap
block	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^        MatrixType* block;    \/\/\/< matrix pointer for the block$/;"	m	struct:g2o::SparseBlockMatrixCCS::RowBlock
blockCols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<SparseColumn>& blockCols() const { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrixCCS
blockCols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<SparseColumn>& blockCols() const { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
blockCols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      std::vector<SparseColumn>& blockCols() { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrixCCS
blockCols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      std::vector<SparseColumn>& blockCols() { return _blockCols;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
colBaseOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int colBaseOfBlock(int c) const { return c ? _colBlockIndices[c-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrixCCS
colBaseOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int colBaseOfBlock(int c) const { return c ? _colBlockIndices[c-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrixHashMap
colBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& colBlockIndices() const { return _colBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrixCCS
colBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& colBlockIndices() const { return _colBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
cols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int cols() const {return _colBlockIndices.size() ? _colBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixCCS
cols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int cols() const {return _colBlockIndices.size() ? _colBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
colsOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int colsOfBlock(int c) const { return c ? _colBlockIndices[c] - _colBlockIndices[c-1] : _colBlockIndices[0]; }$/;"	f	class:g2o::SparseBlockMatrixCCS
colsOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int colsOfBlock(int c) const { return c ? _colBlockIndices[c] - _colBlockIndices[c-1] : _colBlockIndices[0]; }$/;"	f	class:g2o::SparseBlockMatrixHashMap
fillCCS	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int fillCCS(double* Cx, bool upperTriangle = false) const$/;"	f	class:g2o::SparseBlockMatrixCCS
fillCCS	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int fillCCS(int* Cp, int* Ci, double* Cx, bool upperTriangle = false) const$/;"	f	class:g2o::SparseBlockMatrixCCS
g2o	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^namespace g2o {$/;"	n
operator <	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^        bool operator<(const RowBlock& other) const { return row < other.row;}$/;"	f	struct:g2o::SparseBlockMatrixCCS::RowBlock
rightMultiply	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      void rightMultiply(double*& dest, const double* src) const$/;"	f	class:g2o::SparseBlockMatrixCCS
row	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^        int row;              \/\/\/< row of the block$/;"	m	struct:g2o::SparseBlockMatrixCCS::RowBlock
rowBaseOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rowBaseOfBlock(int r) const { return r ? _rowBlockIndices[r-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrixCCS
rowBaseOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rowBaseOfBlock(int r) const { return r ? _rowBlockIndices[r-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrixHashMap
rowBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& rowBlockIndices() const { return _rowBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrixCCS
rowBlockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      const std::vector<int>& rowBlockIndices() const { return _rowBlockIndices;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
rows	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rows() const {return _rowBlockIndices.size() ? _rowBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixCCS
rows	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rows() const {return _rowBlockIndices.size() ? _rowBlockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixHashMap
rowsOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rowsOfBlock(int r) const { return r ? _rowBlockIndices[r] - _rowBlockIndices[r-1] : _rowBlockIndices[0] ; }$/;"	f	class:g2o::SparseBlockMatrixCCS
rowsOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      int rowsOfBlock(int r) const { return r ? _rowBlockIndices[r] - _rowBlockIndices[r-1] : _rowBlockIndices[0] ; }$/;"	f	class:g2o::SparseBlockMatrixHashMap
sortColumns	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_ccs.h	/^      void sortColumns()$/;"	f	class:g2o::SparseBlockMatrixCCS
DiagonalVector	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      typedef std::vector<MatrixType, Eigen::aligned_allocator<MatrixType> >      DiagonalVector;$/;"	t	class:g2o::SparseBlockMatrixDiagonal
G2O_SPARSE_BLOCK_MATRIX_DIAGONAL_H	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	28;"	d
SparseBlockMatrixDiagonal	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      SparseBlockMatrixDiagonal(const std::vector<int>& blockIndices) :$/;"	f	class:g2o::SparseBlockMatrixDiagonal
SparseBlockMatrixDiagonal	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^  class SparseBlockMatrixDiagonal$/;"	c	namespace:g2o
SparseMatrixBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      typedef MatrixType SparseMatrixBlock;$/;"	t	class:g2o::SparseBlockMatrixDiagonal
_blockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      const std::vector<int>& _blockIndices; \/\/\/< vector of the indices of the blocks along the diagonal$/;"	m	class:g2o::SparseBlockMatrixDiagonal
_diagonal	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      DiagonalVector _diagonal;$/;"	m	class:g2o::SparseBlockMatrixDiagonal
baseOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      inline int baseOfBlock(int r) const { return r ? _blockIndices[r-1] : 0 ; }$/;"	f	class:g2o::SparseBlockMatrixDiagonal
blockIndices	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      const std::vector<int>& blockIndices() const { return _blockIndices;}$/;"	f	class:g2o::SparseBlockMatrixDiagonal
cols	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      int cols() const {return _blockIndices.size() ? _blockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixDiagonal
diagonal	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      DiagonalVector& diagonal() { return _diagonal;}$/;"	f	class:g2o::SparseBlockMatrixDiagonal
diagonal	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      const DiagonalVector& diagonal() const { return _diagonal;}$/;"	f	class:g2o::SparseBlockMatrixDiagonal
dimOfBlock	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      inline int dimOfBlock(int r) const { return r ? _blockIndices[r] - _blockIndices[r-1] : _blockIndices[0] ; }$/;"	f	class:g2o::SparseBlockMatrixDiagonal
g2o	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^namespace g2o {$/;"	n
multiply	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      void multiply(double*& dest, const double* src) const$/;"	f	class:g2o::SparseBlockMatrixDiagonal
rows	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_diagonal.h	/^      int rows() const {return _blockIndices.size() ? _blockIndices.back() : 0;}$/;"	f	class:g2o::SparseBlockMatrixDiagonal
SparseBlockMatrixX	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_test.cpp	/^SparseBlockMatrixX;$/;"	t	file:
main	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_test.cpp	/^int main (int argc, char** argv){$/;"	f
operator <<	trunk/EXTERNAL/g2o/g2o/core/sparse_block_matrix_test.cpp	/^std::ostream& operator << (std::ostream& os, const SparseBlockMatrixX::SparseMatrixBlock& m) {$/;"	f
SparseOptimizer	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  SparseOptimizer::SparseOptimizer() :$/;"	f	class:g2o::SparseOptimizer
activeChi2	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  double SparseOptimizer::activeChi2( ) const$/;"	f	class:g2o::SparseOptimizer
activeRobustChi2	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  double SparseOptimizer::activeRobustChi2() const$/;"	f	class:g2o::SparseOptimizer
addComputeErrorAction	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::addComputeErrorAction(HyperGraphAction* action)$/;"	f	class:g2o::SparseOptimizer
buildIndexMapping	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::buildIndexMapping(SparseOptimizer::VertexContainer& vlist){$/;"	f	class:g2o::SparseOptimizer
clear	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::clear() {$/;"	f	class:g2o::SparseOptimizer
clearIndexMapping	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::clearIndexMapping(){$/;"	f	class:g2o::SparseOptimizer
computeActiveErrors	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::computeActiveErrors()$/;"	f	class:g2o::SparseOptimizer
computeInitialGuess	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::computeInitialGuess()$/;"	f	class:g2o::SparseOptimizer
computeInitialGuess	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::computeInitialGuess(EstimatePropagatorCost& costFunction)$/;"	f	class:g2o::SparseOptimizer
computeMarginals	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::computeMarginals(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<std::pair<int, int> >& blockIndices){$/;"	f	class:g2o::SparseOptimizer
discardTop	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::discardTop()$/;"	f	class:g2o::SparseOptimizer
discardTop	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::discardTop(SparseOptimizer::VertexContainer& vlist)$/;"	f	class:g2o::SparseOptimizer
findActiveEdge	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  SparseOptimizer::EdgeContainer::const_iterator SparseOptimizer::findActiveEdge(const OptimizableGraph::Edge* e) const$/;"	f	class:g2o::SparseOptimizer
findActiveVertex	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  SparseOptimizer::VertexContainer::const_iterator SparseOptimizer::findActiveVertex(const OptimizableGraph::Vertex* v) const$/;"	f	class:g2o::SparseOptimizer
findGauge	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  OptimizableGraph::Vertex* SparseOptimizer::findGauge(){$/;"	f	class:g2o::SparseOptimizer
g2o	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^namespace g2o{$/;"	n	file:
gaugeFreedom	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::gaugeFreedom()$/;"	f	class:g2o::SparseOptimizer
initializeOptimization	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::initializeOptimization(HyperGraph::EdgeSet& eset){$/;"	f	class:g2o::SparseOptimizer
initializeOptimization	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::initializeOptimization(HyperGraph::VertexSet& vset, int level){$/;"	f	class:g2o::SparseOptimizer
initializeOptimization	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::initializeOptimization(int level){$/;"	f	class:g2o::SparseOptimizer
optimize	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  int SparseOptimizer::optimize(int iterations, bool online)$/;"	f	class:g2o::SparseOptimizer
pop	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::pop()$/;"	f	class:g2o::SparseOptimizer
pop	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::pop(HyperGraph::VertexSet& vlist)$/;"	f	class:g2o::SparseOptimizer
pop	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::pop(SparseOptimizer::VertexContainer& vlist)$/;"	f	class:g2o::SparseOptimizer
push	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::push()$/;"	f	class:g2o::SparseOptimizer
push	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::push(HyperGraph::VertexSet& vlist)$/;"	f	class:g2o::SparseOptimizer
push	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::push(SparseOptimizer::VertexContainer& vlist)$/;"	f	class:g2o::SparseOptimizer
removeComputeErrorAction	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::removeComputeErrorAction(HyperGraphAction* action)$/;"	f	class:g2o::SparseOptimizer
removeVertex	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::removeVertex(HyperGraph::Vertex* v)$/;"	f	class:g2o::SparseOptimizer
setAlgorithm	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::setAlgorithm(OptimizationAlgorithm* algorithm)$/;"	f	class:g2o::SparseOptimizer
setComputeBatchStatistics	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::setComputeBatchStatistics(bool computeBatchStatistics)$/;"	f	class:g2o::SparseOptimizer
setForceStopFlag	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::setForceStopFlag(bool* flag)$/;"	f	class:g2o::SparseOptimizer
setToOrigin	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::setToOrigin(){$/;"	f	class:g2o::SparseOptimizer
setVerbose	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::setVerbose(bool verbose)$/;"	f	class:g2o::SparseOptimizer
sortVectorContainers	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::sortVectorContainers()$/;"	f	class:g2o::SparseOptimizer
update	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  void SparseOptimizer::update(const double* update)$/;"	f	class:g2o::SparseOptimizer
updateInitialization	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  bool SparseOptimizer::updateInitialization(HyperGraph::VertexSet& vset, HyperGraph::EdgeSet& eset)$/;"	f	class:g2o::SparseOptimizer
~SparseOptimizer	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.cpp	/^  SparseOptimizer::~SparseOptimizer(){$/;"	f	class:g2o::SparseOptimizer
AT_COMPUTEACTIVERROR	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^      AT_COMPUTEACTIVERROR = OptimizableGraph::AT_NUM_ELEMENTS,$/;"	e	enum:g2o::SparseOptimizer::<anonymous>
AT_NUM_ELEMENTS	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^      AT_NUM_ELEMENTS, \/\/ keep as last element$/;"	e	enum:g2o::SparseOptimizer::<anonymous>
G2O_ATTRIBUTE_DEPRECATED	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    G2O_ATTRIBUTE_DEPRECATED(void linearizeSystem())$/;"	f	class:g2o::SparseOptimizer
G2O_GRAPH_OPTIMIZER_CHOL_H_	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	28;"	d
SparseOptimizer	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^  class G2O_CORE_API SparseOptimizer : public OptimizableGraph {$/;"	c	namespace:g2o
_activeEdges	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    EdgeContainer _activeEdges;        \/\/\/< sorted according to EdgeIDCompare$/;"	m	class:g2o::SparseOptimizer
_activeVertices	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    VertexContainer _activeVertices;   \/\/\/< sorted according to VertexIDCompare$/;"	m	class:g2o::SparseOptimizer
_algorithm	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    OptimizationAlgorithm* _algorithm;$/;"	m	class:g2o::SparseOptimizer
_batchStatistics	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    BatchStatisticsContainer _batchStatistics;   \/\/\/< global statistics of the optimizer, e.g., timing, num-non-zeros$/;"	m	class:g2o::SparseOptimizer
_computeBatchStatistics	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    bool _computeBatchStatistics;$/;"	m	class:g2o::SparseOptimizer
_forceStopFlag	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    bool* _forceStopFlag;$/;"	m	class:g2o::SparseOptimizer
_ivMap	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    VertexContainer _ivMap;$/;"	m	class:g2o::SparseOptimizer
_verbose	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    bool _verbose;$/;"	m	class:g2o::SparseOptimizer
activeEdges	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    const EdgeContainer& activeEdges() const { return _activeEdges;}$/;"	f	class:g2o::SparseOptimizer
activeVertices	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    const VertexContainer& activeVertices() const { return _activeVertices;}$/;"	f	class:g2o::SparseOptimizer
algorithm	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    const OptimizationAlgorithm* algorithm() const { return _algorithm;}$/;"	f	class:g2o::SparseOptimizer
batchStatistics	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    BatchStatisticsContainer& batchStatistics() { return _batchStatistics;}$/;"	f	class:g2o::SparseOptimizer
batchStatistics	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    const BatchStatisticsContainer& batchStatistics() const { return _batchStatistics;}$/;"	f	class:g2o::SparseOptimizer
computeBatchStatistics	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    bool computeBatchStatistics() const { return _computeBatchStatistics;}$/;"	f	class:g2o::SparseOptimizer
computeMarginals	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    bool computeMarginals(SparseBlockMatrix<MatrixXd>& spinv, const Vertex* vertex) {$/;"	f	class:g2o::SparseOptimizer
computeMarginals	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    bool computeMarginals(SparseBlockMatrix<MatrixXd>& spinv, const VertexContainer& vertices) {$/;"	f	class:g2o::SparseOptimizer
forceStopFlag	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    bool* forceStopFlag() const { return _forceStopFlag;};$/;"	f	class:g2o::SparseOptimizer
g2o	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^namespace g2o {$/;"	n
indexMapping	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    const VertexContainer& indexMapping() const {return _ivMap;}$/;"	f	class:g2o::SparseOptimizer
solver	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    OptimizationAlgorithm* solver() { return _algorithm;}$/;"	f	class:g2o::SparseOptimizer
terminate	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    bool terminate() {return _forceStopFlag ? (*_forceStopFlag) : false; }$/;"	f	class:g2o::SparseOptimizer
verbose	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer.h	/^    bool verbose()  const {return _verbose;}$/;"	f	class:g2o::SparseOptimizer
SparseOptimizerTerminateAction	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.cpp	/^  SparseOptimizerTerminateAction::SparseOptimizerTerminateAction() :$/;"	f	class:g2o::SparseOptimizerTerminateAction
g2o	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.cpp	/^  HyperGraphAction* SparseOptimizerTerminateAction::operator()(const HyperGraph* graph, Parameters* parameters)$/;"	f	class:g2o::SparseOptimizerTerminateAction
setGainThreshold	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.cpp	/^  void SparseOptimizerTerminateAction::setGainThreshold(double gainThreshold)$/;"	f	class:g2o::SparseOptimizerTerminateAction
setMaxIterations	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.cpp	/^  void SparseOptimizerTerminateAction::setMaxIterations(int maxit)$/;"	f	class:g2o::SparseOptimizerTerminateAction
SPARSE_OPTIMIZER_TERMINATE_ACTION_H	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.h	2;"	d
SparseOptimizerTerminateAction	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.h	/^  class G2O_CORE_API SparseOptimizerTerminateAction : public HyperGraphAction$/;"	c	namespace:g2o
_auxTerminateFlag	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.h	/^      bool _auxTerminateFlag;$/;"	m	class:g2o::SparseOptimizerTerminateAction
_gainThreshold	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.h	/^      double _gainThreshold;$/;"	m	class:g2o::SparseOptimizerTerminateAction
_lastChi	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.h	/^      double _lastChi;$/;"	m	class:g2o::SparseOptimizerTerminateAction
_maxIterations	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.h	/^      int _maxIterations;$/;"	m	class:g2o::SparseOptimizerTerminateAction
g2o	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.h	/^namespace g2o {$/;"	n
gainThreshold	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.h	/^      double gainThreshold() const { return _gainThreshold;}$/;"	f	class:g2o::SparseOptimizerTerminateAction
maxIterations	trunk/EXTERNAL/g2o/g2o/core/sparse_optimizer_terminate_action.h	/^      int maxIterations() const { return _maxIterations;}$/;"	f	class:g2o::SparseOptimizerTerminateAction
Sample	trunk/EXTERNAL/g2o/g2o/examples/ba/ba_demo.cpp	/^class Sample {$/;"	c	file:
gauss_rand	trunk/EXTERNAL/g2o/g2o/examples/ba/ba_demo.cpp	/^static double gauss_rand(double mean, double sigma){$/;"	f	file:
gaussian	trunk/EXTERNAL/g2o/g2o/examples/ba/ba_demo.cpp	/^double Sample::gaussian(double sigma){$/;"	f	class:Sample
main	trunk/EXTERNAL/g2o/g2o/examples/ba/ba_demo.cpp	/^int main(int argc, const char* argv[]){$/;"	f
uniform	trunk/EXTERNAL/g2o/g2o/examples/ba/ba_demo.cpp	/^double Sample::uniform(){$/;"	f	class:Sample
uniform	trunk/EXTERNAL/g2o/g2o/examples/ba/ba_demo.cpp	/^int Sample::uniform(int from, int to){$/;"	f	class:Sample
uniform_rand	trunk/EXTERNAL/g2o/g2o/examples/ba/ba_demo.cpp	/^static double uniform_rand(double lowerBndr, double upperBndr){$/;"	f	file:
Sample	trunk/EXTERNAL/g2o/g2o/examples/ba_anchored_inverse_depth/ba_anchored_inverse_depth_demo.cpp	/^class Sample{$/;"	c	file:
gauss_rand	trunk/EXTERNAL/g2o/g2o/examples/ba_anchored_inverse_depth/ba_anchored_inverse_depth_demo.cpp	/^static double gauss_rand(double mean, double sigma){$/;"	f	file:
gaussian	trunk/EXTERNAL/g2o/g2o/examples/ba_anchored_inverse_depth/ba_anchored_inverse_depth_demo.cpp	/^double Sample::gaussian(double sigma){$/;"	f	class:Sample
invert_depth	trunk/EXTERNAL/g2o/g2o/examples/ba_anchored_inverse_depth/ba_anchored_inverse_depth_demo.cpp	/^inline Vector3d invert_depth(const Vector3d & x){$/;"	f
main	trunk/EXTERNAL/g2o/g2o/examples/ba_anchored_inverse_depth/ba_anchored_inverse_depth_demo.cpp	/^int main(int argc, const char* argv[]){$/;"	f
project2d	trunk/EXTERNAL/g2o/g2o/examples/ba_anchored_inverse_depth/ba_anchored_inverse_depth_demo.cpp	/^Vector2d project2d(const Vector3d& v){$/;"	f
uniform	trunk/EXTERNAL/g2o/g2o/examples/ba_anchored_inverse_depth/ba_anchored_inverse_depth_demo.cpp	/^double Sample::uniform(){$/;"	f	class:Sample
uniform	trunk/EXTERNAL/g2o/g2o/examples/ba_anchored_inverse_depth/ba_anchored_inverse_depth_demo.cpp	/^int Sample::uniform(int from, int to){$/;"	f	class:Sample
uniform_rand	trunk/EXTERNAL/g2o/g2o/examples/ba_anchored_inverse_depth/ba_anchored_inverse_depth_demo.cpp	/^static double uniform_rand(double lowerBndr, double upperBndr){$/;"	f	file:
unproject2d	trunk/EXTERNAL/g2o/g2o/examples/ba_anchored_inverse_depth/ba_anchored_inverse_depth_demo.cpp	/^Vector3d unproject2d(const Vector2d& v){$/;"	f
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:EdgeObservationBAL	file:
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:VertexCameraBAL	file:
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:VertexPointBAL	file:
EdgeObservationBAL	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    EdgeObservationBAL()$/;"	f	class:EdgeObservationBAL
EdgeObservationBAL	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^class EdgeObservationBAL : public BaseBinaryEdge<2, Vector2d, VertexCameraBAL, VertexPointBAL>$/;"	c	file:
VertexCameraBAL	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    VertexCameraBAL()$/;"	f	class:VertexCameraBAL
VertexCameraBAL	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^class VertexCameraBAL : public BaseVertex<9, Eigen::VectorXd>$/;"	c	file:
VertexPointBAL	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    VertexPointBAL()$/;"	f	class:VertexPointBAL
VertexPointBAL	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^class VertexPointBAL : public BaseVertex<3, Eigen::Vector3d>$/;"	c	file:
computeError	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    void computeError()$/;"	f	class:EdgeObservationBAL
cross	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    inline void cross(const T x[3], const T y[3], T result[3]) const$/;"	f	class:EdgeObservationBAL
dot	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    inline T dot(const T x[3], const T y[3]) const { return (x[0] * y[0] + x[1] * y[1] + x[2] * y[2]);}$/;"	f	class:EdgeObservationBAL
linearizeOplus	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    void linearizeOplus()$/;"	f	class:EdgeObservationBAL
main	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^int main(int argc, char** argv)$/;"	f
operator ()	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    bool operator()(const T* camera, const T* point, T* error) const$/;"	f	class:EdgeObservationBAL
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    virtual void oplusImpl(const double* update)$/;"	f	class:VertexCameraBAL
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    virtual void oplusImpl(const double* update)$/;"	f	class:VertexPointBAL
read	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    virtual bool read(std::istream& \/*is*\/)$/;"	f	class:EdgeObservationBAL
read	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    virtual bool read(std::istream& \/*is*\/)$/;"	f	class:VertexCameraBAL
read	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    virtual bool read(std::istream& \/*is*\/)$/;"	f	class:VertexPointBAL
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    virtual void setToOriginImpl()$/;"	f	class:VertexCameraBAL
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    virtual void setToOriginImpl()$/;"	f	class:VertexPointBAL
squaredNorm	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    inline T squaredNorm(const T x[3]) const { return dot<T>(x, x);}$/;"	f	class:EdgeObservationBAL
write	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:EdgeObservationBAL
write	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:VertexCameraBAL
write	trunk/EXTERNAL/g2o/g2o/examples/bal/bal_example.cpp	/^    virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:VertexPointBAL
CUBE	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/closed_form_calibration.cpp	37;"	d	file:
SQR	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/closed_form_calibration.cpp	36;"	d	file:
calibrate	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/closed_form_calibration.cpp	/^bool ClosedFormCalibration::calibrate(const MotionInformationVector& measurements, SE2& laserOffset, Eigen::Vector3d& odomParams)$/;"	f	class:g2o::ClosedFormCalibration
g2o	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/closed_form_calibration.cpp	/^namespace g2o {$/;"	n	file:
solveLagrange	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/closed_form_calibration.cpp	/^Eigen::VectorXd ClosedFormCalibration::solveLagrange(const Eigen::Matrix<double,5,5>& M, double lambda)$/;"	f	class:g2o::ClosedFormCalibration
ClosedFormCalibration	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/closed_form_calibration.h	/^  class G2O_CALIBRATION_ODOM_LASER_API ClosedFormCalibration$/;"	c	namespace:g2o
G2O_CLOSED_FORM_CALIBRATION_H	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/closed_form_calibration.h	28;"	d
g2o	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/closed_form_calibration.h	/^namespace g2o {$/;"	n
EdgeSE2PureCalib	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.cpp	/^EdgeSE2PureCalib::EdgeSE2PureCalib()$/;"	f	class:g2o::EdgeSE2PureCalib
computeError	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.cpp	/^void EdgeSE2PureCalib::computeError()$/;"	f	class:g2o::EdgeSE2PureCalib
g2o	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.cpp	/^bool EdgeSE2PureCalib::read(std::istream& is)$/;"	f	class:g2o::EdgeSE2PureCalib
write	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.cpp	/^bool EdgeSE2PureCalib::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSE2PureCalib
EDGE_SE2_PURE_CALIB_H	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.h	28;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::EdgeSE2PureCalib
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	struct:g2o::OdomAndLaserMotion
EdgeSE2PureCalib	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.h	/^  class G2O_CALIBRATION_ODOM_LASER_API EdgeSE2PureCalib : public BaseBinaryEdge<3, OdomAndLaserMotion, VertexSE2, VertexOdomDifferentialParams>$/;"	c	namespace:g2o
OdomAndLaserMotion	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.h	/^  struct G2O_CALIBRATION_ODOM_LASER_API OdomAndLaserMotion$/;"	s	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.h	/^namespace g2o {$/;"	n
laserMotion	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.h	/^    SE2 laserMotion;$/;"	m	struct:g2o::OdomAndLaserMotion
velocityMeasurement	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/edge_se2_pure_calib.h	/^    VelocityMeasurement velocityMeasurement;$/;"	m	struct:g2o::OdomAndLaserMotion
G2O_CALIBRATION_ODOM_LASER_API	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/g2o_calibration_odom_laser_api.h	19;"	d
G2O_CALIBRATION_ODOM_LASER_API	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/g2o_calibration_odom_laser_api.h	21;"	d
G2O_CALIBRATION_ODOM_LASER_API	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/g2o_calibration_odom_laser_api.h	24;"	d
G2O_CALIBRATION_ODOM_LASER_API	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/g2o_calibration_odom_laser_api.h	29;"	d
G2O_CALIBRATION_ODOM_LASER_API_H	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/g2o_calibration_odom_laser_api.h	11;"	d
ID_LASERPOSE	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.cpp	/^  const int Gm2dlIO::ID_LASERPOSE  = numeric_limits<int>::max();$/;"	m	class:g2o::Gm2dlIO	file:
ID_ODOMCALIB	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.cpp	/^  const int Gm2dlIO::ID_ODOMCALIB  = numeric_limits<int>::max() - 1;$/;"	m	class:g2o::Gm2dlIO	file:
g2o	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.cpp	/^namespace g2o {$/;"	n	file:
readGm2dl	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.cpp	/^  bool Gm2dlIO::readGm2dl(const std::string& filename, SparseOptimizer& optimizer, bool overrideCovariances)$/;"	f	class:g2o::Gm2dlIO
readRobotLaser	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.cpp	/^  int Gm2dlIO::readRobotLaser(const std::string& filename, DataQueue& queue)$/;"	f	class:g2o::Gm2dlIO
updateLaserData	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.cpp	/^  bool Gm2dlIO::updateLaserData(SparseOptimizer& optimizer)$/;"	f	class:g2o::Gm2dlIO
writeGm2dl	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.cpp	/^  bool Gm2dlIO::writeGm2dl(const std::string& filename, const SparseOptimizer& optimizer)$/;"	f	class:g2o::Gm2dlIO
Gm2dlIO	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.h	/^  class G2O_CALIBRATION_ODOM_LASER_API Gm2dlIO$/;"	c	namespace:g2o
ID_LASERPOSE	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.h	/^      static const int ID_LASERPOSE;$/;"	m	class:g2o::Gm2dlIO
ID_ODOMCALIB	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.h	/^      static const int ID_ODOMCALIB;$/;"	m	class:g2o::Gm2dlIO
g2o	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/gm2dl_io.h	/^namespace g2o {$/;"	n
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/motion_information.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	struct:g2o::MotionInformation
G2O_MOTION_INFORMATION_H	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/motion_information.h	28;"	d
MotionInformation	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/motion_information.h	/^  struct G2O_CALIBRATION_ODOM_LASER_API MotionInformation$/;"	s	namespace:g2o
MotionInformationVector	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/motion_information.h	/^  typedef std::vector<MotionInformation, Eigen::aligned_allocator<MotionInformation> >     MotionInformationVector;$/;"	t	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/motion_information.h	/^namespace g2o {$/;"	n
laserMotion	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/motion_information.h	/^    SE2 laserMotion;$/;"	m	struct:g2o::MotionInformation
odomMotion	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/motion_information.h	/^    SE2 odomMotion;$/;"	m	struct:g2o::MotionInformation
timeInterval	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/motion_information.h	/^    double timeInterval;$/;"	m	struct:g2o::MotionInformation
INFORMATION_SCALING_ODOMETRY	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_helpers.cpp	/^  static const double INFORMATION_SCALING_ODOMETRY = 100;$/;"	v	file:
addOdometryCalibLinksDifferential	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_helpers.cpp	/^  void addOdometryCalibLinksDifferential(SparseOptimizer& optimizer, const DataQueue& odomData)$/;"	f	namespace:g2o
allocateSolverForSclam	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_helpers.cpp	/^  void allocateSolverForSclam(SparseOptimizer& optimizer, bool levenberg)$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_helpers.cpp	/^namespace g2o {$/;"	n	file:
G2O_SCLAM_HELPERS_H	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_helpers.h	28;"	d
g2o	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_helpers.h	/^namespace g2o {$/;"	n
csparse	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_laser_calib.cpp	/^G2O_USE_OPTIMIZATION_LIBRARY(csparse);$/;"	v
hasToStop	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_laser_calib.cpp	/^static bool hasToStop = false;$/;"	v	file:
main	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_laser_calib.cpp	/^int main(int argc, char** argv)$/;"	f
sigquit_handler	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_laser_calib.cpp	/^void sigquit_handler(int sig)$/;"	f
slam2d	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_laser_calib.cpp	/^G2O_USE_TYPE_GROUP(slam2d);$/;"	v
hasToStop	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_odom_laser.cpp	/^static bool hasToStop = false;$/;"	v	file:
main	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_odom_laser.cpp	/^int main(int argc, char** argv)$/;"	f
sigquit_handler	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_odom_laser.cpp	/^void sigquit_handler(int sig)$/;"	f
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:EdgeCalib	file:
EdgeCalib	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^    EdgeCalib() {}$/;"	f	class:EdgeCalib
EdgeCalib	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^class EdgeCalib : public BaseBinaryEdge<3, OdomAndLaserMotion, VertexSE2, VertexBaseline>$/;"	c	file:
VertexBaseline	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^    VertexBaseline() {}$/;"	f	class:VertexBaseline
VertexBaseline	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^class VertexBaseline : public BaseVertex<1, double>$/;"	c	file:
computeError	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^    void computeError()$/;"	f	class:EdgeCalib
linearSolution	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^static Eigen::Vector2d linearSolution;$/;"	v	file:
main	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^int main(int argc, char** argv)$/;"	f
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^    virtual void oplusImpl(const double* update) { _estimate += update[0];}$/;"	f	class:VertexBaseline
read	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^    virtual bool read(std::istream&) { return false;}$/;"	f	class:EdgeCalib
read	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^    virtual bool read(std::istream&) { return false;}$/;"	f	class:VertexBaseline
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^    virtual void setToOriginImpl() { _estimate = 1.;}$/;"	f	class:VertexBaseline
write	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^    virtual bool write(std::ostream&) const { return false;}$/;"	f	class:EdgeCalib
write	trunk/EXTERNAL/g2o/g2o/examples/calibration_odom_laser/sclam_pure_calibration.cpp	/^    virtual bool write(std::ostream&) const { return false;}$/;"	f	class:VertexBaseline
main	trunk/EXTERNAL/g2o/g2o/examples/data_convert/convert_sba_slam3d.cpp	/^int main(int argc, char** argv)$/;"	f
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:VertexCircle	file:
EdgePointOnCircle	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^    EdgePointOnCircle()$/;"	f	class:EdgePointOnCircle
EdgePointOnCircle	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^class EdgePointOnCircle : public g2o::BaseUnaryEdge<1, Eigen::Vector2d, VertexCircle>$/;"	c	file:
VertexCircle	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^    VertexCircle()$/;"	f	class:VertexCircle
VertexCircle	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^class VertexCircle : public g2o::BaseVertex<3, Eigen::Vector3d>$/;"	c	file:
computeError	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^    void computeError()$/;"	f	class:EdgePointOnCircle
errorOfSolution	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^double errorOfSolution(int numPoints, Eigen::Vector2d* points, const Eigen::Vector3d& circle)$/;"	f
main	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^int main(int argc, char** argv)$/;"	f
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^    virtual void oplusImpl(const double* update)$/;"	f	class:VertexCircle
read	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^    virtual bool read(std::istream& \/*is*\/)$/;"	f	class:EdgePointOnCircle
read	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^    virtual bool read(std::istream& \/*is*\/)$/;"	f	class:VertexCircle
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^    virtual void setToOriginImpl()$/;"	f	class:VertexCircle
write	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^    virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:EdgePointOnCircle
write	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/circle_fit.cpp	/^    virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:VertexCircle
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:VertexParams	file:
EdgePointOnCurve	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^    EdgePointOnCurve()$/;"	f	class:EdgePointOnCurve
EdgePointOnCurve	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^class EdgePointOnCurve : public g2o::BaseUnaryEdge<1, Eigen::Vector2d, VertexParams>$/;"	c	file:
VertexParams	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^    VertexParams()$/;"	f	class:VertexParams
VertexParams	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^class VertexParams : public g2o::BaseVertex<3, Eigen::Vector3d>$/;"	c	file:
computeError	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^    void computeError()$/;"	f	class:EdgePointOnCurve
main	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^int main(int argc, char** argv)$/;"	f
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^    virtual void oplusImpl(const double* update)$/;"	f	class:VertexParams
read	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^    virtual bool read(std::istream& \/*is*\/)$/;"	f	class:EdgePointOnCurve
read	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^    virtual bool read(std::istream& \/*is*\/)$/;"	f	class:VertexParams
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^    virtual void setToOriginImpl()$/;"	f	class:VertexParams
write	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^    virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:EdgePointOnCurve
write	trunk/EXTERNAL/g2o/g2o/examples/data_fitting/curve_fit.cpp	/^    virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:VertexParams
IncrementalEdgesCompare	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^struct IncrementalEdgesCompare {$/;"	s	file:
InvChi2CostFunction	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^struct InvChi2CostFunction: public HyperDijkstra::CostFunction {$/;"	s	file:
allocateLinearSolver	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^typename T::LinearSolverType* allocateLinearSolver(bool useCholmod)$/;"	f
gnudump_edges	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^void gnudump_edges(string gnudump, $/;"	f
gnudump_features	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^void gnudump_features(string gnudump, $/;"	f
hasToStop	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^bool hasToStop=false;$/;"	v
main	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^int main(int argc, char** argv)$/;"	f
operator ()	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^  bool operator()(SparseOptimizer::Edge* const & e1, SparseOptimizer::Edge* const & e2)$/;"	f	struct:IncrementalEdgesCompare
operator ()	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^double InvChi2CostFunction::operator () (HyperGraph::Edge* edge,$/;"	f	class:InvChi2CostFunction
sigquit_handler	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^void sigquit_handler(int q __attribute__((unused))){$/;"	f
str2method	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^SparseOptimizer::Method str2method(const std::string& strMethod){$/;"	f
str2solver	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^Solver* str2solver(const std::string& strSolver_, SparseOptimizer* opt)$/;"	f
updateDisplay	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/g2o-unfold.cpp	/^void updateDisplay(ostream& os, const SparseOptimizer& optimizer)$/;"	f
findConnectedEdgesWithCostLimit	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/tools.cpp	/^  void findConnectedEdgesWithCostLimit(HyperGraph::EdgeSet& selected,$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/tools.cpp	/^namespace g2o{$/;"	n	file:
G2O_AIS_GRAPH_TOOLS_HH	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/tools.h	2;"	d
g2o	trunk/EXTERNAL/g2o/g2o/examples/g2o_unfold/tools.h	/^namespace g2o{$/;"	n
Sample	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_demo.cpp	/^  class Sample$/;"	c	file:
gaussian	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_demo.cpp	/^  double Sample::gaussian(double sigma)$/;"	f	class:Sample
gen_int	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_demo.cpp	/^    static tr1::mt19937 gen_int;$/;"	m	class:Sample	file:
gen_int	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_demo.cpp	/^  tr1::mt19937 Sample::gen_int;$/;"	m	class:Sample	file:
gen_real	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_demo.cpp	/^    static tr1::ranlux_base_01 gen_real;$/;"	m	class:Sample	file:
gen_real	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_demo.cpp	/^ tr1::ranlux_base_01 Sample::gen_real;$/;"	m	class:Sample	file:
main	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_demo.cpp	/^int main()$/;"	f
uniform	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_demo.cpp	/^  double Sample::uniform()$/;"	f	class:Sample
uniform	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_demo.cpp	/^  int Sample::uniform(int from, int to)$/;"	f	class:Sample
Sample	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_sba_demo.cpp	/^  class Sample$/;"	c	file:
gaussian	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_sba_demo.cpp	/^  double Sample::gaussian(double sigma)$/;"	f	class:Sample
gen_int	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_sba_demo.cpp	/^    static tr1::mt19937 gen_int;$/;"	m	class:Sample	file:
gen_int	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_sba_demo.cpp	/^  tr1::mt19937 Sample::gen_int;$/;"	m	class:Sample	file:
gen_real	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_sba_demo.cpp	/^    static tr1::ranlux_base_01 gen_real;$/;"	m	class:Sample	file:
gen_real	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_sba_demo.cpp	/^ tr1::ranlux_base_01 Sample::gen_real;$/;"	m	class:Sample	file:
main	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_sba_demo.cpp	/^int main(int argc, char **argv)$/;"	f
uniform	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_sba_demo.cpp	/^  double Sample::uniform()$/;"	f	class:Sample
uniform	trunk/EXTERNAL/g2o/g2o/examples/icp/gicp_sba_demo.cpp	/^  int Sample::uniform(int from, int to)$/;"	f	class:Sample
EdgeInformation	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental.cpp	/^struct EdgeInformation$/;"	s	file:
IncrementalEdgesCompare	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental.cpp	/^struct IncrementalEdgesCompare$/;"	s	file:
fromId	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental.cpp	/^  int fromId;$/;"	m	struct:EdgeInformation	file:
hasToStop	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental.cpp	/^static bool hasToStop=false;$/;"	v	file:
information	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental.cpp	/^  std::vector<double> information;$/;"	m	struct:EdgeInformation	file:
main	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental.cpp	/^int main(int argc, char** argv)$/;"	f
measurement	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental.cpp	/^  std::vector<double> measurement;$/;"	m	struct:EdgeInformation	file:
operator ()	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental.cpp	/^  bool operator()(const EdgeInformation& e1, const EdgeInformation& e2)$/;"	f	struct:IncrementalEdgesCompare
sigquit_handler	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental.cpp	/^void sigquit_handler(int sig)$/;"	f
toId	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental.cpp	/^  int toId;$/;"	m	struct:EdgeInformation	file:
G2O_INCREMENTAL_API	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental_api.h	10;"	d
G2O_INCREMENTAL_API	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental_api.h	12;"	d
G2O_INCREMENTAL_API	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental_api.h	15;"	d
G2O_INCREMENTAL_API	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental_api.h	20;"	d
G2O_INCREMENTAL_API_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/g2o_incremental_api.h	2;"	d
ALLOC_CHOLMOD	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	29;"	d	file:
DIM_TO_SOLVER	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	27;"	d	file:
SparseOptimizerIncremental	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^  SparseOptimizerIncremental::SparseOptimizerIncremental()$/;"	f	class:g2o::SparseOptimizerIncremental
VertexBackup	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^    struct VertexBackup$/;"	s	namespace:g2o::<anonymous>	file:
computeCholeskyUpdate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^  bool SparseOptimizerIncremental::computeCholeskyUpdate()$/;"	f	class:g2o::SparseOptimizerIncremental
convertTripletUpdateToSparse	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^  void SparseOptimizerIncremental::convertTripletUpdateToSparse()$/;"	f	class:g2o::SparseOptimizerIncremental
createSolver	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^  static OptimizationAlgorithm* createSolver(const std::string& solverName)$/;"	f	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^namespace g2o {$/;"	n	file:
hessianData	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^      double* hessianData;$/;"	m	struct:g2o::<anonymous>::VertexBackup	file:
hessianIndex	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^      int hessianIndex;$/;"	m	struct:g2o::<anonymous>::VertexBackup	file:
initSolver	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^  bool SparseOptimizerIncremental::initSolver(int dimension, int batchEveryN)$/;"	f	class:g2o::SparseOptimizerIncremental
operator <	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^      bool operator<(const VertexBackup& other) const$/;"	f	struct:g2o::<anonymous>::VertexBackup
optimize	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^  int SparseOptimizerIncremental::optimize(int iterations, bool online)$/;"	f	class:g2o::SparseOptimizerIncremental
updateInitialization	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^  bool SparseOptimizerIncremental::updateInitialization(HyperGraph::VertexSet& vset, HyperGraph::EdgeSet& eset)$/;"	f	class:g2o::SparseOptimizerIncremental
vertex	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^      OptimizableGraph::Vertex* vertex;$/;"	m	struct:g2o::<anonymous>::VertexBackup	file:
~SparseOptimizerIncremental	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.cpp	/^  SparseOptimizerIncremental::~SparseOptimizerIncremental()$/;"	f	class:g2o::SparseOptimizerIncremental
G2O_GRAPH_OPTIMIZER_SPARSE_INCREMENTAL_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	18;"	d
SparseOptimizerIncremental	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^  class G2O_INCREMENTAL_API SparseOptimizerIncremental : public SparseOptimizerOnline$/;"	c	namespace:g2o
_L	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      cholmod_factor* _L;$/;"	m	class:g2o::SparseOptimizerIncremental
_cholmodCommon	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      cholmod_common _cholmodCommon;$/;"	m	class:g2o::SparseOptimizerIncremental
_cholmodFactor	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      cholmod_factor* _cholmodFactor;$/;"	m	class:g2o::SparseOptimizerIncremental
_cholmodSparse	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      CholmodExt* _cholmodSparse;$/;"	m	class:g2o::SparseOptimizerIncremental
_cmember	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      Eigen::VectorXi _cmember;$/;"	m	class:g2o::SparseOptimizerIncremental
_perm	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      Eigen::VectorXi _perm;$/;"	m	class:g2o::SparseOptimizerIncremental
_permutedUpdate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      cholmod_triplet* _permutedUpdate;$/;"	m	class:g2o::SparseOptimizerIncremental
_permutedUpdateAsSparse	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      CholmodExt* _permutedUpdateAsSparse;$/;"	m	class:g2o::SparseOptimizerIncremental
_solverInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      LinearSolverCholmodOnlineInterface* _solverInterface;$/;"	m	class:g2o::SparseOptimizerIncremental
_touchedVertices	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      HyperGraph::VertexSet _touchedVertices;$/;"	m	class:g2o::SparseOptimizerIncremental
_tripletWorkspace	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      Eigen::VectorXi _tripletWorkspace;$/;"	m	class:g2o::SparseOptimizerIncremental
_updateMat	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^      SparseBlockMatrix<MatrixXd> _updateMat;$/;"	m	class:g2o::SparseOptimizerIncremental
g2o	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/graph_optimizer_sparse_incremental.h	/^namespace g2o {$/;"	n
G2O_LINEAR_SOLVER_CHOLMOD_ONLINE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	18;"	d
L	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    cholmod_factor* L() const { return _cholmodFactor;}$/;"	f	class:g2o::LinearSolverCholmodOnline
LinearSolverCholmodOnline	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    LinearSolverCholmodOnline() :$/;"	f	class:g2o::LinearSolverCholmodOnline
LinearSolverCholmodOnline	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^class LinearSolverCholmodOnline : public LinearSolver<MatrixType>, public LinearSolverCholmodOnlineInterface$/;"	c	namespace:g2o
LinearSolverCholmodOnlineInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    LinearSolverCholmodOnlineInterface() : cmember(0), batchEveryN(100) {}$/;"	f	class:g2o::LinearSolverCholmodOnlineInterface
LinearSolverCholmodOnlineInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^class G2O_INCREMENTAL_API LinearSolverCholmodOnlineInterface$/;"	c	namespace:g2o
_blockOrdering	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    bool _blockOrdering;$/;"	m	class:g2o::LinearSolverCholmodOnline
_blockPermutation	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    VectorXi _scalarPermutation, _blockPermutation;$/;"	m	class:g2o::LinearSolverCholmodOnline
_cholmodCommon	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    cholmod_common _cholmodCommon;$/;"	m	class:g2o::LinearSolverCholmodOnline
_cholmodFactor	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    cholmod_factor* _cholmodFactor;$/;"	m	class:g2o::LinearSolverCholmodOnline
_cholmodSparse	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    CholmodExt* _cholmodSparse;$/;"	m	class:g2o::LinearSolverCholmodOnline
_matrixStructure	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    MatrixStructure _matrixStructure;$/;"	m	class:g2o::LinearSolverCholmodOnline
_scalarPermutation	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    VectorXi _scalarPermutation, _blockPermutation;$/;"	m	class:g2o::LinearSolverCholmodOnline
batchEveryN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    int batchEveryN;$/;"	m	class:g2o::LinearSolverCholmodOnlineInterface
blockOrdering	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    bool blockOrdering() const { return true;}$/;"	f	class:g2o::LinearSolverCholmodOnline
choleskyUpdate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    int choleskyUpdate(cholmod_sparse* update)$/;"	f	class:g2o::LinearSolverCholmodOnline
cmember	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    VectorXi* cmember;$/;"	m	class:g2o::LinearSolverCholmodOnlineInterface
computeSymbolicDecomposition	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    void computeSymbolicDecomposition(const SparseBlockMatrix<MatrixType>& A)$/;"	f	class:g2o::LinearSolverCholmodOnline
fillCholmodExt	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    void fillCholmodExt(const SparseBlockMatrix<MatrixType>& A, bool onlyValues)$/;"	f	class:g2o::LinearSolverCholmodOnline
g2o	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^namespace g2o {$/;"	n
init	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    virtual bool init()$/;"	f	class:g2o::LinearSolverCholmodOnline
nonZerosInL	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    size_t nonZerosInL() const {$/;"	f	class:g2o::LinearSolverCholmodOnline
solve	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    bool solve(const SparseBlockMatrix<MatrixType>& A, double* x, double* b)$/;"	f	class:g2o::LinearSolverCholmodOnline
solve	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    bool solve(double* x, double* b)$/;"	f	class:g2o::LinearSolverCholmodOnline
~LinearSolverCholmodOnline	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_incremental/linear_solver_cholmod_online.h	/^    virtual ~LinearSolverCholmodOnline()$/;"	f	class:g2o::LinearSolverCholmodOnline
G2O_FAST_OUTPUT_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/fast_output.h	38;"	d
modp_dtoa	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/fast_output.h	/^inline int modp_dtoa(double value, char* str, int prec)$/;"	f
modp_itoa10	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/fast_output.h	/^inline int modp_itoa10(int32_t value, char* str)$/;"	f
modp_uitoa10	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/fast_output.h	/^inline int modp_uitoa10(uint32_t value, char* str)$/;"	f
strreverse	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/fast_output.h	/^inline void strreverse(char* begin, char* end)$/;"	f
G2O_INTERACTIVE_API	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_interactive_api.h	10;"	d
G2O_INTERACTIVE_API	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_interactive_api.h	12;"	d
G2O_INTERACTIVE_API	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_interactive_api.h	15;"	d
G2O_INTERACTIVE_API	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_interactive_api.h	20;"	d
G2O_INTERACTIVE_API_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_interactive_api.h	2;"	d
hasToStop	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_online.cpp	/^static bool hasToStop=false;$/;"	v	file:
main	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_online.cpp	/^int main(int argc, char** argv)$/;"	f
sigquit_handler	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_online.cpp	/^void sigquit_handler(int sig)$/;"	f
G2oSlamInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^G2oSlamInterface::G2oSlamInterface(SparseOptimizerOnline* optimizer) :$/;"	f	class:g2o::G2oSlamInterface
addEdge	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^bool G2oSlamInterface::addEdge(const std::string& tag, int id, int dimension, int v1Id, int v2Id, const std::vector<double>& measurement, const std::vector<double>& information)$/;"	f	class:g2o::G2oSlamInterface
addNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^bool G2oSlamInterface::addNode(const std::string& tag, int id, int dimension, const std::vector<double>& values)$/;"	f	class:g2o::G2oSlamInterface
addVertex	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^OptimizableGraph::Vertex* G2oSlamInterface::addVertex(int dimension, int id)$/;"	f	class:g2o::G2oSlamInterface
fixNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^bool G2oSlamInterface::fixNode(const std::vector<int>& nodes)$/;"	f	class:g2o::G2oSlamInterface
g2o	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^namespace g2o {$/;"	n	file:
jac_quat3_euler3	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^    void jac_quat3_euler3(Eigen::Matrix<double, 6, 6>& J, const SE3Quat& t)$/;"	f	namespace:g2o::<anonymous>
printVertex	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^bool G2oSlamInterface::printVertex(OptimizableGraph::Vertex* v)$/;"	f	class:g2o::G2oSlamInterface
quat_to_euler	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^    void quat_to_euler(const Eigen::Quaterniond& q, double& yaw, double& pitch, double& roll)$/;"	f	namespace:g2o::<anonymous>
queryState	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^bool G2oSlamInterface::queryState(const std::vector<int>& nodes)$/;"	f	class:g2o::G2oSlamInterface
setBatchSolveEachN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^void G2oSlamInterface::setBatchSolveEachN(int n)$/;"	f	class:g2o::G2oSlamInterface
setUpdateGraphEachN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^void G2oSlamInterface::setUpdateGraphEachN(int n)$/;"	f	class:g2o::G2oSlamInterface
solve	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^G2oSlamInterface::SolveResult G2oSlamInterface::solve()$/;"	f	class:g2o::G2oSlamInterface
solveState	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.cpp	/^bool G2oSlamInterface::solveState()$/;"	f	class:g2o::G2oSlamInterface
ERROR	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      enum SolveResult { SOLVED, SOLVED_BATCH, NOOP, ERROR };$/;"	e	enum:g2o::G2oSlamInterface::SolveResult
G2O_SLAM_INTERFACE_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	28;"	d
G2oSlamInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^  class G2O_INTERACTIVE_API G2oSlamInterface : public SlamParser::AbstractSlamInterface$/;"	c	namespace:g2o
NOOP	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      enum SolveResult { SOLVED, SOLVED_BATCH, NOOP, ERROR };$/;"	e	enum:g2o::G2oSlamInterface::SolveResult
SOLVED	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      enum SolveResult { SOLVED, SOLVED_BATCH, NOOP, ERROR };$/;"	e	enum:g2o::G2oSlamInterface::SolveResult
SOLVED_BATCH	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      enum SolveResult { SOLVED, SOLVED_BATCH, NOOP, ERROR };$/;"	e	enum:g2o::G2oSlamInterface::SolveResult
SolveResult	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      enum SolveResult { SOLVED, SOLVED_BATCH, NOOP, ERROR };$/;"	g	class:g2o::G2oSlamInterface
_batchEveryN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      int _batchEveryN;$/;"	m	class:g2o::G2oSlamInterface
_edgesAdded	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      HyperGraph::EdgeSet _edgesAdded;$/;"	m	class:g2o::G2oSlamInterface
_firstOptimization	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      bool _firstOptimization;$/;"	m	class:g2o::G2oSlamInterface
_incIterations	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      int _incIterations;$/;"	m	class:g2o::G2oSlamInterface
_initSolverDone	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      bool _initSolverDone;$/;"	m	class:g2o::G2oSlamInterface
_lastBatchStep	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      int _lastBatchStep;$/;"	m	class:g2o::G2oSlamInterface
_nodesAdded	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      int _nodesAdded;$/;"	m	class:g2o::G2oSlamInterface
_optimizer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      SparseOptimizerOnline* _optimizer;$/;"	m	class:g2o::G2oSlamInterface
_updateGraphEachN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      int _updateGraphEachN;$/;"	m	class:g2o::G2oSlamInterface
_verticesAdded	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      HyperGraph::VertexSet _verticesAdded;$/;"	m	class:g2o::G2oSlamInterface
batchSolveEachN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      int batchSolveEachN() const { return _batchEveryN;}$/;"	f	class:g2o::G2oSlamInterface
g2o	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^namespace g2o {$/;"	n
updatedGraphEachN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/g2o_slam_interface.h	/^      int updatedGraphEachN() const { return _updateGraphEachN;}$/;"	f	class:g2o::G2oSlamInterface
IncrementalEdgesCompare	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/generate_commands.cpp	/^struct IncrementalEdgesCompare {$/;"	s	file:
hasToStop	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/generate_commands.cpp	/^static bool hasToStop=false;$/;"	v	file:
main	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/generate_commands.cpp	/^int main(int argc, char** argv)$/;"	f
operator ()	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/generate_commands.cpp	/^  bool operator()(SparseOptimizer::Edge* const & e1, SparseOptimizer::Edge* const & e2)$/;"	f	struct:IncrementalEdgesCompare
sigquit_handler	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/generate_commands.cpp	/^void sigquit_handler(int sig)$/;"	f
str2method	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/generate_commands.cpp	/^SparseOptimizer::Method str2method(const std::string& strMethod_){$/;"	f
ALLOC_PCG	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	48;"	d	file:
DIM_TO_SOLVER	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	46;"	d	file:
SparseOptimizerOnline	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	/^SparseOptimizerOnline::SparseOptimizerOnline(bool pcg) :$/;"	f	class:g2o::SparseOptimizerOnline
cholmod	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	/^  G2O_USE_OPTIMIZATION_LIBRARY(cholmod);$/;"	v
createSolver	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	/^static Solver* createSolver(const std::string& solverName)$/;"	f	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	/^namespace g2o {$/;"	n	file:
gnuplotVisualization	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	/^void SparseOptimizerOnline::gnuplotVisualization()$/;"	f	class:g2o::SparseOptimizerOnline
initSolver	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	/^bool SparseOptimizerOnline::initSolver(int dimension, int \/*batchEveryN*\/)$/;"	f	class:g2o::SparseOptimizerOnline
optimize	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	/^int SparseOptimizerOnline::optimize(int iterations, bool online)$/;"	f	class:g2o::SparseOptimizerOnline
update	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	/^void SparseOptimizerOnline::update(double* update)$/;"	f	class:g2o::SparseOptimizerOnline
updateInitialization	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	/^bool SparseOptimizerOnline::updateInitialization(HyperGraph::VertexSet& vset, HyperGraph::EdgeSet& eset)$/;"	f	class:g2o::SparseOptimizerOnline
~SparseOptimizerOnline	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.cpp	/^SparseOptimizerOnline::~SparseOptimizerOnline()$/;"	f	class:g2o::SparseOptimizerOnline
G2O_GRAPH_OPTIMIZER_SPARSE_ONLINE_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.h	28;"	d
SparseOptimizerOnline	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.h	/^  class G2O_INTERACTIVE_API SparseOptimizerOnline : public SparseOptimizer$/;"	c	namespace:g2o
_gnuplot	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.h	/^      FILE* _gnuplot;$/;"	m	class:g2o::SparseOptimizerOnline
_underlyingSolver	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.h	/^      Solver* _underlyingSolver;$/;"	m	class:g2o::SparseOptimizerOnline
_usePcg	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.h	/^      bool _usePcg;$/;"	m	class:g2o::SparseOptimizerOnline
batchStep	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.h	/^      bool batchStep;$/;"	m	class:g2o::SparseOptimizerOnline
g2o	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.h	/^namespace g2o {$/;"	n
newEdges	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.h	/^      HyperGraph::EdgeSet* newEdges;$/;"	m	class:g2o::SparseOptimizerOnline
slamDimension	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.h	/^      int slamDimension;$/;"	m	class:g2o::SparseOptimizerOnline
vizWithGnuplot	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/graph_optimizer_sparse_online.h	/^      bool vizWithGnuplot;$/;"	m	class:g2o::SparseOptimizerOnline
G2O_ATTRIBUTE_CONSTRUCTOR	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_online.cpp	/^  G2O_ATTRIBUTE_CONSTRUCTOR(init_types_interactive_online)$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_online.cpp	/^namespace g2o {$/;"	n	file:
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::OnlineEdgeSE2
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::OnlineVertexSE2
G2O_TYPES_SLAM2D_ONLINE_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	28;"	d
OnlineEdgeSE2	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^      OnlineEdgeSE2() : EdgeSE2() {}$/;"	f	class:g2o::OnlineEdgeSE2
OnlineEdgeSE2	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^  class G2O_INTERACTIVE_API OnlineEdgeSE2 : public EdgeSE2$/;"	c	namespace:g2o
OnlineVertexSE2	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^      OnlineVertexSE2() : VertexSE2() {}$/;"	f	class:g2o::OnlineVertexSE2
OnlineVertexSE2	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^  class G2O_INTERACTIVE_API OnlineVertexSE2 : public VertexSE2$/;"	c	namespace:g2o
chi2	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^      double chi2() const$/;"	f	class:g2o::OnlineEdgeSE2
g2o	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^namespace g2o {$/;"	n
initialEstimate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^      void initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/* to *\/)$/;"	f	class:g2o::OnlineEdgeSE2
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^      virtual void oplusImpl(const double* update)$/;"	f	class:g2o::OnlineVertexSE2
oplusUpdatedEstimate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^      void oplusUpdatedEstimate(double* update)$/;"	f	class:g2o::OnlineVertexSE2
updatedEstimate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam2d_online.h	/^      VertexSE2::EstimateType updatedEstimate;$/;"	m	class:g2o::OnlineVertexSE2
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::OnlineEdgeSE3
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::OnlineVertexSE3
G2O_TYPES_SLAM3D_ONLINE_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	28;"	d
OnlineEdgeSE3	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^      OnlineEdgeSE3() : EdgeSE3() {}$/;"	f	class:g2o::OnlineEdgeSE3
OnlineEdgeSE3	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^  class G2O_INTERACTIVE_API OnlineEdgeSE3 : public EdgeSE3$/;"	c	namespace:g2o
OnlineVertexSE3	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^      OnlineVertexSE3() : VertexSE3(), updatedEstimate(Eigen::Isometry3d::Identity()) {}$/;"	f	class:g2o::OnlineVertexSE3
OnlineVertexSE3	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^  class G2O_INTERACTIVE_API OnlineVertexSE3 : public VertexSE3$/;"	c	namespace:g2o
chi2	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^      double chi2() const$/;"	f	class:g2o::OnlineEdgeSE3
g2o	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^namespace g2o {$/;"	n
initialEstimate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^      void initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/* to *\/)$/;"	f	class:g2o::OnlineEdgeSE3
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^      virtual void oplusImpl(const double* update)$/;"	f	class:g2o::OnlineVertexSE3
oplusUpdatedEstimate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^      void oplusUpdatedEstimate(double* update)$/;"	f	class:g2o::OnlineVertexSE3
updatedEstimate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/g2o_interactive/types_slam3d_online.h	/^      VertexSE3::EstimateType updatedEstimate;$/;"	m	class:g2o::OnlineVertexSE3
ExampleSlamInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/example/example_slam_interface.cpp	/^ExampleSlamInterface::ExampleSlamInterface()$/;"	f	class:ExampleSlamInterface
addEdge	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/example/example_slam_interface.cpp	/^bool ExampleSlamInterface::addEdge(const std::string& tag, int id, int dimension, int v1, int v2, const std::vector<double>& measurement, const std::vector<double>& information)$/;"	f	class:ExampleSlamInterface
addNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/example/example_slam_interface.cpp	/^bool ExampleSlamInterface::addNode(const std::string& tag, int id, int dimension, const std::vector<double>& values)$/;"	f	class:ExampleSlamInterface
fixNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/example/example_slam_interface.cpp	/^bool ExampleSlamInterface::fixNode(const std::vector<int>& nodes)$/;"	f	class:ExampleSlamInterface
queryState	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/example/example_slam_interface.cpp	/^bool ExampleSlamInterface::queryState(const std::vector<int>& nodes)$/;"	f	class:ExampleSlamInterface
solveState	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/example/example_slam_interface.cpp	/^bool ExampleSlamInterface::solveState()$/;"	f	class:ExampleSlamInterface
EXAMPLE_SLAM_INTERFACE_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/example/example_slam_interface.h	28;"	d
ExampleSlamInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/example/example_slam_interface.h	/^class ExampleSlamInterface : public SlamParser::AbstractSlamInterface$/;"	c
_vertices	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/example/example_slam_interface.h	/^    std::map<int, std::pair<std::string, std::vector<double> > > _vertices; \/\/\/< the original value of the input (actually not needed if a real SLAM engine is running)$/;"	m	class:ExampleSlamInterface
main	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/example/test_slam_interface.cpp	/^int main()$/;"	f
ABSTRACT_SLAM_INTERFACE_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/abstract_slam_interface.h	28;"	d
AbstractSlamInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/abstract_slam_interface.h	/^  class AbstractSlamInterface {$/;"	c	namespace:SlamParser
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/abstract_slam_interface.h	/^namespace SlamParser {$/;"	n
ParserInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/parser_interface.cpp	/^  ParserInterface::ParserInterface(AbstractSlamInterface* slamInterface)$/;"	f	class:SlamParser::ParserInterface
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/parser_interface.cpp	/^namespace SlamParser {$/;"	n	file:
parseCommand	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/parser_interface.cpp	/^  bool ParserInterface::parseCommand(std::istream& input)$/;"	f	class:SlamParser::ParserInterface
~ParserInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/parser_interface.cpp	/^  ParserInterface::~ParserInterface()$/;"	f	class:SlamParser::ParserInterface
PARSER_INTERFACE_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/parser_interface.h	28;"	d
ParserInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/parser_interface.h	/^  class ParserInterface$/;"	c	namespace:SlamParser
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/parser_interface.h	/^namespace SlamParser {$/;"	n
_buffer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/parser_interface.h	/^      std::stringstream _buffer;$/;"	m	class:SlamParser::ParserInterface
_driver	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/parser_interface.h	/^      Driver* _driver;$/;"	m	class:SlamParser::ParserInterface
_slamContextInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/parser_interface.h	/^      SlamContextInterface* _slamContextInterface;$/;"	m	class:SlamParser::ParserInterface
SlamContextInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/slam_context_interface.cpp	/^  SlamContextInterface::SlamContextInterface(AbstractSlamInterface* slam) :$/;"	f	class:SlamParser::SlamContextInterface
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/slam_context_interface.cpp	/^namespace SlamParser {$/;"	n	file:
process	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/slam_context_interface.cpp	/^  bool SlamContextInterface::process(CommandNode* commandNode)$/;"	f	class:SlamParser::SlamContextInterface
~SlamContextInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/slam_context_interface.cpp	/^  SlamContextInterface::~SlamContextInterface()$/;"	f	class:SlamParser::SlamContextInterface
SLAM_CONTEXT_INTERFACE_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/slam_context_interface.h	28;"	d
SlamContextInterface	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/slam_context_interface.h	/^  class SlamContextInterface : public SlamContext$/;"	c	namespace:SlamParser
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/slam_context_interface.h	/^namespace SlamParser {$/;"	n
_slam	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/interface/slam_context_interface.h	/^      AbstractSlamInterface* _slam;$/;"	m	class:SlamParser::SlamContextInterface
FLEX_STD	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	53;"	d
FlexLexer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^class FlexLexer {$/;"	c
YYLeng	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int YYLeng()  const  { return yyleng; }$/;"	f	class:FlexLexer
YYText	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  const char* YYText() const  { return yytext; }$/;"	f	class:FlexLexer
__FLEX_LEXER_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	49;"	d
debug	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int debug() const    { return yy_flex_debug; }$/;"	f	class:FlexLexer
lineno	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int lineno() const    { return yylineno; }$/;"	f	class:FlexLexer
set_debug	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  void set_debug( int flag )  { yy_flex_debug = flag; }$/;"	f	class:FlexLexer
yyFlexLexer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^class yyFlexLexer : public FlexLexer {$/;"	c
yyFlexLexerOnce	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	108;"	d
yy_buffer_stack	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  struct yy_buffer_state ** yy_buffer_stack; \/**< Stack as an array. *\/$/;"	m	class:yyFlexLexer
yy_buffer_stack_max	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  size_t yy_buffer_stack_max; \/**< capacity of stack. *\/$/;"	m	class:yyFlexLexer
yy_buffer_stack_top	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  size_t yy_buffer_stack_top; \/**< index of top of stack. *\/$/;"	m	class:yyFlexLexer
yy_c_buf_p	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  char* yy_c_buf_p;$/;"	m	class:yyFlexLexer
yy_did_buffer_switch_on_eof	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_did_buffer_switch_on_eof;$/;"	m	class:yyFlexLexer
yy_flex_debug	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_flex_debug;  \/\/ only has effect with -d or "%option debug"$/;"	m	class:FlexLexer
yy_full_lp	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_full_lp;$/;"	m	class:yyFlexLexer
yy_full_match	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  char* yy_full_match;$/;"	m	class:yyFlexLexer
yy_full_state	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int* yy_full_state;$/;"	m	class:yyFlexLexer
yy_hold_char	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  char yy_hold_char;$/;"	m	class:yyFlexLexer
yy_init	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_init;    \/\/ whether we need to initialize$/;"	m	class:yyFlexLexer
yy_last_accepting_cpos	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  char* yy_last_accepting_cpos;$/;"	m	class:yyFlexLexer
yy_last_accepting_state	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  yy_state_type yy_last_accepting_state;$/;"	m	class:yyFlexLexer
yy_looking_for_trail_begin	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_looking_for_trail_begin;$/;"	m	class:yyFlexLexer
yy_lp	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_lp;$/;"	m	class:yyFlexLexer
yy_more_flag	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_more_flag;$/;"	m	class:yyFlexLexer
yy_more_len	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_more_len;$/;"	m	class:yyFlexLexer
yy_more_offset	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_more_offset;$/;"	m	class:yyFlexLexer
yy_n_chars	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_n_chars;$/;"	m	class:yyFlexLexer
yy_prev_more_offset	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_prev_more_offset;$/;"	m	class:yyFlexLexer
yy_start	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_start;    \/\/ start state number$/;"	m	class:yyFlexLexer
yy_start_stack	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int* yy_start_stack;$/;"	m	class:yyFlexLexer
yy_start_stack_depth	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_start_stack_depth;$/;"	m	class:yyFlexLexer
yy_start_stack_ptr	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yy_start_stack_ptr;$/;"	m	class:yyFlexLexer
yy_state_buf	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  yy_state_type* yy_state_buf;$/;"	m	class:yyFlexLexer
yy_state_ptr	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  yy_state_type* yy_state_ptr;$/;"	m	class:yyFlexLexer
yy_state_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^typedef int yy_state_type;$/;"	t
yyin	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  FLEX_STD istream* yyin;  \/\/ input source for default LexerInput$/;"	m	class:yyFlexLexer
yyleng	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yyleng;$/;"	m	class:FlexLexer
yylex	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yylex( FLEX_STD istream* new_in, FLEX_STD ostream* new_out = 0 )$/;"	f	class:FlexLexer
yylineno	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  int yylineno;    \/\/ only maintained if you use %option yylineno$/;"	m	class:FlexLexer
yyout	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  FLEX_STD ostream* yyout;  \/\/ output sink for default LexerOutput$/;"	m	class:yyFlexLexer
yytext	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  char* yytext;$/;"	m	class:FlexLexer
~FlexLexer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/FlexLexer.h	/^  virtual ~FlexLexer()  { }$/;"	f	class:FlexLexer
Parser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::Parser (class Driver& driver_yyarg)$/;"	f	class:SlamParser::Parser
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^namespace SlamParser {$/;"	n	file:
YYABORT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	135;"	d	file:
YYACCEPT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	134;"	d	file:
YYCDEBUG	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	124;"	d	file:
YYCDEBUG	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	98;"	d	file:
YYERROR	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	136;"	d	file:
YYRECOVERING	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	137;"	d	file:
YYUSE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	92;"	d	file:
YY_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	83;"	d	file:
YY_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	87;"	d	file:
YY_REDUCE_PRINT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	110;"	d	file:
YY_REDUCE_PRINT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	126;"	d	file:
YY_STACK_PRINT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	116;"	d	file:
YY_STACK_PRINT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	127;"	d	file:
YY_SYMBOL_PRINT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	100;"	d	file:
YY_SYMBOL_PRINT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	125;"	d	file:
debug_level	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::debug_level () const$/;"	f	class:SlamParser::Parser
debug_stream	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::debug_stream () const$/;"	f	class:SlamParser::Parser
error	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^void SlamParser::Parser::error(const Parser::location_type& l, const std::string& m)$/;"	f	class:SlamParser::Parser
parse	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::parse ()$/;"	f	class:SlamParser::Parser
set_debug_level	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::set_debug_level (debug_level_type l)$/;"	f	class:SlamParser::Parser
set_debug_stream	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::set_debug_stream (std::ostream& o)$/;"	f	class:SlamParser::Parser
yy_reduce_print_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yy_reduce_print_ (int yyrule)$/;"	f	class:SlamParser::Parser
yy_symbol_print_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yy_symbol_print_ (int yytype,$/;"	f	class:SlamParser::Parser
yy_symbol_value_print_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yy_symbol_value_print_ (int yytype,$/;"	f	class:SlamParser::Parser
yycheck_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yycheck_[] =$/;"	m	class:SlamParser::Parser	file:
yyclearin	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	132;"	d	file:
yydefact_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yydefact_[] =$/;"	m	class:SlamParser::Parser	file:
yydefgoto_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yydefgoto_[] =$/;"	m	class:SlamParser::Parser	file:
yydestruct_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yydestruct_ (const char* yymsg,$/;"	f	class:SlamParser::Parser
yyempty_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const int Parser::yyempty_ = -2;$/;"	m	class:SlamParser::Parser	file:
yyeof_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const int Parser::yyeof_ = 0;$/;"	m	class:SlamParser::Parser	file:
yyerrcode_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const int Parser::yyerrcode_ = 256;$/;"	m	class:SlamParser::Parser	file:
yyerrok	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	131;"	d	file:
yyfinal_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const int Parser::yyfinal_ = 2;$/;"	m	class:SlamParser::Parser	file:
yylast_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const int Parser::yylast_ = 68;$/;"	m	class:SlamParser::Parser	file:
yylex	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	36;"	d	file:
yylex	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	71;"	d	file:
yylex	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	72;"	d	file:
yynnts_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const int Parser::yynnts_ = 10;$/;"	m	class:SlamParser::Parser	file:
yyntokens_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const int Parser::yyntokens_ = 16;$/;"	m	class:SlamParser::Parser	file:
yypact_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yypact_[] =$/;"	m	class:SlamParser::Parser	file:
yypact_ninf_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const signed char Parser::yypact_ninf_ = -24;$/;"	m	class:SlamParser::Parser	file:
yypgoto_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yypgoto_[] =$/;"	m	class:SlamParser::Parser	file:
yypop_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yypop_ (unsigned int n)$/;"	f	class:SlamParser::Parser
yyprhs_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yyprhs_[] =$/;"	m	class:SlamParser::Parser	file:
yyr1_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yyr1_[] =$/;"	m	class:SlamParser::Parser	file:
yyr2_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yyr2_[] =$/;"	m	class:SlamParser::Parser	file:
yyrhs_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yyrhs_[] =$/;"	m	class:SlamParser::Parser	file:
yyrline_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yyrline_[] =$/;"	m	class:SlamParser::Parser	file:
yystack_print_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yystack_print_ ()$/;"	f	class:SlamParser::Parser
yystos_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yystos_[] =$/;"	m	class:SlamParser::Parser	file:
yysyntax_error_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yysyntax_error_ (int yystate, int tok)$/;"	f	class:SlamParser::Parser
yytable_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yytable_[] =$/;"	m	class:SlamParser::Parser	file:
yytable_ninf_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const signed char Parser::yytable_ninf_ = -1;$/;"	m	class:SlamParser::Parser	file:
yyterror_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const int Parser::yyterror_ = 1;$/;"	m	class:SlamParser::Parser	file:
yytname_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const Parser::yytname_[] =$/;"	m	class:SlamParser::Parser	file:
yytnamerr_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yytnamerr_ (const char *yystr)$/;"	f	class:SlamParser::Parser
yytoken_number_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yytoken_number_[] =$/;"	m	class:SlamParser::Parser	file:
yytranslate_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::yytranslate_ (int t)$/;"	f	class:SlamParser::Parser
yyundef_token_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const Parser::token_number_type Parser::yyundef_token_ = 2;$/;"	m	class:SlamParser::Parser	file:
yyuser_token_number_max_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  const unsigned int Parser::yyuser_token_number_max_ = 269;$/;"	m	class:SlamParser::Parser	file:
~Parser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.cpp	/^  Parser::~Parser ()$/;"	f	class:SlamParser::Parser
ADD	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     ADD = 262,$/;"	e	enum:SlamParser::Parser::token::yytokentype
DOUBLE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     DOUBLE = 260,$/;"	e	enum:SlamParser::Parser::token::yytokentype
END	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     END = 0,$/;"	e	enum:SlamParser::Parser::token::yytokentype
EOL	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     EOL = 258,$/;"	e	enum:SlamParser::Parser::token::yytokentype
E_SE2	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     E_SE2 = 265,$/;"	e	enum:SlamParser::Parser::token::yytokentype
E_SE3	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     E_SE3 = 266,$/;"	e	enum:SlamParser::Parser::token::yytokentype
FIX	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     FIX = 267,$/;"	e	enum:SlamParser::Parser::token::yytokentype
INTEGER	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     INTEGER = 259,$/;"	e	enum:SlamParser::Parser::token::yytokentype
PARSER_HEADER_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	38;"	d
Parser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^  class Parser$/;"	c	namespace:SlamParser
QUERY_STATE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     QUERY_STATE = 269$/;"	e	enum:SlamParser::Parser::token::yytokentype
SOLVE_STATE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     SOLVE_STATE = 268,$/;"	e	enum:SlamParser::Parser::token::yytokentype
STRING	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     STRING = 261,$/;"	e	enum:SlamParser::Parser::token::yytokentype
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^namespace SlamParser {$/;"	n
V_SE2	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     V_SE2 = 263,$/;"	e	enum:SlamParser::Parser::token::yytokentype
V_SE3	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^     V_SE3 = 264,$/;"	e	enum:SlamParser::Parser::token::yytokentype
YYDEBUG	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	69;"	d
YYERROR_VERBOSE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	74;"	d
YYERROR_VERBOSE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	75;"	d
YYERROR_VERBOSE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	77;"	d
YYLLOC_DEFAULT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	90;"	d
YYTOKEN_TABLE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	82;"	d
commandNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    class CommandNode*    commandNode;$/;"	m	union:SlamParser::Parser::semantic_type
debug_level_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    typedef int debug_level_type;$/;"	t	class:SlamParser::Parser
doubleVal	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    double       doubleVal;$/;"	m	union:SlamParser::Parser::semantic_type
driver	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    class Driver& driver;$/;"	m	class:SlamParser::Parser
intList	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    std::vector<int>*           intList;$/;"	m	union:SlamParser::Parser::semantic_type
integerVal	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    int        integerVal;$/;"	m	union:SlamParser::Parser::semantic_type
location_stack_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    typedef stack<location_type> location_stack_type;$/;"	t	class:SlamParser::Parser
location_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    typedef location location_type;$/;"	t	class:SlamParser::Parser
rhs_number_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    typedef signed char rhs_number_type;$/;"	t	class:SlamParser::Parser
semantic_stack_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    typedef stack<semantic_type> semantic_stack_type;$/;"	t	class:SlamParser::Parser
semantic_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    union semantic_type$/;"	u	class:SlamParser::Parser
state_stack_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    typedef stack<state_type>    state_stack_type;$/;"	t	class:SlamParser::Parser
state_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    typedef int state_type;$/;"	t	class:SlamParser::Parser
stringVal	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    std::string*    stringVal;$/;"	m	union:SlamParser::Parser::semantic_type
token	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    struct token$/;"	s	class:SlamParser::Parser
token_number_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    typedef unsigned char token_number_type;$/;"	t	class:SlamParser::Parser
token_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    typedef token::yytokentype token_type;$/;"	t	class:SlamParser::Parser
yycdebug_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    std::ostream* yycdebug_;$/;"	m	class:SlamParser::Parser
yycheck_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const signed char yycheck_[];$/;"	m	class:SlamParser::Parser
yydebug_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    int yydebug_;$/;"	m	class:SlamParser::Parser
yydefact_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const unsigned char yydefact_[];$/;"	m	class:SlamParser::Parser
yydefgoto_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const signed char yydefgoto_[];$/;"	m	class:SlamParser::Parser
yyempty_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const int yyempty_;$/;"	m	class:SlamParser::Parser
yyeof_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const int yyeof_;$/;"	m	class:SlamParser::Parser
yyerrcode_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const int yyerrcode_;$/;"	m	class:SlamParser::Parser
yyfinal_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const int yyfinal_;$/;"	m	class:SlamParser::Parser
yylast_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const int yylast_;$/;"	m	class:SlamParser::Parser
yylocation_stack_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    location_stack_type yylocation_stack_;$/;"	m	class:SlamParser::Parser
yynnts_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const int yynnts_;$/;"	m	class:SlamParser::Parser
yyntokens_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const int yyntokens_;$/;"	m	class:SlamParser::Parser
yypact_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const signed char yypact_[];$/;"	m	class:SlamParser::Parser
yypact_ninf_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const signed char yypact_ninf_;$/;"	m	class:SlamParser::Parser
yypgoto_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const signed char yypgoto_[];$/;"	m	class:SlamParser::Parser
yyprhs_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const unsigned char yyprhs_[];$/;"	m	class:SlamParser::Parser
yyr1_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const unsigned char yyr1_[];$/;"	m	class:SlamParser::Parser
yyr2_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const unsigned char yyr2_[];$/;"	m	class:SlamParser::Parser
yyrhs_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const rhs_number_type yyrhs_[];$/;"	m	class:SlamParser::Parser
yyrline_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const unsigned char yyrline_[];$/;"	m	class:SlamParser::Parser
yysemantic_stack_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    semantic_stack_type yysemantic_stack_;$/;"	m	class:SlamParser::Parser
yystate_stack_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    state_stack_type yystate_stack_;$/;"	m	class:SlamParser::Parser
yystos_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const unsigned char yystos_[];$/;"	m	class:SlamParser::Parser
yytable_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const unsigned char yytable_[];$/;"	m	class:SlamParser::Parser
yytable_ninf_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const signed char yytable_ninf_;$/;"	m	class:SlamParser::Parser
yyterror_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const int yyterror_;$/;"	m	class:SlamParser::Parser
yytname_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const char* const yytname_[];$/;"	m	class:SlamParser::Parser
yytoken_number_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const unsigned short int yytoken_number_[];$/;"	m	class:SlamParser::Parser
yytokentype	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^   enum yytokentype {$/;"	g	struct:SlamParser::Parser::token
yyundef_token_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const token_number_type yyundef_token_;$/;"	m	class:SlamParser::Parser
yyuser_token_number_max_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/bison_parser.h	/^    static const unsigned int yyuser_token_number_max_;$/;"	m	class:SlamParser::Parser
AddEdge	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      AddEdge(const std::string& tag, int id, int dimension, int id1, int id2, const std::vector<double>& values, const std::vector<double> information) :$/;"	f	class:SlamParser::AddEdge
AddEdge	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^  class AddEdge : public CommandNode$/;"	c	namespace:SlamParser
AddNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      AddNode(const std::string& tag, int id, int dimension, const std::vector<double>& values = std::vector<double>()) :$/;"	f	class:SlamParser::AddNode
AddNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^  class AddNode : public CommandNode$/;"	c	namespace:SlamParser
COMMANDS_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	28;"	d
CT_ADD_EDGE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^    CT_ADD_EDGE,$/;"	e	enum:SlamParser::CommandType
CT_ADD_NODE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^    CT_ADD_NODE,$/;"	e	enum:SlamParser::CommandType
CT_FIX	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^    CT_FIX,$/;"	e	enum:SlamParser::CommandType
CT_QUERY_STATE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^    CT_QUERY_STATE,$/;"	e	enum:SlamParser::CommandType
CT_SOLVE_STATE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^    CT_SOLVE_STATE,$/;"	e	enum:SlamParser::CommandType
CommandNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      CommandNode(CommandType commandType, const std::string& tag) : _commandType(commandType), _tag(tag) {}$/;"	f	class:SlamParser::CommandNode
CommandNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^  class CommandNode$/;"	c	namespace:SlamParser
CommandType	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^  enum CommandType$/;"	g	namespace:SlamParser
FixNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      explicit FixNode(const std::string& tag, const std::vector<int>& ids) :$/;"	f	class:SlamParser::FixNode
FixNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^  class FixNode : public CommandNode$/;"	c	namespace:SlamParser
QueryState	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      explicit QueryState(const std::string& tag, const std::vector<int>& ids = std::vector<int>()) :$/;"	f	class:SlamParser::QueryState
QueryState	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^  class QueryState : public CommandNode$/;"	c	namespace:SlamParser
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^namespace SlamParser {$/;"	n
SolveSate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      SolveSate(const std::string& tag) :$/;"	f	class:SlamParser::SolveSate
SolveSate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^  class SolveSate : public CommandNode$/;"	c	namespace:SlamParser
_commandType	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      CommandType _commandType;$/;"	m	class:SlamParser::CommandNode
_dimension	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int _dimension;$/;"	m	class:SlamParser::AddEdge
_dimension	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int _dimension;$/;"	m	class:SlamParser::AddNode
_id	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int _id;$/;"	m	class:SlamParser::AddEdge
_id	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int _id;$/;"	m	class:SlamParser::AddNode
_id1	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int _id1;$/;"	m	class:SlamParser::AddEdge
_id2	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int _id2;$/;"	m	class:SlamParser::AddEdge
_ids	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      std::vector<int> _ids;$/;"	m	class:SlamParser::FixNode
_ids	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      std::vector<int> _ids;$/;"	m	class:SlamParser::QueryState
_information	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      std::vector<double> _information;$/;"	m	class:SlamParser::AddEdge
_tag	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      std::string _tag;$/;"	m	class:SlamParser::CommandNode
_values	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      std::vector<double> _values;$/;"	m	class:SlamParser::AddEdge
_values	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      std::vector<double> _values;$/;"	m	class:SlamParser::AddNode
commandType	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      CommandType commandType() const { return _commandType;}$/;"	f	class:SlamParser::CommandNode
dimension	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int dimension() const {return _dimension;}$/;"	f	class:SlamParser::AddEdge
dimension	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int dimension() const {return _dimension;}$/;"	f	class:SlamParser::AddNode
id	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int id() const {return _id;}$/;"	f	class:SlamParser::AddEdge
id	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int id() const {return _id;}$/;"	f	class:SlamParser::AddNode
id1	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int id1() const {return _id1;}$/;"	f	class:SlamParser::AddEdge
id2	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      int id2() const {return _id2;}$/;"	f	class:SlamParser::AddEdge
ids	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      const std::vector<int>& ids() { return _ids;}$/;"	f	class:SlamParser::FixNode
ids	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      const std::vector<int>& ids() { return _ids;}$/;"	f	class:SlamParser::QueryState
information	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      const std::vector<double>& information() { return _information;}$/;"	f	class:SlamParser::AddEdge
tag	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      const std::string& tag() const { return _tag;}$/;"	f	class:SlamParser::CommandNode
values	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      const std::vector<double>& values() { return _values;}$/;"	f	class:SlamParser::AddEdge
values	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      const std::vector<double>& values() { return _values;}$/;"	f	class:SlamParser::AddNode
~CommandNode	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/commands.h	/^      virtual ~CommandNode() {}$/;"	f	class:SlamParser::CommandNode
Driver	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.cpp	/^  Driver::Driver(class SlamContext& slamContext_) :$/;"	f	class:SlamParser::Driver
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.cpp	/^namespace SlamParser {$/;"	n	file:
error	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.cpp	/^  void Driver::error(const class location& l,$/;"	f	class:SlamParser::Driver
error	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.cpp	/^  void Driver::error(const std::string& m)$/;"	f	class:SlamParser::Driver
parse_file	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.cpp	/^  bool Driver::parse_file(const std::string &filename)$/;"	f	class:SlamParser::Driver
parse_stream	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.cpp	/^  bool Driver::parse_stream(std::istream& in, const std::string& sname)$/;"	f	class:SlamParser::Driver
parse_string	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.cpp	/^  bool Driver::parse_string(const std::string &input, const std::string& sname)$/;"	f	class:SlamParser::Driver
Driver	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.h	/^class Driver$/;"	c	namespace:SlamParser
SLAM_DRIVER_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.h	28;"	d
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.h	/^namespace SlamParser {$/;"	n
lexer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.h	/^    class Scanner* lexer;$/;"	m	class:SlamParser::Driver
slamContext	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.h	/^    class SlamContext& slamContext;$/;"	m	class:SlamParser::Driver
streamname	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.h	/^    std::string streamname;$/;"	m	class:SlamParser::Driver
trace_parsing	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.h	/^    bool trace_parsing;$/;"	m	class:SlamParser::Driver
trace_scanning	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/driver.h	/^    bool trace_scanning;$/;"	m	class:SlamParser::Driver
BEGIN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	138;"	d	file:
ECHO	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	555;"	d	file:
EOB_ACT_CONTINUE_SCAN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	179;"	d	file:
EOB_ACT_END_OF_FILE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	180;"	d	file:
EOB_ACT_LAST_MATCH	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	181;"	d	file:
FLEXINT_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	34;"	d	file:
FLEX_BETA	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	14;"	d	file:
FLEX_SCANNER	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	9;"	d	file:
INITIAL	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	517;"	d	file:
INT16_MAX	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	76;"	d	file:
INT16_MIN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	67;"	d	file:
INT32_MAX	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	79;"	d	file:
INT32_MIN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	70;"	d	file:
INT8_MAX	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	73;"	d	file:
INT8_MIN	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	64;"	d	file:
LexerError	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^void yyFlexLexer::LexerError( yyconst char msg[] )$/;"	f	class:yyFlexLexer
LexerInput	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^int yyFlexLexer::LexerInput( char* buf, int \/* max_size *\/ )$/;"	f	class:yyFlexLexer
LexerOutput	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^void yyFlexLexer::LexerOutput( const char* buf, int size )$/;"	f	class:yyFlexLexer
REJECT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	478;"	d	file:
Scanner	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^Scanner::Scanner(std::istream* in,$/;"	f	class:SlamParser::Scanner
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^namespace SlamParser {$/;"	n	file:
Slamalloc	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^void *Slamalloc (yy_size_t  size )$/;"	f
Slamfree	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^void Slamfree (void * ptr )$/;"	f
Slamrealloc	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^void *Slamrealloc  (void * ptr, yy_size_t  size )$/;"	f
UINT16_MAX	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	85;"	d	file:
UINT32_MAX	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	88;"	d	file:
UINT8_MAX	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	82;"	d	file:
YYSTATE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	145;"	d	file:
YYTABLES_NAME	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	1729;"	d	file:
YY_AT_BOL	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	313;"	d	file:
YY_BREAK	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	606;"	d	file:
YY_BUFFER_EOF_PENDING	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	267;"	d	file:
YY_BUFFER_NEW	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	255;"	d	file:
YY_BUFFER_NORMAL	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	256;"	d	file:
YY_BUFFER_STATE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	file:
YY_BUF_SIZE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	162;"	d	file:
YY_BUF_SIZE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	164;"	d	file:
YY_CHAR	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	278;"	d	file:
YY_CURRENT_BUFFER_LVALUE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	285;"	d	file:
YY_DECL	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	594;"	d	file:
YY_DECL_IS_OURS	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	593;"	d	file:
YY_DO_BEFORE_ACTION	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	326;"	d	file:
YY_END_OF_BUFFER	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	334;"	d	file:
YY_END_OF_BUFFER_CHAR	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	153;"	d	file:
YY_EXIT_FAILURE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	1655;"	d	file:
YY_EXTRA_TYPE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	528;"	d	file:
YY_FATAL_ERROR	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	584;"	d	file:
YY_FLEX_MAJOR_VERSION	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	10;"	d	file:
YY_FLEX_MINOR_VERSION	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	11;"	d	file:
YY_FLEX_SUBMINOR_VERSION	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	12;"	d	file:
YY_INPUT	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	562;"	d	file:
YY_INT_ALIGNED	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	5;"	d	file:
YY_LESS_LINENO	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	183;"	d	file:
YY_MORE_ADJ	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	480;"	d	file:
YY_NEW_FILE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	151;"	d	file:
YY_NO_UNISTD_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	500;"	d	file:
YY_NULL	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	125;"	d	file:
YY_NUM_RULES	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	333;"	d	file:
YY_READ_BUF_SIZE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	547;"	d	file:
YY_READ_BUF_SIZE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	549;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	481;"	d	file:
YY_RULE_SETUP	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	609;"	d	file:
YY_SC_TO_UI	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	132;"	d	file:
YY_START	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	144;"	d	file:
YY_START_STACK_INCR	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	579;"	d	file:
YY_STATE_BUF_SIZE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	170;"	d	file:
YY_STATE_EOF	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	148;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	207;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	173;"	d	file:
YY_TYPEDEF_YY_SIZE_T	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	202;"	d	file:
YY_USER_ACTION	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	514;"	d	file:
YY_USER_ACTION	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	601;"	d	file:
YY_USE_CONST	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	106;"	d	file:
YY_USE_CONST	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	113;"	d	file:
__STDC_LIMIT_MACROS	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	44;"	d	file:
flex_int16_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
set_debug	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^void Scanner::set_debug(bool b)$/;"	f	class:SlamParser::Scanner
switch_streams	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )$/;"	f	class:yyFlexLexer
token	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef SlamParser::Parser::token token;$/;"	t	file:
token_type	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef SlamParser::Parser::token_type token_type;$/;"	t	file:
unput	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	199;"	d	file:
yyFlexLexer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout )$/;"	f	class:yyFlexLexer
yyFlexLexer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	23;"	d	file:
yy_accept	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^static yyconst flex_int16_t yy_accept[77] =$/;"	v	file:
yy_at_bol	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^static yyconst flex_int16_t yy_base[78] =$/;"	v	file:
yy_bs_column	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  char *yy_buf_pos;    \/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_state	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_ch_buf	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  char *yy_ch_buf;    \/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^static yyconst flex_int16_t yy_chk[220] =$/;"	v	file:
yy_create_buffer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )$/;"	f	class:yyFlexLexer
yy_def	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^static yyconst flex_int16_t yy_def[78] =$/;"	v	file:
yy_delete_buffer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )$/;"	f	class:yyFlexLexer
yy_ec	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fill_buffer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_strlen	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )$/;"	f	class:yyFlexLexer
yy_get_next_buffer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^int yyFlexLexer::yy_get_next_buffer()$/;"	f	class:yyFlexLexer
yy_get_previous_state	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    yy_state_type yyFlexLexer::yy_get_previous_state()$/;"	f	class:yyFlexLexer
yy_init_buffer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream* file )$/;"	f	class:yyFlexLexer
yy_input_file	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  std::istream* yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_load_buffer_state	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    void yyFlexLexer::yy_load_buffer_state()$/;"	f	class:yyFlexLexer
yy_meta	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^static yyconst flex_int32_t yy_meta[47] =$/;"	v	file:
yy_n_chars	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_new_buffer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	291;"	d	file:
yy_nxt	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^static yyconst flex_int16_t yy_nxt[220] =$/;"	v	file:
yy_pop_state	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    void yyFlexLexer::yy_pop_state()$/;"	f	class:yyFlexLexer
yy_push_state	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    void yyFlexLexer::yy_push_state( int new_state )$/;"	f	class:yyFlexLexer
yy_set_bol	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	303;"	d	file:
yy_set_interactive	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	293;"	d	file:
yy_size_t	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^typedef size_t yy_size_t;$/;"	t	file:
yy_switch_to_buffer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )$/;"	f	class:yyFlexLexer
yy_top_state	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    int yyFlexLexer::yy_top_state()$/;"	f	class:yyFlexLexer
yy_trans_info	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )$/;"	f	class:yyFlexLexer
yy_verify	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^  flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyconst	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	119;"	d	file:
yyconst	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	121;"	d	file:
yyensure_buffer_stack	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^void yyFlexLexer::yyensure_buffer_stack(void)$/;"	f	class:yyFlexLexer
yyinput	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    int yyFlexLexer::yyinput()$/;"	f	class:yyFlexLexer
yyless	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	1666;"	d	file:
yyless	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	1667;"	d	file:
yyless	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	186;"	d	file:
yylex	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^int SlamFlexLexer::yylex()$/;"	f	class:SlamFlexLexer
yylex	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	1755;"	d	file:
yymore	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	479;"	d	file:
yypop_buffer_state	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^void yyFlexLexer::yypop_buffer_state (void)$/;"	f	class:yyFlexLexer
yypush_buffer_state	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)$/;"	f	class:yyFlexLexer
yyrestart	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    void yyFlexLexer::yyrestart( std::istream* input_file )$/;"	f	class:yyFlexLexer
yyterminate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	496;"	d	file:
yyterminate	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	574;"	d	file:
yytext_ptr	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	319;"	d	file:
yyunput	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^    void yyFlexLexer::yyunput( int c, register char* yy_bp)$/;"	f	class:yyFlexLexer
yywrap	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^int SlamFlexLexer::yywrap()$/;"	f	class:SlamFlexLexer
~Scanner	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^Scanner::~Scanner()$/;"	f	class:SlamParser::Scanner
~yyFlexLexer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/flex_scanner.cpp	/^yyFlexLexer::~yyFlexLexer()$/;"	f	class:yyFlexLexer
BISON_LOCATION_HH	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	40;"	d
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^namespace SlamParser {$/;"	n
begin	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^    position begin;$/;"	m	class:SlamParser::location
columns	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^    inline void columns (unsigned int count = 1)$/;"	f	class:SlamParser::location
end	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^    position end;$/;"	m	class:SlamParser::location
initialize	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^    inline void initialize (std::string* fn)$/;"	f	class:SlamParser::location
lines	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^    inline void lines (unsigned int count = 1)$/;"	f	class:SlamParser::location
location	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^    location ()$/;"	f	class:SlamParser::location
location	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^  class location$/;"	c	namespace:SlamParser
operator !=	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^  operator!= (const location& loc1, const location& loc2)$/;"	f	namespace:SlamParser
operator +	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^  inline const location operator+ (const location& begin, const location& end)$/;"	f	namespace:SlamParser
operator +	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^  inline const location operator+ (const location& begin, unsigned int width)$/;"	f	namespace:SlamParser
operator +=	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^  inline location& operator+= (location& res, unsigned int width)$/;"	f	namespace:SlamParser
operator <<	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^  inline std::ostream& operator<< (std::ostream& ostr, const location& loc)$/;"	f	namespace:SlamParser
operator ==	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^  operator== (const location& loc1, const location& loc2)$/;"	f	namespace:SlamParser
step	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/location.hh	/^    inline void step ()$/;"	f	class:SlamParser::location
BISON_POSITION_HH	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	40;"	d
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^namespace SlamParser {$/;"	n
column	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^    unsigned int column;$/;"	m	class:SlamParser::position
columns	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^    inline void columns (int count = 1)$/;"	f	class:SlamParser::position
filename	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^    std::string* filename;$/;"	m	class:SlamParser::position
initialize	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^    inline void initialize (std::string* fn)$/;"	f	class:SlamParser::position
line	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^    unsigned int line;$/;"	m	class:SlamParser::position
lines	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^    inline void lines (int count = 1)$/;"	f	class:SlamParser::position
operator !=	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^  operator!= (const position& pos1, const position& pos2)$/;"	f	namespace:SlamParser
operator +	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^  operator+ (const position& begin, const int width)$/;"	f	namespace:SlamParser
operator +=	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^  operator+= (position& res, const int width)$/;"	f	namespace:SlamParser
operator -	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^  operator- (const position& begin, const int width)$/;"	f	namespace:SlamParser
operator -=	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^  operator-= (position& res, const int width)$/;"	f	namespace:SlamParser
operator <<	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^  operator<< (std::ostream& ostr, const position& pos)$/;"	f	namespace:SlamParser
operator ==	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^  operator== (const position& pos1, const position& pos2)$/;"	f	namespace:SlamParser
position	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^    position ()$/;"	f	class:SlamParser::position
position	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/position.hh	/^  class position$/;"	c	namespace:SlamParser
SCANNER_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/scanner.h	2;"	d
Scanner	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/scanner.h	/^  class Scanner : public SlamFlexLexer$/;"	c	namespace:SlamParser
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/scanner.h	/^namespace SlamParser {$/;"	n
YY_DECL	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/scanner.h	6;"	d
yyFlexLexer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/scanner.h	15;"	d
yyFlexLexer	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/scanner.h	17;"	d
SlamContext	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/slam_context.cpp	/^SlamContext::SlamContext()$/;"	f	class:SlamParser::SlamContext
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/slam_context.cpp	/^namespace SlamParser {$/;"	n	file:
process	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/slam_context.cpp	/^bool SlamContext::process(CommandNode* commandNode)$/;"	f	class:SlamParser::SlamContext
~SlamContext	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/slam_context.cpp	/^SlamContext::~SlamContext()$/;"	f	class:SlamParser::SlamContext
SLAM_CONTEXT_H	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/slam_context.h	28;"	d
SlamContext	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/slam_context.h	/^class SlamContext$/;"	c	namespace:SlamParser
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/slam_context.h	/^namespace SlamParser {$/;"	n
BISON_STACK_HH	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	36;"	d
SlamParser	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^namespace SlamParser {$/;"	n
begin	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    inline const_iterator begin () const { return seq_.rbegin (); }$/;"	f	class:SlamParser::stack
const_iterator	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    typedef typename S::const_reverse_iterator const_iterator;$/;"	t	class:SlamParser::stack
end	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    inline const_iterator end () const { return seq_.rend (); }$/;"	f	class:SlamParser::stack
height	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    height () const$/;"	f	class:SlamParser::stack
iterator	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    typedef typename S::reverse_iterator iterator;$/;"	t	class:SlamParser::stack
operator []	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    operator [] (unsigned int i) const$/;"	f	class:SlamParser::slice
operator []	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    operator [] (unsigned int i) const$/;"	f	class:SlamParser::stack
operator []	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    operator [] (unsigned int i)$/;"	f	class:SlamParser::stack
pop	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    pop (unsigned int n = 1)$/;"	f	class:SlamParser::stack
push	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    push (const T& t)$/;"	f	class:SlamParser::stack
range_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    unsigned int range_;$/;"	m	class:SlamParser::slice
seq_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    S seq_;$/;"	m	class:SlamParser::stack
slice	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    slice (const S& stack,$/;"	f	class:SlamParser::slice
slice	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^  class slice$/;"	c	namespace:SlamParser
stack	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    stack () : seq_ ()$/;"	f	class:SlamParser::stack
stack	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    stack (unsigned int n) : seq_ (n)$/;"	f	class:SlamParser::stack
stack	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^  class stack$/;"	c	namespace:SlamParser
stack_	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/stack.hh	/^    const S& stack_;$/;"	m	class:SlamParser::slice
main	trunk/EXTERNAL/g2o/g2o/examples/interactive_slam/slam_parser/parser/test_slam_parser.cpp	/^int main ()$/;"	f
Sample	trunk/EXTERNAL/g2o/g2o/examples/sba/sba_demo.cpp	/^class Sample$/;"	c	file:
gauss_rand	trunk/EXTERNAL/g2o/g2o/examples/sba/sba_demo.cpp	/^static double gauss_rand(double mean, double sigma)$/;"	f	file:
gaussian	trunk/EXTERNAL/g2o/g2o/examples/sba/sba_demo.cpp	/^double Sample::gaussian(double sigma)$/;"	f	class:Sample
main	trunk/EXTERNAL/g2o/g2o/examples/sba/sba_demo.cpp	/^int main(int argc, const char* argv[])$/;"	f
uniform	trunk/EXTERNAL/g2o/g2o/examples/sba/sba_demo.cpp	/^double Sample::uniform()$/;"	f	class:Sample
uniform	trunk/EXTERNAL/g2o/g2o/examples/sba/sba_demo.cpp	/^int Sample::uniform(int from, int to)$/;"	f	class:Sample
uniform_rand	trunk/EXTERNAL/g2o/g2o/examples/sba/sba_demo.cpp	/^static double uniform_rand(double lowerBndr, double upperBndr)$/;"	f	file:
main	trunk/EXTERNAL/g2o/g2o/examples/simple_optimize/simple_optimize.cpp	/^int main(int argc, char** argv)$/;"	f
slam2d	trunk/EXTERNAL/g2o/g2o/examples/simple_optimize/simple_optimize.cpp	/^G2O_USE_TYPE_GROUP(slam2d);$/;"	v
slam3d	trunk/EXTERNAL/g2o/g2o/examples/simple_optimize/simple_optimize.cpp	/^G2O_USE_TYPE_GROUP(slam3d);$/;"	v
GLUWrapper	trunk/EXTERNAL/g2o/g2o/examples/slam2d/draw_helpers.cpp	/^        GLUWrapper()$/;"	f	class:g2o::<anonymous>::GLUWrapper
GLUWrapper	trunk/EXTERNAL/g2o/g2o/examples/slam2d/draw_helpers.cpp	/^    class GLUWrapper$/;"	c	namespace:g2o::<anonymous>	file:
_quadratic	trunk/EXTERNAL/g2o/g2o/examples/slam2d/draw_helpers.cpp	/^        GLUquadricObj* _quadratic;;$/;"	m	class:g2o::<anonymous>::GLUWrapper	file:
drawCircle	trunk/EXTERNAL/g2o/g2o/examples/slam2d/draw_helpers.cpp	/^  void drawCircle(GLfloat radius, int segments)$/;"	f	namespace:g2o
drawDisk	trunk/EXTERNAL/g2o/g2o/examples/slam2d/draw_helpers.cpp	/^  void drawDisk(GLfloat radius)$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/examples/slam2d/draw_helpers.cpp	/^namespace g2o {$/;"	n	file:
getQuadradic	trunk/EXTERNAL/g2o/g2o/examples/slam2d/draw_helpers.cpp	/^        static GLUquadricObj* getQuadradic()$/;"	f	class:g2o::<anonymous>::GLUWrapper
~GLUWrapper	trunk/EXTERNAL/g2o/g2o/examples/slam2d/draw_helpers.cpp	/^        ~GLUWrapper()$/;"	f	class:g2o::<anonymous>::GLUWrapper
G2O_DRAW_HELPERS_H	trunk/EXTERNAL/g2o/g2o/examples/slam2d/draw_helpers.h	28;"	d
g2o	trunk/EXTERNAL/g2o/g2o/examples/slam2d/draw_helpers.h	/^namespace g2o {$/;"	n
MainWindow	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.cpp	/^MainWindow::MainWindow(QWidget * parent, Qt::WindowFlags flags) :$/;"	f	class:MainWindow
fixGraph	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.cpp	/^void MainWindow::fixGraph()$/;"	f	class:MainWindow
on_actionLoad_triggered	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.cpp	/^void MainWindow::on_actionLoad_triggered(bool)$/;"	f	class:MainWindow
on_actionQuit_triggered	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.cpp	/^void MainWindow::on_actionQuit_triggered(bool)$/;"	f	class:MainWindow
on_actionSave_triggered	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.cpp	/^void MainWindow::on_actionSave_triggered(bool)$/;"	f	class:MainWindow
on_btnInitialGuess_clicked	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.cpp	/^void MainWindow::on_btnInitialGuess_clicked()$/;"	f	class:MainWindow
on_btnOptimize_clicked	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.cpp	/^void MainWindow::on_btnOptimize_clicked()$/;"	f	class:MainWindow
~MainWindow	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.cpp	/^MainWindow::~MainWindow()$/;"	f	class:MainWindow
G2O_MAIN_WINDOW_H	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.h	20;"	d
MainWindow	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.h	/^class MainWindow : public QMainWindow, public Ui::BaseMainWindow$/;"	c
g2o	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.h	/^namespace g2o {$/;"	n
solverGaussNewton	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.h	/^    g2o::OptimizationAlgorithm* solverGaussNewton;$/;"	m	class:MainWindow
solverLevenberg	trunk/EXTERNAL/g2o/g2o/examples/slam2d/main_window.h	/^    g2o::OptimizationAlgorithm* solverLevenberg;$/;"	m	class:MainWindow
main	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_g2o.cpp	/^int main(int argc, char** argv)$/;"	f
slam2d	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_g2o.cpp	/^G2O_USE_TYPE_GROUP(slam2d);$/;"	v
Slam2DViewer	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^Slam2DViewer::Slam2DViewer(QWidget* parent, const QGLWidget* shareWidget, Qt::WFlags flags) :$/;"	f	class:g2o::Slam2DViewer
StandardCamera	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^      StandardCamera() : _standard(true) {};$/;"	f	class:g2o::<anonymous>::StandardCamera
StandardCamera	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^  class StandardCamera : public qglviewer::Camera$/;"	c	namespace:g2o::<anonymous>	file:
_standard	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^      bool _standard;$/;"	m	class:g2o::<anonymous>::StandardCamera	file:
draw	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^void Slam2DViewer::draw()$/;"	f	class:g2o::Slam2DViewer
drawCov	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^  void drawCov(const Eigen::Vector2d& p, const Eigen::MatrixBase<Derived>& cov)$/;"	f	namespace:g2o::<anonymous>
drawSE2	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^  void drawSE2(const VertexSE2* v)$/;"	f	namespace:g2o::<anonymous>
g2o	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^namespace g2o {$/;"	n	file:
init	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^void Slam2DViewer::init()$/;"	f	class:g2o::Slam2DViewer
standard	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^      bool& standard() {return _standard;}$/;"	f	class:g2o::<anonymous>::StandardCamera
standard	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^      const bool& standard() const {return _standard;}$/;"	f	class:g2o::<anonymous>::StandardCamera
zFar	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^      float zFar() const$/;"	f	class:g2o::<anonymous>::StandardCamera
zNear	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^      float zNear() const {$/;"	f	class:g2o::<anonymous>::StandardCamera
~Slam2DViewer	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.cpp	/^Slam2DViewer::~Slam2DViewer()$/;"	f	class:g2o::Slam2DViewer
G2O_QGL_GRAPH_VIEWER_H	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.h	20;"	d
Slam2DViewer	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.h	/^  class Slam2DViewer : public QGLViewer$/;"	c	namespace:g2o
drawCovariance	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.h	/^      bool drawCovariance;$/;"	m	class:g2o::Slam2DViewer
g2o	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.h	/^namespace g2o {$/;"	n
graph	trunk/EXTERNAL/g2o/g2o/examples/slam2d/slam2d_viewer.h	/^      SparseOptimizer* graph;$/;"	m	class:g2o::Slam2DViewer
main	trunk/EXTERNAL/g2o/g2o/examples/sphere/create_sphere.cpp	/^int main (int argc, char** argv)$/;"	f
main	trunk/EXTERNAL/g2o/g2o/examples/target/constant_velocity_target.cpp	/^int main()$/;"	f
G2O_CONTINUOUS_TO_DISCRETE_H_	trunk/EXTERNAL/g2o/g2o/examples/target/continuous_to_discrete.h	2;"	d
continuousToDiscrete	trunk/EXTERNAL/g2o/g2o/examples/target/continuous_to_discrete.h	/^void continuousToDiscrete(MatrixType& Fd, MatrixType& Qd,$/;"	f
main	trunk/EXTERNAL/g2o/g2o/examples/target/static_target.cpp	/^int main()$/;"	f
G2O_TARGET_TYPES_3D_HPP_	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	2;"	d
GPSObservationPosition3DEdge	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  GPSObservationPosition3DEdge()$/;"	f	class:GPSObservationPosition3DEdge
GPSObservationPosition3DEdge	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^class GPSObservationPosition3DEdge : public g2o::BaseUnaryEdge<3, Eigen::Vector3d, VertexPosition3D>$/;"	c
VertexPosition3D	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  VertexPosition3D()$/;"	f	class:VertexPosition3D
VertexPosition3D	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^class VertexPosition3D : public g2o::BaseVertex<3, Eigen::Vector3d>$/;"	c
VertexVelocity3D	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  VertexVelocity3D()$/;"	f	class:VertexVelocity3D
VertexVelocity3D	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^class VertexVelocity3D : public g2o::BaseVertex<3, Eigen::Vector3d>$/;"	c
computeError	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  void computeError()$/;"	f	class:GPSObservationPosition3DEdge
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  virtual void oplusImpl(const double* update)$/;"	f	class:VertexPosition3D
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  virtual void oplusImpl(const double* update)$/;"	f	class:VertexVelocity3D
read	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  virtual bool read(std::istream& \/*is*\/)$/;"	f	class:GPSObservationPosition3DEdge
read	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  virtual bool read(std::istream& \/*is*\/)$/;"	f	class:VertexPosition3D
read	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  virtual bool read(std::istream& \/*is*\/)$/;"	f	class:VertexVelocity3D
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  virtual void setToOriginImpl() {$/;"	f	class:VertexPosition3D
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  virtual void setToOriginImpl() {$/;"	f	class:VertexVelocity3D
write	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:GPSObservationPosition3DEdge
write	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:VertexPosition3D
write	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes3D.hpp	/^  virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:VertexVelocity3D
G2O_TARGET_TYPES_6D_HPP_	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	2;"	d
GPSObservationEdgePositionVelocity3D	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  GPSObservationEdgePositionVelocity3D(const Eigen::Vector3d& measurement, double noiseSigma)$/;"	f	class:GPSObservationEdgePositionVelocity3D
GPSObservationEdgePositionVelocity3D	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^class GPSObservationEdgePositionVelocity3D : public g2o::BaseUnaryEdge<3, Eigen::Vector3d, VertexPositionVelocity3D>$/;"	c
Matrix6d	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^typedef Eigen::Matrix<double,6,6> Matrix6d;$/;"	t
PositionVelocity3DEdge	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^class PositionVelocity3DEdge$/;"	c
TargetOdometry3DEdge	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  TargetOdometry3DEdge(double dt, double noiseSigma)$/;"	f	class:TargetOdometry3DEdge
TargetOdometry3DEdge	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^class TargetOdometry3DEdge : public g2o::BaseBinaryEdge<6, Eigen::Vector3d, VertexPositionVelocity3D, VertexPositionVelocity3D>$/;"	c
Vector6d	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^typedef Eigen::Matrix<double,6,1> Vector6d;$/;"	t
VertexPosition3D	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  VertexPosition3D()$/;"	f	class:VertexPosition3D
VertexPosition3D	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^class VertexPosition3D : public g2o::BaseVertex<3, Eigen::Vector3d>$/;"	c
VertexPositionVelocity3D	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  VertexPositionVelocity3D()$/;"	f	class:VertexPositionVelocity3D
VertexPositionVelocity3D	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^class VertexPositionVelocity3D : public g2o::BaseVertex<6, Vector6d>$/;"	c
_dt	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  double _dt;$/;"	m	class:TargetOdometry3DEdge
computeError	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  void computeError()$/;"	f	class:GPSObservationEdgePositionVelocity3D
computeError	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  void computeError()$/;"	f	class:TargetOdometry3DEdge
initialEstimate	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual void initialEstimate(const g2o::OptimizableGraph::VertexSet& from, g2o::OptimizableGraph::Vertex* to){$/;"	f	class:TargetOdometry3DEdge
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual double initialEstimatePossible(const g2o::OptimizableGraph::VertexSet& from, g2o::OptimizableGraph::Vertex* to) {$/;"	f	class:TargetOdometry3DEdge
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual void oplusImpl(const double* update)$/;"	f	class:VertexPosition3D
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual void oplusImpl(const double* update)$/;"	f	class:VertexPositionVelocity3D
read	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual bool read(std::istream& \/*is*\/)$/;"	f	class:GPSObservationEdgePositionVelocity3D
read	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual bool read(std::istream& \/*is*\/)$/;"	f	class:TargetOdometry3DEdge
read	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual bool read(std::istream& \/*is*\/)$/;"	f	class:VertexPosition3D
read	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual bool read(std::istream& \/*is*\/)$/;"	f	class:VertexPositionVelocity3D
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual void setToOriginImpl() {$/;"	f	class:VertexPosition3D
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual void setToOriginImpl() {$/;"	f	class:VertexPositionVelocity3D
write	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:GPSObservationEdgePositionVelocity3D
write	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:TargetOdometry3DEdge
write	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:VertexPosition3D
write	trunk/EXTERNAL/g2o/g2o/examples/target/targetTypes6D.hpp	/^  virtual bool write(std::ostream& \/*os*\/) const$/;"	f	class:VertexPositionVelocity3D
EdgeSE2	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.cpp	/^    EdgeSE2::EdgeSE2() :$/;"	f	class:g2o::tutorial::EdgeSE2
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.cpp	/^    bool EdgeSE2::read(std::istream& is)$/;"	f	class:g2o::tutorial::EdgeSE2
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.cpp	/^  namespace tutorial {$/;"	n	namespace:g2o	file:
write	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.cpp	/^    bool EdgeSE2::write(std::ostream& os) const$/;"	f	class:g2o::tutorial::EdgeSE2
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.h	/^        EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::tutorial::EdgeSE2
EdgeSE2	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.h	/^    class G2O_TUTORIAL_SLAM2D_API EdgeSE2 : public BaseBinaryEdge<3, SE2, VertexSE2, VertexSE2>$/;"	c	namespace:g2o::tutorial
G2O_TUTORIAL_EDGE_SE2_H	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.h	28;"	d
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.h	/^        SE2 _inverseMeasurement;$/;"	m	class:g2o::tutorial::EdgeSE2
computeError	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.h	/^        void computeError()$/;"	f	class:g2o::tutorial::EdgeSE2
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.h	/^namespace g2o {$/;"	n
setMeasurement	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.h	/^        void setMeasurement(const SE2& m){$/;"	f	class:g2o::tutorial::EdgeSE2
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2.h	/^  namespace tutorial {$/;"	n	namespace:g2o
EdgeSE2PointXY	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.cpp	/^    EdgeSE2PointXY::EdgeSE2PointXY() :$/;"	f	class:g2o::tutorial::EdgeSE2PointXY
computeError	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.cpp	/^    void EdgeSE2PointXY::computeError()$/;"	f	class:g2o::tutorial::EdgeSE2PointXY
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.cpp	/^    bool EdgeSE2PointXY::read(std::istream& is)$/;"	f	class:g2o::tutorial::EdgeSE2PointXY
resolveCaches	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.cpp	/^    bool EdgeSE2PointXY::resolveCaches()$/;"	f	class:g2o::tutorial::EdgeSE2PointXY
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.cpp	/^  namespace tutorial {$/;"	n	namespace:g2o	file:
write	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.cpp	/^    bool EdgeSE2PointXY::write(std::ostream& os) const$/;"	f	class:g2o::tutorial::EdgeSE2PointXY
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.h	/^        EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::tutorial::EdgeSE2PointXY
EdgeSE2PointXY	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.h	/^    class G2O_TUTORIAL_SLAM2D_API EdgeSE2PointXY : public BaseBinaryEdge<2, Eigen::Vector2d, VertexSE2, VertexPointXY>$/;"	c	namespace:g2o::tutorial
G2O_TUTORIAL_EDGE_SE2_POINT_XY_H	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.h	28;"	d
_sensorCache	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.h	/^        CacheSE2Offset* _sensorCache;$/;"	m	class:g2o::tutorial::EdgeSE2PointXY
_sensorOffset	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.h	/^        ParameterSE2Offset* _sensorOffset;$/;"	m	class:g2o::tutorial::EdgeSE2PointXY
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.h	/^namespace g2o {$/;"	n
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/edge_se2_pointxy.h	/^  namespace tutorial {$/;"	n	namespace:g2o
G2O_TUTORIAL_SLAM2D_API	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/g2o_tutorial_slam2d_api.h	19;"	d
G2O_TUTORIAL_SLAM2D_API	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/g2o_tutorial_slam2d_api.h	21;"	d
G2O_TUTORIAL_SLAM2D_API	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/g2o_tutorial_slam2d_api.h	24;"	d
G2O_TUTORIAL_SLAM2D_API	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/g2o_tutorial_slam2d_api.h	29;"	d
G2O_TUTORIAL_SLAM2D_API_H	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/g2o_tutorial_slam2d_api.h	11;"	d
ParameterSE2Offset	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.cpp	/^    ParameterSE2Offset::ParameterSE2Offset()$/;"	f	class:g2o::tutorial::ParameterSE2Offset
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.cpp	/^    bool ParameterSE2Offset::read(std::istream& is)$/;"	f	class:g2o::tutorial::ParameterSE2Offset
resolveDependancies	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.cpp	/^    bool CacheSE2Offset::resolveDependancies()$/;"	f	class:g2o::tutorial::CacheSE2Offset
setOffset	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.cpp	/^    void ParameterSE2Offset::setOffset(const SE2& offset)$/;"	f	class:g2o::tutorial::ParameterSE2Offset
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.cpp	/^  namespace tutorial {$/;"	n	namespace:g2o	file:
updateImpl	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.cpp	/^    void CacheSE2Offset::updateImpl()$/;"	f	class:g2o::tutorial::CacheSE2Offset
write	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.cpp	/^    bool ParameterSE2Offset::write(std::ostream& os) const$/;"	f	class:g2o::tutorial::ParameterSE2Offset
CacheSE2Offset	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^    class G2O_TUTORIAL_SLAM2D_API CacheSE2Offset: public Cache$/;"	c	namespace:g2o::tutorial
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::tutorial::CacheSE2Offset
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::tutorial::ParameterSE2Offset
G2O_TUTORIAL_PARAMETER_SE2_OFFSET_H	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	28;"	d
ParameterSE2Offset	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^    class G2O_TUTORIAL_SLAM2D_API ParameterSE2Offset: public Parameter$/;"	c	namespace:g2o::tutorial
_inverseOffset	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        SE2 _inverseOffset;$/;"	m	class:g2o::tutorial::ParameterSE2Offset
_n2w	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        SE2 _w2n, _n2w; $/;"	m	class:g2o::tutorial::CacheSE2Offset
_offset	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        SE2 _offset;$/;"	m	class:g2o::tutorial::ParameterSE2Offset
_offsetParam	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        ParameterSE2Offset* _offsetParam;$/;"	m	class:g2o::tutorial::CacheSE2Offset
_w2n	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        SE2 _w2n, _n2w; $/;"	m	class:g2o::tutorial::CacheSE2Offset
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^namespace g2o {$/;"	n
inverseOffset	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        const SE2& inverseOffset() const { return _inverseOffset;}$/;"	f	class:g2o::tutorial::ParameterSE2Offset
n2w	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        const SE2& n2w() const { return _n2w;}$/;"	f	class:g2o::tutorial::CacheSE2Offset
offset	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        const SE2& offset() const { return _offset;}$/;"	f	class:g2o::tutorial::ParameterSE2Offset
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^  namespace tutorial {$/;"	n	namespace:g2o
w2n	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/parameter_se2_offset.h	/^        const SE2& w2n() const { return _w2n;}$/;"	f	class:g2o::tutorial::CacheSE2Offset
G2O_RAND_HH	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/rand.h	28;"	d
Rand	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/rand.h	/^    class G2O_TUTORIAL_SLAM2D_API Rand$/;"	c	namespace:g2o::tutorial
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/rand.h	/^namespace g2o {$/;"	n
gauss_rand	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/rand.h	/^        static double gauss_rand(double mean, double sigma)$/;"	f	class:g2o::tutorial::Rand
seed_rand	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/rand.h	/^        static void seed_rand()$/;"	f	class:g2o::tutorial::Rand
seed_rand	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/rand.h	/^        static void seed_rand(unsigned int seed)$/;"	f	class:g2o::tutorial::Rand
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/rand.h	/^  namespace tutorial {$/;"	n	namespace:g2o
uniform_rand	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/rand.h	/^        static double uniform_rand(double lowerBndr, double upperBndr)$/;"	f	class:g2o::tutorial::Rand
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::tutorial::SE2
G2O_TUTORIAL_SE2_H	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	28;"	d
SE2	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        SE2():_R(0),_t(0,0){}$/;"	f	class:g2o::tutorial::SE2
SE2	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        SE2(double x, double y, double theta):_R(theta),_t(x,y){}$/;"	f	class:g2o::tutorial::SE2
SE2	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^    class G2O_TUTORIAL_SLAM2D_API SE2 {$/;"	c	namespace:g2o::tutorial
_R	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        Rotation2Dd _R;$/;"	m	class:g2o::tutorial::SE2
_t	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        Vector2d _t;$/;"	m	class:g2o::tutorial::SE2
fromVector	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        void fromVector (const Vector3d& v){$/;"	f	class:g2o::tutorial::SE2
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^namespace g2o {$/;"	n
inverse	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        SE2 inverse() const{$/;"	f	class:g2o::tutorial::SE2
operator *	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        SE2 operator * (const SE2& tr2) const{$/;"	f	class:g2o::tutorial::SE2
operator *	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        Vector2d operator * (const Vector2d& v) const {$/;"	f	class:g2o::tutorial::SE2
operator *=	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        SE2& operator *= (const SE2& tr2){$/;"	f	class:g2o::tutorial::SE2
operator []	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        double operator [](int i) const {$/;"	f	class:g2o::tutorial::SE2
operator []	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        double& operator [](int i) {$/;"	f	class:g2o::tutorial::SE2
rotation	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        Rotation2Dd& rotation() {return _R;}$/;"	f	class:g2o::tutorial::SE2
rotation	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        const Rotation2Dd& rotation() const {return _R;}$/;"	f	class:g2o::tutorial::SE2
toVector	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        Vector3d toVector() const {$/;"	f	class:g2o::tutorial::SE2
translation	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        Vector2d& translation() {return _t;}$/;"	f	class:g2o::tutorial::SE2
translation	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^        const Vector2d& translation() const {return _t;}$/;"	f	class:g2o::tutorial::SE2
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/se2.h	/^  namespace tutorial {$/;"	n	namespace:g2o
LandmarkGrid	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.cpp	/^    typedef std::map<int, std::map<int, Simulator::LandmarkPtrVector> > LandmarkGrid;$/;"	t	namespace:g2o::tutorial	file:
Simulator	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.cpp	/^    Simulator::Simulator()$/;"	f	class:g2o::tutorial::Simulator
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.cpp	/^namespace g2o {$/;"	n	file:
generateNewPose	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.cpp	/^    Simulator::GridPose Simulator::generateNewPose(const Simulator::GridPose& prev, const SE2& trueMotion, const Vector2d& transNoise, double rotNoise)$/;"	f	class:g2o::tutorial::Simulator
getMotion	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.cpp	/^    SE2 Simulator::getMotion(int motionDirection, double stepLen)$/;"	f	class:g2o::tutorial::Simulator
round	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.cpp	/^    inline double round(double number)$/;"	f	namespace:g2o::tutorial
sampleTransformation	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.cpp	/^    SE2 Simulator::sampleTransformation(const SE2& trueMotion_, const Vector2d& transNoise, double rotNoise)$/;"	f	class:g2o::tutorial::Simulator
simulate	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.cpp	/^    void Simulator::simulate(int numNodes, const SE2& sensorOffset)$/;"	f	class:g2o::tutorial::Simulator
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.cpp	/^  namespace tutorial {$/;"	n	namespace:g2o	file:
~Simulator	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.cpp	/^    Simulator::~Simulator()$/;"	f	class:g2o::tutorial::Simulator
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	struct:g2o::tutorial::Simulator::GridEdge
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	struct:g2o::tutorial::Simulator::GridPose
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	struct:g2o::tutorial::Simulator::Landmark
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	struct:g2o::tutorial::Simulator::LandmarkEdge
G2O_SIMULATOR_H	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	28;"	d
GridEdge	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        struct G2O_TUTORIAL_SLAM2D_API GridEdge$/;"	s	class:g2o::tutorial::Simulator
GridEdgeVector	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        typedef std::vector<GridEdge, Eigen::aligned_allocator<GridEdge> >  GridEdgeVector;$/;"	t	class:g2o::tutorial::Simulator
GridPose	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        struct G2O_TUTORIAL_SLAM2D_API GridPose$/;"	s	class:g2o::tutorial::Simulator
Landmark	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          Landmark() : id(-1) {}$/;"	f	struct:g2o::tutorial::Simulator::Landmark
Landmark	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        struct G2O_TUTORIAL_SLAM2D_API Landmark$/;"	s	class:g2o::tutorial::Simulator
LandmarkEdge	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        struct G2O_TUTORIAL_SLAM2D_API LandmarkEdge$/;"	s	class:g2o::tutorial::Simulator
LandmarkEdgeVector	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        typedef std::vector<LandmarkEdge, Eigen::aligned_allocator<LandmarkEdge> >  LandmarkEdgeVector;$/;"	t	class:g2o::tutorial::Simulator
LandmarkPtrVector	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        typedef std::vector<Landmark*> LandmarkPtrVector;$/;"	t	class:g2o::tutorial::Simulator
LandmarkVector	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        typedef std::vector<Landmark, Eigen::aligned_allocator<Landmark> > LandmarkVector;$/;"	t	class:g2o::tutorial::Simulator
MO_LEFT	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          MO_LEFT, MO_RIGHT,$/;"	e	enum:g2o::tutorial::Simulator::MotionType
MO_NUM_ELEMS	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          MO_NUM_ELEMS$/;"	e	enum:g2o::tutorial::Simulator::MotionType
MO_RIGHT	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          MO_LEFT, MO_RIGHT,$/;"	e	enum:g2o::tutorial::Simulator::MotionType
MotionType	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        enum G2O_TUTORIAL_SLAM2D_API MotionType {$/;"	g	class:g2o::tutorial::Simulator
PosesVector	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        typedef std::vector<GridPose, Eigen::aligned_allocator<GridPose> >  PosesVector;$/;"	t	class:g2o::tutorial::Simulator
Simulator	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^    class G2O_TUTORIAL_SLAM2D_API Simulator {$/;"	c	namespace:g2o::tutorial
_landmarkObservations	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        LandmarkEdgeVector _landmarkObservations;$/;"	m	class:g2o::tutorial::Simulator
_landmarks	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        LandmarkVector _landmarks;$/;"	m	class:g2o::tutorial::Simulator
_odometry	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        GridEdgeVector _odometry;$/;"	m	class:g2o::tutorial::Simulator
_poses	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        PosesVector _poses;$/;"	m	class:g2o::tutorial::Simulator
from	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          int from;$/;"	m	struct:g2o::tutorial::Simulator::GridEdge
from	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          int from;$/;"	m	struct:g2o::tutorial::Simulator::LandmarkEdge
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^namespace g2o {$/;"	n
id	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          int id;$/;"	m	struct:g2o::tutorial::Simulator::GridPose
id	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          int id;$/;"	m	struct:g2o::tutorial::Simulator::Landmark
information	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          Matrix2d information;$/;"	m	struct:g2o::tutorial::Simulator::LandmarkEdge
information	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          Matrix3d information;$/;"	m	struct:g2o::tutorial::Simulator::GridEdge
landmarkObservations	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        const LandmarkEdgeVector& landmarkObservations() const { return _landmarkObservations;}$/;"	f	class:g2o::tutorial::Simulator
landmarks	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          LandmarkPtrVector landmarks;      \/\/\/< the landmarks observed by this node$/;"	m	struct:g2o::tutorial::Simulator::GridPose
landmarks	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        const LandmarkVector& landmarks() const { return _landmarks;}$/;"	f	class:g2o::tutorial::Simulator
odometry	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        const GridEdgeVector& odometry() const { return _odometry;}$/;"	f	class:g2o::tutorial::Simulator
poses	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^        const PosesVector& poses() const { return _poses;}$/;"	f	class:g2o::tutorial::Simulator
seenBy	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          std::vector<int> seenBy;$/;"	m	struct:g2o::tutorial::Simulator::Landmark
simulatedPose	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          Vector2d simulatedPose;$/;"	m	struct:g2o::tutorial::Simulator::Landmark
simulatorMeas	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          Vector2d simulatorMeas;$/;"	m	struct:g2o::tutorial::Simulator::LandmarkEdge
simulatorPose	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          SE2 simulatorPose;$/;"	m	struct:g2o::tutorial::Simulator::GridPose
simulatorTransf	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          SE2 simulatorTransf;$/;"	m	struct:g2o::tutorial::Simulator::GridEdge
to	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          int to;$/;"	m	struct:g2o::tutorial::Simulator::GridEdge
to	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          int to;$/;"	m	struct:g2o::tutorial::Simulator::LandmarkEdge
trueMeas	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          Vector2d trueMeas;$/;"	m	struct:g2o::tutorial::Simulator::LandmarkEdge
truePose	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          SE2 truePose;$/;"	m	struct:g2o::tutorial::Simulator::GridPose
truePose	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          Vector2d truePose;$/;"	m	struct:g2o::tutorial::Simulator::Landmark
trueTransf	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^          SE2 trueTransf;$/;"	m	struct:g2o::tutorial::Simulator::GridEdge
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/simulator.h	/^  namespace tutorial {$/;"	n	namespace:g2o
main	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/tutorial_slam2d.cpp	/^int main()$/;"	f
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/types_tutorial_slam2d.cpp	/^namespace g2o {$/;"	n	file:
init_tutorial_slam2d_types	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/types_tutorial_slam2d.cpp	/^  bool init_tutorial_slam2d_types()$/;"	f	namespace:g2o
G2O_TYPES_TUTORIAL_SLAM2D_	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/types_tutorial_slam2d.h	28;"	d
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/types_tutorial_slam2d.h	/^namespace g2o {$/;"	n
VertexPointXY	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.cpp	/^    VertexPointXY::VertexPointXY() :$/;"	f	class:g2o::tutorial::VertexPointXY
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.cpp	/^    bool VertexPointXY::read(std::istream& is)$/;"	f	class:g2o::tutorial::VertexPointXY
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.cpp	/^  namespace tutorial {$/;"	n	namespace:g2o	file:
write	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.cpp	/^    bool VertexPointXY::write(std::ostream& os) const$/;"	f	class:g2o::tutorial::VertexPointXY
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.h	/^        EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::tutorial::VertexPointXY
G2O_TUTORIAL_VERTEX_POINT_XY_H	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.h	28;"	d
VertexPointXY	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.h	/^    class G2O_TUTORIAL_SLAM2D_API VertexPointXY : public BaseVertex<2, Eigen::Vector2d>$/;"	c	namespace:g2o::tutorial
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.h	/^namespace g2o {$/;"	n
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.h	/^        virtual void oplusImpl(const double* update)$/;"	f	class:g2o::tutorial::VertexPointXY
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.h	/^        virtual void setToOriginImpl() {$/;"	f	class:g2o::tutorial::VertexPointXY
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_point_xy.h	/^  namespace tutorial {$/;"	n	namespace:g2o
VertexSE2	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.cpp	/^    VertexSE2::VertexSE2() :$/;"	f	class:g2o::tutorial::VertexSE2
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.cpp	/^    bool VertexSE2::read(std::istream& is)$/;"	f	class:g2o::tutorial::VertexSE2
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.cpp	/^  namespace tutorial {$/;"	n	namespace:g2o	file:
write	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.cpp	/^    bool VertexSE2::write(std::ostream& os) const$/;"	f	class:g2o::tutorial::VertexSE2
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.h	/^        EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::tutorial::VertexSE2
G2O_TUTORIAL_VERTEX_SE2_H	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.h	28;"	d
VertexSE2	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.h	/^    class G2O_TUTORIAL_SLAM2D_API VertexSE2 : public BaseVertex<3, SE2>$/;"	c	namespace:g2o::tutorial
g2o	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.h	/^namespace g2o {$/;"	n
oplusImpl	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.h	/^        virtual void oplusImpl(const double* update)$/;"	f	class:g2o::tutorial::VertexSE2
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.h	/^        virtual void setToOriginImpl() {$/;"	f	class:g2o::tutorial::VertexSE2
tutorial	trunk/EXTERNAL/g2o/g2o/examples/tutorial_slam2d/vertex_se2.h	/^  namespace tutorial {$/;"	n	namespace:g2o
CholmodExt	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^  CholmodExt()$/;"	f	struct:g2o::CholmodExt
CholmodExt	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^struct CholmodExt : public cholmod_sparse$/;"	s	namespace:g2o
G2O_LINEAR_SOLVER_CHOLMOD	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	28;"	d
LinearSolverCholmod	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    LinearSolverCholmod() :$/;"	f	class:g2o::LinearSolverCholmod
LinearSolverCholmod	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^class LinearSolverCholmod : public LinearSolverCCS<MatrixType>$/;"	c	namespace:g2o
_blockOrdering	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    bool _blockOrdering;$/;"	m	class:g2o::LinearSolverCholmod
_blockPermutation	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    VectorXi _scalarPermutation, _blockPermutation;$/;"	m	class:g2o::LinearSolverCholmod
_cholmodCommon	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    cholmod_common _cholmodCommon;$/;"	m	class:g2o::LinearSolverCholmod
_cholmodFactor	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    cholmod_factor* _cholmodFactor;$/;"	m	class:g2o::LinearSolverCholmod
_cholmodSparse	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    CholmodExt* _cholmodSparse;$/;"	m	class:g2o::LinearSolverCholmod
_matrixStructure	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    MatrixStructure _matrixStructure;$/;"	m	class:g2o::LinearSolverCholmod
_scalarPermutation	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    VectorXi _scalarPermutation, _blockPermutation;$/;"	m	class:g2o::LinearSolverCholmod
_writeDebug	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    bool _writeDebug;$/;"	m	class:g2o::LinearSolverCholmod
blockOrdering	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    bool blockOrdering() const { return _blockOrdering;}$/;"	f	class:g2o::LinearSolverCholmod
columnsAllocated	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^  size_t columnsAllocated;$/;"	m	struct:g2o::CholmodExt
computeSymbolicDecomposition	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    void computeSymbolicDecomposition(const SparseBlockMatrix<MatrixType>& A)$/;"	f	class:g2o::LinearSolverCholmod
fillCholmodExt	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    void fillCholmodExt(const SparseBlockMatrix<MatrixType>& A, bool onlyValues)$/;"	f	class:g2o::LinearSolverCholmod
g2o	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^namespace g2o {$/;"	n
init	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    virtual bool init()$/;"	f	class:g2o::LinearSolverCholmod
saveMatrix	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    virtual bool saveMatrix(const std::string& fileName) {$/;"	f	class:g2o::LinearSolverCholmod
setBlockOrdering	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    void setBlockOrdering(bool blockOrdering) { _blockOrdering = blockOrdering;}$/;"	f	class:g2o::LinearSolverCholmod
setWriteDebug	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    virtual void setWriteDebug(bool b) { _writeDebug = b;}$/;"	f	class:g2o::LinearSolverCholmod
solve	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    bool solve(const SparseBlockMatrix<MatrixType>& A, double* x, double* b)$/;"	f	class:g2o::LinearSolverCholmod
solveBlocks	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    bool solveBlocks(double**& blocks, const SparseBlockMatrix<MatrixType>& A)$/;"	f	class:g2o::LinearSolverCholmod
solvePattern	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    virtual bool solvePattern(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<std::pair<int, int> >& blockIndices, const SparseBlockMatrix<MatrixType>& A)$/;"	f	class:g2o::LinearSolverCholmod
writeDebug	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    virtual bool writeDebug() const { return _writeDebug;}$/;"	f	class:g2o::LinearSolverCholmod
~CholmodExt	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^  ~CholmodExt()$/;"	f	struct:g2o::CholmodExt
~LinearSolverCholmod	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/linear_solver_cholmod.h	/^    virtual ~LinearSolverCholmod()$/;"	f	class:g2o::LinearSolverCholmod
ALLOC_CHOLMOD	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/solver_cholmod.cpp	43;"	d	file:
CholmodSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/solver_cholmod.cpp	/^      CholmodSolverCreator(const OptimizationAlgorithmProperty& p) : AbstractOptimizationAlgorithmCreator(p) {}$/;"	f	class:g2o::CholmodSolverCreator
CholmodSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/solver_cholmod.cpp	/^  class CholmodSolverCreator : public AbstractOptimizationAlgorithmCreator$/;"	c	namespace:g2o	file:
DIM_TO_SOLVER	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/solver_cholmod.cpp	41;"	d	file:
cholmod	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/solver_cholmod.cpp	/^  G2O_REGISTER_OPTIMIZATION_LIBRARY(cholmod);$/;"	v
construct	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/solver_cholmod.cpp	/^      virtual OptimizationAlgorithm* construct()$/;"	f	class:g2o::CholmodSolverCreator
createSolver	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/solver_cholmod.cpp	/^  static OptimizationAlgorithm* createSolver(const std::string& fullSolverName)$/;"	f	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/solvers/cholmod/solver_cholmod.cpp	/^namespace g2o {$/;"	n	file:
SparseMatrixEntry	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^    SparseMatrixEntry(int r=-1, int c=-1, double x=0.) :$/;"	f	struct:g2o::csparse_extension::SparseMatrixEntry
SparseMatrixEntry	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^  struct SparseMatrixEntry{$/;"	s	namespace:g2o::csparse_extension	file:
SparseMatrixEntryColSort	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^  struct SparseMatrixEntryColSort$/;"	s	namespace:g2o::csparse_extension	file:
_c	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^    int _r,_c;$/;"	m	struct:g2o::csparse_extension::SparseMatrixEntry	file:
_r	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^    int _r,_c;$/;"	m	struct:g2o::csparse_extension::SparseMatrixEntry	file:
_x	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^    double _x;$/;"	m	struct:g2o::csparse_extension::SparseMatrixEntry	file:
cs_chol_workspace	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^  csn* cs_chol_workspace (const cs *A, const css *S, int* cin, double* xin)$/;"	f	namespace:g2o::csparse_extension
cs_cholsolsymb	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^  int cs_cholsolsymb(const cs *A, double *b, const css* S, double* x, int* work)$/;"	f	namespace:g2o::csparse_extension
csparse_extension	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^namespace csparse_extension {$/;"	n	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^    bool operator()(const SparseMatrixEntry& e1, const SparseMatrixEntry& e2) const$/;"	f	struct:g2o::csparse_extension::SparseMatrixEntryColSort
writeCs2Octave	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.cpp	/^  bool writeCs2Octave(const char* filename, const cs* A, bool upperTriangular)$/;"	f	namespace:g2o::csparse_extension
G2O_CSPARSE_HELPER_H	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.h	18;"	d
NCOMPLEX	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.h	21;"	d
csparse_extension	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.h	/^  namespace csparse_extension {$/;"	n	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/solvers/csparse/csparse_helper.h	/^namespace g2o {$/;"	n
G2O_SOLVER_CSPARSE_API	trunk/EXTERNAL/g2o/g2o/solvers/csparse/g2o_csparse_api.h	19;"	d
G2O_SOLVER_CSPARSE_API	trunk/EXTERNAL/g2o/g2o/solvers/csparse/g2o_csparse_api.h	21;"	d
G2O_SOLVER_CSPARSE_API	trunk/EXTERNAL/g2o/g2o/solvers/csparse/g2o_csparse_api.h	24;"	d
G2O_SOLVER_CSPARSE_API	trunk/EXTERNAL/g2o/g2o/solvers/csparse/g2o_csparse_api.h	29;"	d
G2O_SOLVER_CSPARSE_API_H	trunk/EXTERNAL/g2o/g2o/solvers/csparse/g2o_csparse_api.h	11;"	d
G2O_CSPARSE_EXTENSION_API	trunk/EXTERNAL/g2o/g2o/solvers/csparse/g2o_csparse_extension_api.h	26;"	d
G2O_CSPARSE_EXTENSION_API	trunk/EXTERNAL/g2o/g2o/solvers/csparse/g2o_csparse_extension_api.h	28;"	d
G2O_CSPARSE_EXTENSION_API	trunk/EXTERNAL/g2o/g2o/solvers/csparse/g2o_csparse_extension_api.h	31;"	d
G2O_CSPARSE_EXTENSION_API	trunk/EXTERNAL/g2o/g2o/solvers/csparse/g2o_csparse_extension_api.h	36;"	d
G2O_CSPARSE_EXTENSION_API_H	trunk/EXTERNAL/g2o/g2o/solvers/csparse/g2o_csparse_extension_api.h	18;"	d
CSparseExt	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^  CSparseExt()$/;"	f	struct:g2o::CSparseExt
CSparseExt	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^struct G2O_SOLVER_CSPARSE_API CSparseExt : public cs$/;"	s	namespace:g2o
G2O_LINEAR_SOLVERCSPARSE_H	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	28;"	d
LinearSolverCSparse	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    LinearSolverCSparse() :$/;"	f	class:g2o::LinearSolverCSparse
LinearSolverCSparse	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^class LinearSolverCSparse : public LinearSolverCCS<MatrixType>$/;"	c	namespace:g2o
_blockOrdering	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    bool _blockOrdering;$/;"	m	class:g2o::LinearSolverCSparse
_ccsA	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    CSparseExt* _ccsA;$/;"	m	class:g2o::LinearSolverCSparse
_csIntWorkspace	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    int* _csIntWorkspace;$/;"	m	class:g2o::LinearSolverCSparse
_csWorkspace	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    double* _csWorkspace;$/;"	m	class:g2o::LinearSolverCSparse
_csWorkspaceSize	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    int _csWorkspaceSize;$/;"	m	class:g2o::LinearSolverCSparse
_matrixStructure	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    MatrixStructure _matrixStructure;$/;"	m	class:g2o::LinearSolverCSparse
_scalarPermutation	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    VectorXi _scalarPermutation;$/;"	m	class:g2o::LinearSolverCSparse
_symbolicDecomposition	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    css* _symbolicDecomposition;$/;"	m	class:g2o::LinearSolverCSparse
_writeDebug	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    bool _writeDebug;$/;"	m	class:g2o::LinearSolverCSparse
blockOrdering	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    bool blockOrdering() const { return _blockOrdering;}$/;"	f	class:g2o::LinearSolverCSparse
columnsAllocated	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^  int columnsAllocated;$/;"	m	struct:g2o::CSparseExt
computeSymbolicDecomposition	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    void computeSymbolicDecomposition(const SparseBlockMatrix<MatrixType>& A)$/;"	f	class:g2o::LinearSolverCSparse
fillCSparse	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    void fillCSparse(const SparseBlockMatrix<MatrixType>& A, bool onlyValues)$/;"	f	class:g2o::LinearSolverCSparse
g2o	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^namespace g2o {$/;"	n
init	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    virtual bool init()$/;"	f	class:g2o::LinearSolverCSparse
setBlockOrdering	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    void setBlockOrdering(bool blockOrdering) { _blockOrdering = blockOrdering;}$/;"	f	class:g2o::LinearSolverCSparse
setWriteDebug	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    virtual void setWriteDebug(bool b) { _writeDebug = b;}$/;"	f	class:g2o::LinearSolverCSparse
solve	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    bool solve(const SparseBlockMatrix<MatrixType>& A, double* x, double* b)$/;"	f	class:g2o::LinearSolverCSparse
solveBlocks	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    bool solveBlocks(double**& blocks, const SparseBlockMatrix<MatrixType>& A) {$/;"	f	class:g2o::LinearSolverCSparse
solvePattern	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    virtual bool solvePattern(SparseBlockMatrix<MatrixXd>& spinv, const std::vector<std::pair<int, int> >& blockIndices, const SparseBlockMatrix<MatrixType>& A) {$/;"	f	class:g2o::LinearSolverCSparse
writeDebug	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    virtual bool writeDebug() const { return _writeDebug;}$/;"	f	class:g2o::LinearSolverCSparse
~CSparseExt	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^  ~CSparseExt()$/;"	f	struct:g2o::CSparseExt
~LinearSolverCSparse	trunk/EXTERNAL/g2o/g2o/solvers/csparse/linear_solver_csparse.h	/^    virtual ~LinearSolverCSparse()$/;"	f	class:g2o::LinearSolverCSparse
ALLOC_CSPARSE	trunk/EXTERNAL/g2o/g2o/solvers/csparse/solver_csparse.cpp	34;"	d	file:
CSparseSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/csparse/solver_csparse.cpp	/^      CSparseSolverCreator(const OptimizationAlgorithmProperty& p) : AbstractOptimizationAlgorithmCreator(p) {}$/;"	f	class:g2o::CSparseSolverCreator
CSparseSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/csparse/solver_csparse.cpp	/^  class CSparseSolverCreator : public AbstractOptimizationAlgorithmCreator$/;"	c	namespace:g2o	file:
DIM_TO_SOLVER	trunk/EXTERNAL/g2o/g2o/solvers/csparse/solver_csparse.cpp	32;"	d	file:
construct	trunk/EXTERNAL/g2o/g2o/solvers/csparse/solver_csparse.cpp	/^      virtual OptimizationAlgorithm* construct()$/;"	f	class:g2o::CSparseSolverCreator
createSolver	trunk/EXTERNAL/g2o/g2o/solvers/csparse/solver_csparse.cpp	/^  static OptimizationAlgorithm* createSolver(const std::string& fullSolverName)$/;"	f	namespace:g2o	file:
csparse	trunk/EXTERNAL/g2o/g2o/solvers/csparse/solver_csparse.cpp	/^  G2O_REGISTER_OPTIMIZATION_LIBRARY(csparse);$/;"	v
g2o	trunk/EXTERNAL/g2o/g2o/solvers/csparse/solver_csparse.cpp	/^namespace g2o {$/;"	n	file:
G2O_LINEAR_SOLVER_DENSE_H	trunk/EXTERNAL/g2o/g2o/solvers/dense/linear_solver_dense.h	29;"	d
LinearSolverDense	trunk/EXTERNAL/g2o/g2o/solvers/dense/linear_solver_dense.h	/^      LinearSolverDense() :$/;"	f	class:g2o::LinearSolverDense
LinearSolverDense	trunk/EXTERNAL/g2o/g2o/solvers/dense/linear_solver_dense.h	/^  class LinearSolverDense : public LinearSolver<MatrixType>$/;"	c	namespace:g2o
_H	trunk/EXTERNAL/g2o/g2o/solvers/dense/linear_solver_dense.h	/^      Eigen::MatrixXd _H;$/;"	m	class:g2o::LinearSolverDense
_cholesky	trunk/EXTERNAL/g2o/g2o/solvers/dense/linear_solver_dense.h	/^      Eigen::LDLT<Eigen::MatrixXd> _cholesky;$/;"	m	class:g2o::LinearSolverDense
_reset	trunk/EXTERNAL/g2o/g2o/solvers/dense/linear_solver_dense.h	/^      bool _reset;$/;"	m	class:g2o::LinearSolverDense
g2o	trunk/EXTERNAL/g2o/g2o/solvers/dense/linear_solver_dense.h	/^namespace g2o {$/;"	n
init	trunk/EXTERNAL/g2o/g2o/solvers/dense/linear_solver_dense.h	/^      virtual bool init()$/;"	f	class:g2o::LinearSolverDense
solve	trunk/EXTERNAL/g2o/g2o/solvers/dense/linear_solver_dense.h	/^      bool solve(const SparseBlockMatrix<MatrixType>& A, double* x, double* b)$/;"	f	class:g2o::LinearSolverDense
~LinearSolverDense	trunk/EXTERNAL/g2o/g2o/solvers/dense/linear_solver_dense.h	/^      virtual ~LinearSolverDense()$/;"	f	class:g2o::LinearSolverDense
ALLOC_DENSE	trunk/EXTERNAL/g2o/g2o/solvers/dense/solver_dense.cpp	39;"	d	file:
DIM_TO_SOLVER	trunk/EXTERNAL/g2o/g2o/solvers/dense/solver_dense.cpp	37;"	d	file:
DenseSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/dense/solver_dense.cpp	/^      DenseSolverCreator(const OptimizationAlgorithmProperty& p) : AbstractOptimizationAlgorithmCreator(p) {}$/;"	f	class:g2o::DenseSolverCreator
DenseSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/dense/solver_dense.cpp	/^  class DenseSolverCreator : public AbstractOptimizationAlgorithmCreator$/;"	c	namespace:g2o	file:
construct	trunk/EXTERNAL/g2o/g2o/solvers/dense/solver_dense.cpp	/^      virtual OptimizationAlgorithm* construct()$/;"	f	class:g2o::DenseSolverCreator
createSolver	trunk/EXTERNAL/g2o/g2o/solvers/dense/solver_dense.cpp	/^  static OptimizationAlgorithm* createSolver(const std::string& fullSolverName)$/;"	f	namespace:g2o	file:
dense	trunk/EXTERNAL/g2o/g2o/solvers/dense/solver_dense.cpp	/^  G2O_REGISTER_OPTIMIZATION_LIBRARY(dense);$/;"	v
g2o	trunk/EXTERNAL/g2o/g2o/solvers/dense/solver_dense.cpp	/^namespace g2o {$/;"	n	file:
CholeskyDecomposition	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^        CholeskyDecomposition() : Eigen::SimplicialLDLT<SparseMatrix, Eigen::Upper>() {}$/;"	f	class:g2o::LinearSolverEigen::CholeskyDecomposition
CholeskyDecomposition	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    class CholeskyDecomposition : public Eigen::SimplicialLDLT<SparseMatrix, Eigen::Upper>$/;"	c	class:g2o::LinearSolverEigen
G2O_LINEAR_SOLVER_EIGEN_H	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	28;"	d
LinearSolverEigen	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    LinearSolverEigen() :$/;"	f	class:g2o::LinearSolverEigen
LinearSolverEigen	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^class LinearSolverEigen: public LinearSolver<MatrixType>$/;"	c	namespace:g2o
PermutationMatrix	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    typedef Eigen::PermutationMatrix<Eigen::Dynamic, Eigen::Dynamic, SparseMatrix::Index> PermutationMatrix;$/;"	t	class:g2o::LinearSolverEigen
SparseMatrix	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    typedef Eigen::SparseMatrix<double, ColMajor> SparseMatrix;$/;"	t	class:g2o::LinearSolverEigen
Triplet	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    typedef Eigen::Triplet<double> Triplet;$/;"	t	class:g2o::LinearSolverEigen
_blockOrdering	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    bool _blockOrdering;$/;"	m	class:g2o::LinearSolverEigen
_cholesky	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    CholeskyDecomposition _cholesky;$/;"	m	class:g2o::LinearSolverEigen
_init	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    bool _init;$/;"	m	class:g2o::LinearSolverEigen
_sparseMatrix	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    SparseMatrix _sparseMatrix;$/;"	m	class:g2o::LinearSolverEigen
_writeDebug	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    bool _writeDebug;$/;"	m	class:g2o::LinearSolverEigen
analyzePatternWithPermutation	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^        void analyzePatternWithPermutation(SparseMatrix& a, const PermutationMatrix& permutation)$/;"	f	class:g2o::LinearSolverEigen::CholeskyDecomposition
blockOrdering	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    bool blockOrdering() const { return _blockOrdering;}$/;"	f	class:g2o::LinearSolverEigen
computeSymbolicDecomposition	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    void computeSymbolicDecomposition(const SparseBlockMatrix<MatrixType>& A)$/;"	f	class:g2o::LinearSolverEigen
fillSparseMatrix	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    void fillSparseMatrix(const SparseBlockMatrix<MatrixType>& A, bool onlyValues)$/;"	f	class:g2o::LinearSolverEigen
g2o	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^namespace g2o {$/;"	n
init	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    virtual bool init()$/;"	f	class:g2o::LinearSolverEigen
setBlockOrdering	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    void setBlockOrdering(bool blockOrdering) { _blockOrdering = blockOrdering;}$/;"	f	class:g2o::LinearSolverEigen
setWriteDebug	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    virtual void setWriteDebug(bool b) { _writeDebug = b;}$/;"	f	class:g2o::LinearSolverEigen
solve	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    bool solve(const SparseBlockMatrix<MatrixType>& A, double* x, double* b)$/;"	f	class:g2o::LinearSolverEigen
writeDebug	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    virtual bool writeDebug() const { return _writeDebug;}$/;"	f	class:g2o::LinearSolverEigen
~LinearSolverEigen	trunk/EXTERNAL/g2o/g2o/solvers/eigen/linear_solver_eigen.h	/^    virtual ~LinearSolverEigen()$/;"	f	class:g2o::LinearSolverEigen
ALLOC_EIGEN_SPARSE_CHOLESKY	trunk/EXTERNAL/g2o/g2o/solvers/eigen/solver_eigen.cpp	32;"	d	file:
DIM_TO_SOLVER	trunk/EXTERNAL/g2o/g2o/solvers/eigen/solver_eigen.cpp	30;"	d	file:
EigenSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/eigen/solver_eigen.cpp	/^      EigenSolverCreator(const OptimizationAlgorithmProperty& p) : AbstractOptimizationAlgorithmCreator(p) {}$/;"	f	class:g2o::EigenSolverCreator
EigenSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/eigen/solver_eigen.cpp	/^  class EigenSolverCreator : public AbstractOptimizationAlgorithmCreator$/;"	c	namespace:g2o	file:
construct	trunk/EXTERNAL/g2o/g2o/solvers/eigen/solver_eigen.cpp	/^      virtual OptimizationAlgorithm* construct()$/;"	f	class:g2o::EigenSolverCreator
createSolver	trunk/EXTERNAL/g2o/g2o/solvers/eigen/solver_eigen.cpp	/^  static OptimizationAlgorithm* createSolver(const std::string& fullSolverName)$/;"	f	namespace:g2o	file:
eigen	trunk/EXTERNAL/g2o/g2o/solvers/eigen/solver_eigen.cpp	/^  G2O_REGISTER_OPTIMIZATION_LIBRARY(eigen);$/;"	v
g2o	trunk/EXTERNAL/g2o/g2o/solvers/eigen/solver_eigen.cpp	/^namespace g2o {$/;"	n	file:
G2O_LINEAR_SOLVER_PCG_H	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	28;"	d
LinearSolverPCG	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      LinearSolverPCG() :$/;"	f	class:g2o::LinearSolverPCG
LinearSolverPCG	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^  class LinearSolverPCG : public LinearSolver<MatrixType>$/;"	c	namespace:g2o
MatrixPtrVector	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      typedef std::vector< const MatrixType* > MatrixPtrVector;$/;"	t	class:g2o::LinearSolverPCG
MatrixVector	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      typedef std::vector< MatrixType, Eigen::aligned_allocator<MatrixType> > MatrixVector;$/;"	t	class:g2o::LinearSolverPCG
_J	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      MatrixVector _J;$/;"	m	class:g2o::LinearSolverPCG
_absoluteTolerance	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      bool _absoluteTolerance;$/;"	m	class:g2o::LinearSolverPCG
_diag	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      MatrixPtrVector _diag;$/;"	m	class:g2o::LinearSolverPCG
_indices	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      std::vector<std::pair<int, int> > _indices;$/;"	m	class:g2o::LinearSolverPCG
_maxIter	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      int _maxIter;$/;"	m	class:g2o::LinearSolverPCG
_residual	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      double _residual;$/;"	m	class:g2o::LinearSolverPCG
_sparseMat	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      MatrixPtrVector _sparseMat;$/;"	m	class:g2o::LinearSolverPCG
_tolerance	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      double _tolerance;$/;"	m	class:g2o::LinearSolverPCG
_verbose	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      bool _verbose;$/;"	m	class:g2o::LinearSolverPCG
absoluteTolerance	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      bool absoluteTolerance() const { return _absoluteTolerance;}$/;"	f	class:g2o::LinearSolverPCG
g2o	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^namespace g2o {$/;"	n
init	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      virtual bool init()$/;"	f	class:g2o::LinearSolverPCG
maxIterations	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      int maxIterations() const { return _maxIter;}$/;"	f	class:g2o::LinearSolverPCG
setAbsoluteTolerance	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      void setAbsoluteTolerance(bool absoluteTolerance) { _absoluteTolerance = absoluteTolerance;}$/;"	f	class:g2o::LinearSolverPCG
setMaxIterations	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      void setMaxIterations(int maxIter) { _maxIter = maxIter;}$/;"	f	class:g2o::LinearSolverPCG
setTolerance	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      void setTolerance(double tolerance) { _tolerance = tolerance;}$/;"	f	class:g2o::LinearSolverPCG
setVerbose	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      void setVerbose(bool verbose) { _verbose = verbose;}$/;"	f	class:g2o::LinearSolverPCG
tolerance	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      double tolerance() const { return _tolerance;}$/;"	f	class:g2o::LinearSolverPCG
verbose	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      bool verbose() const { return _verbose;}$/;"	f	class:g2o::LinearSolverPCG
~LinearSolverPCG	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.h	/^      virtual ~LinearSolverPCG()$/;"	f	class:g2o::LinearSolverPCG
internal	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.hpp	/^namespace internal {$/;"	n
mult	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.hpp	/^void LinearSolverPCG<MatrixType>::mult(const std::vector<int>& colBlockIndices, const Eigen::VectorXd& src, Eigen::VectorXd& dest)$/;"	f	class:LinearSolverPCG
multDiag	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.hpp	/^void LinearSolverPCG<MatrixType>::multDiag(const std::vector<int>& colBlockIndices, MatrixPtrVector& A, const Eigen::VectorXd& src, Eigen::VectorXd& dest)$/;"	f	class:LinearSolverPCG
multDiag	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.hpp	/^void LinearSolverPCG<MatrixType>::multDiag(const std::vector<int>& colBlockIndices, MatrixVector& A, const Eigen::VectorXd& src, Eigen::VectorXd& dest)$/;"	f	class:LinearSolverPCG
pcg_atxpy	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.hpp	/^  inline void pcg_atxpy(const Eigen::MatrixXd& A, const Eigen::VectorXd& x, int xoff, Eigen::VectorXd& y, int yoff)$/;"	f	namespace:internal
pcg_atxpy	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.hpp	/^  inline void pcg_atxpy(const MatrixType& A, const Eigen::VectorXd& x, int xoff, Eigen::VectorXd& y, int yoff)$/;"	f	namespace:internal
pcg_axpy	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.hpp	/^  inline void pcg_axpy(const Eigen::MatrixXd& A, const Eigen::VectorXd& x, int xoff, Eigen::VectorXd& y, int yoff)$/;"	f	namespace:internal
pcg_axpy	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.hpp	/^  inline void pcg_axpy(const MatrixType& A, const Eigen::VectorXd& x, int xoff, Eigen::VectorXd& y, int yoff)$/;"	f	namespace:internal
pcg_axy	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.hpp	/^  void pcg_axy(const MatrixType& A, const Eigen::VectorXd& x, int xoff, Eigen::VectorXd& y, int yoff)$/;"	f	namespace:internal
solve	trunk/EXTERNAL/g2o/g2o/solvers/pcg/linear_solver_pcg.hpp	/^bool LinearSolverPCG<MatrixType>::solve(const SparseBlockMatrix<MatrixType>& A, double* x, double* b)$/;"	f	class:LinearSolverPCG
ALLOC_PCG	trunk/EXTERNAL/g2o/g2o/solvers/pcg/solver_pcg.cpp	39;"	d	file:
DIM_TO_SOLVER	trunk/EXTERNAL/g2o/g2o/solvers/pcg/solver_pcg.cpp	37;"	d	file:
PCGSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/pcg/solver_pcg.cpp	/^      PCGSolverCreator(const OptimizationAlgorithmProperty& p) : AbstractOptimizationAlgorithmCreator(p) {}$/;"	f	class:g2o::PCGSolverCreator
PCGSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/pcg/solver_pcg.cpp	/^  class PCGSolverCreator : public AbstractOptimizationAlgorithmCreator$/;"	c	namespace:g2o	file:
construct	trunk/EXTERNAL/g2o/g2o/solvers/pcg/solver_pcg.cpp	/^      virtual OptimizationAlgorithm* construct()$/;"	f	class:g2o::PCGSolverCreator
createSolver	trunk/EXTERNAL/g2o/g2o/solvers/pcg/solver_pcg.cpp	/^  static OptimizationAlgorithm* createSolver(const std::string& fullSolverName)$/;"	f	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/solvers/pcg/solver_pcg.cpp	/^namespace g2o {$/;"	n	file:
pcg	trunk/EXTERNAL/g2o/g2o/solvers/pcg/solver_pcg.cpp	/^  G2O_REGISTER_OPTIMIZATION_LIBRARY(pcg);$/;"	v
G2O_SLAM2D_LINEAR_API	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/g2o_slam2d_linear_api.h	19;"	d
G2O_SLAM2D_LINEAR_API	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/g2o_slam2d_linear_api.h	21;"	d
G2O_SLAM2D_LINEAR_API	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/g2o_slam2d_linear_api.h	24;"	d
G2O_SLAM2D_LINEAR_API	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/g2o_slam2d_linear_api.h	29;"	d
G2O_SLAM2D_LINEAR_API_H	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/g2o_slam2d_linear_api.h	11;"	d
ALLOC_CSPARSE	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/slam2d_linear.cpp	41;"	d	file:
DIM_TO_SOLVER	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/slam2d_linear.cpp	39;"	d	file:
SLAM2DLinearSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/slam2d_linear.cpp	/^      SLAM2DLinearSolverCreator(const OptimizationAlgorithmProperty& p) : AbstractOptimizationAlgorithmCreator(p) {}$/;"	f	class:g2o::SLAM2DLinearSolverCreator
SLAM2DLinearSolverCreator	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/slam2d_linear.cpp	/^  class SLAM2DLinearSolverCreator : public AbstractOptimizationAlgorithmCreator$/;"	c	namespace:g2o	file:
construct	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/slam2d_linear.cpp	/^      virtual OptimizationAlgorithm* construct()$/;"	f	class:g2o::SLAM2DLinearSolverCreator
createSolver	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/slam2d_linear.cpp	/^  static OptimizationAlgorithm* createSolver(const std::string& fullSolverName)$/;"	f	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/slam2d_linear.cpp	/^namespace g2o {$/;"	n	file:
slam2d_linear	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/slam2d_linear.cpp	/^  G2O_REGISTER_OPTIMIZATION_LIBRARY(slam2d_linear);$/;"	v
SolverSLAM2DLinear	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.cpp	/^  SolverSLAM2DLinear::SolverSLAM2DLinear(Solver* solver) :$/;"	f	class:g2o::SolverSLAM2DLinear
ThetaTreeAction	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.cpp	/^      ThetaTreeAction(double* theta) : HyperDijkstra::TreeAction(), _thetaGuess(theta) {}$/;"	f	class:g2o::ThetaTreeAction
ThetaTreeAction	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.cpp	/^  class ThetaTreeAction : public HyperDijkstra::TreeAction$/;"	c	namespace:g2o	file:
_thetaGuess	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.cpp	/^      double* _thetaGuess;$/;"	m	class:g2o::ThetaTreeAction	file:
g2o	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.cpp	/^namespace g2o {$/;"	n	file:
perform	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.cpp	/^      virtual double perform(HyperGraph::Vertex* v, HyperGraph::Vertex* vParent, HyperGraph::Edge* e)$/;"	f	class:g2o::ThetaTreeAction
solve	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.cpp	/^  OptimizationAlgorithm::SolverResult SolverSLAM2DLinear::solve(int iteration, bool online)$/;"	f	class:g2o::SolverSLAM2DLinear
solveOrientation	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.cpp	/^  bool SolverSLAM2DLinear::solveOrientation()$/;"	f	class:g2o::SolverSLAM2DLinear
~SolverSLAM2DLinear	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.cpp	/^  SolverSLAM2DLinear::~SolverSLAM2DLinear()$/;"	f	class:g2o::SolverSLAM2DLinear
G2O_SOLVER_SLAM2D_LINEAR	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.h	28;"	d
SolverSLAM2DLinear	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.h	/^  class G2O_SLAM2D_LINEAR_API SolverSLAM2DLinear : public OptimizationAlgorithmGaussNewton$/;"	c	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/solvers/slam2d_linear/solver_slam2d_linear.h	/^namespace g2o {$/;"	n
StructureOnlyCreator	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only.cpp	/^      StructureOnlyCreator(const OptimizationAlgorithmProperty& p) : AbstractOptimizationAlgorithmCreator(p) {}$/;"	f	class:g2o::StructureOnlyCreator
StructureOnlyCreator	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only.cpp	/^  class StructureOnlyCreator : public AbstractOptimizationAlgorithmCreator$/;"	c	namespace:g2o	file:
construct	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only.cpp	/^      virtual OptimizationAlgorithm* construct()$/;"	f	class:g2o::StructureOnlyCreator
createSolver	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only.cpp	/^  static OptimizationAlgorithm* createSolver(const std::string& fullSolverName)$/;"	f	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only.cpp	/^namespace g2o {$/;"	n	file:
structure_only	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only.cpp	/^  G2O_REGISTER_OPTIMIZATION_LIBRARY(structure_only);$/;"	v
G2O_STRUCTURE_ONLY_SOLVER_H	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	29;"	d
StructureOnlySolver	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	/^    StructureOnlySolver()$/;"	f	class:g2o::StructureOnlySolver
StructureOnlySolver	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	/^class StructureOnlySolver : public OptimizationAlgorithm$/;"	c	namespace:g2o
_points	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	/^    OptimizableGraph::VertexContainer _points;$/;"	m	class:g2o::StructureOnlySolver
_verbose	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	/^    bool _verbose;$/;"	m	class:g2o::StructureOnlySolver
calc	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	/^    OptimizationAlgorithm::SolverResult calc(OptimizableGraph::VertexContainer& vertices, int num_iters, int num_max_trials=10)$/;"	f	class:g2o::StructureOnlySolver
computeMarginals	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	/^    virtual bool computeMarginals(SparseBlockMatrix<MatrixXd>&, const std::vector<std::pair<int, int> >&) { return false;}$/;"	f	class:g2o::StructureOnlySolver
g2o	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	/^namespace g2o$/;"	n
init	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	/^    virtual bool init(bool )$/;"	f	class:g2o::StructureOnlySolver
solve	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	/^    virtual OptimizationAlgorithm::SolverResult solve(int iteration, bool online = false)$/;"	f	class:g2o::StructureOnlySolver
updateStructure	trunk/EXTERNAL/g2o/g2o/solvers/structure_only/structure_only_solver.h	/^    virtual bool updateStructure(const std::vector<HyperGraph::Vertex*>& , const HyperGraph::EdgeSet& ) { return true;}$/;"	f	class:g2o::StructureOnlySolver
BG_BLACK	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	35;"	d
BG_BLUE	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	41;"	d
BG_GREEN	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	37;"	d
BG_LIGHTBLUE	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	39;"	d
BG_MAGENTA	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	40;"	d
BG_RED	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	36;"	d
BG_WHITE	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	42;"	d
BG_YELLOW	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	38;"	d
CL_BLACK	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	45;"	d
CL_BLUE	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	51;"	d
CL_GREEN	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	47;"	d
CL_LIGHTBLUE	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	49;"	d
CL_MAGENTA	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	50;"	d
CL_RED	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	46;"	d
CL_WHITE	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	52;"	d
CL_YELLOW	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	48;"	d
FG_BLACK	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	54;"	d
FG_BLUE	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	60;"	d
FG_GREEN	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	56;"	d
FG_LIGHTBLUE	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	58;"	d
FG_MAGENTA	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	59;"	d
FG_NORM	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	63;"	d
FG_RED	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	55;"	d
FG_WHITE	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	61;"	d
FG_YELLOW	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	57;"	d
FT_BOLD	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	31;"	d
FT_UNDERLINE	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	32;"	d
G2O_COLOR_MACROS_H	trunk/EXTERNAL/g2o/g2o/stuff/color_macros.h	28;"	d
CAT_BOOL	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^  CAT_DOUBLE, CAT_FLOAT, CAT_INT, CAT_STRING, CAT_BOOL, CAT_VECTOR_INT, CAT_VECTOR_DOUBLE$/;"	e	enum:g2o::CommandArgumentType	file:
CAT_DOUBLE	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^  CAT_DOUBLE, CAT_FLOAT, CAT_INT, CAT_STRING, CAT_BOOL, CAT_VECTOR_INT, CAT_VECTOR_DOUBLE$/;"	e	enum:g2o::CommandArgumentType	file:
CAT_FLOAT	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^  CAT_DOUBLE, CAT_FLOAT, CAT_INT, CAT_STRING, CAT_BOOL, CAT_VECTOR_INT, CAT_VECTOR_DOUBLE$/;"	e	enum:g2o::CommandArgumentType	file:
CAT_INT	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^  CAT_DOUBLE, CAT_FLOAT, CAT_INT, CAT_STRING, CAT_BOOL, CAT_VECTOR_INT, CAT_VECTOR_DOUBLE$/;"	e	enum:g2o::CommandArgumentType	file:
CAT_STRING	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^  CAT_DOUBLE, CAT_FLOAT, CAT_INT, CAT_STRING, CAT_BOOL, CAT_VECTOR_INT, CAT_VECTOR_DOUBLE$/;"	e	enum:g2o::CommandArgumentType	file:
CAT_VECTOR_DOUBLE	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^  CAT_DOUBLE, CAT_FLOAT, CAT_INT, CAT_STRING, CAT_BOOL, CAT_VECTOR_INT, CAT_VECTOR_DOUBLE$/;"	e	enum:g2o::CommandArgumentType	file:
CAT_VECTOR_INT	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^  CAT_DOUBLE, CAT_FLOAT, CAT_INT, CAT_STRING, CAT_BOOL, CAT_VECTOR_INT, CAT_VECTOR_DOUBLE$/;"	e	enum:g2o::CommandArgumentType	file:
CmpPairFirst	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^struct CmpPairFirst {$/;"	s	namespace:g2o	file:
CommandArgs	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^CommandArgs::CommandArgs()$/;"	f	class:g2o::CommandArgs
CommandArgumentType	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^enum CommandArgumentType$/;"	g	namespace:g2o	file:
arg2str	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^std::string CommandArgs::arg2str(const CommandArgument& ca) const$/;"	f	class:g2o::CommandArgs
convertString	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^bool convertString(const std::string& s, T& x)$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^  bool operator()(const std::pair<T1,T2>& left, const std::pair<T1,T2>& right) {$/;"	f	struct:g2o::CmpPairFirst
operator <<	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^std::ostream& operator<<(std::ostream& os, const std::vector<double>& v)$/;"	f	namespace:g2o
operator <<	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^std::ostream& operator<<(std::ostream& os, const std::vector<int>& v){$/;"	f	namespace:g2o
operator >>	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^std::istream& operator>>(std::istream& is, std::vector<double>& v){$/;"	f	namespace:g2o
operator >>	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^std::istream& operator>>(std::istream& is, std::vector<int>& v){$/;"	f	namespace:g2o
param	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::param(const std::string& name, bool& p, bool defValue, const std::string& desc)$/;"	f	class:g2o::CommandArgs
param	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::param(const std::string& name, double& p, double defValue, const std::string& desc)$/;"	f	class:g2o::CommandArgs
param	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::param(const std::string& name, float& p, float defValue, const std::string& desc)$/;"	f	class:g2o::CommandArgs
param	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::param(const std::string& name, int& p, int defValue, const std::string& desc)$/;"	f	class:g2o::CommandArgs
param	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::param(const std::string& name, std::string& p, const std::string& defValue, const std::string& desc)$/;"	f	class:g2o::CommandArgs
param	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::param(const std::string& name, std::vector<double>& p, const std::vector<double>& defValue, const std::string& desc)$/;"	f	class:g2o::CommandArgs
param	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::param(const std::string& name, std::vector<int>& p, const std::vector<int>& defValue, const std::string& desc){$/;"	f	class:g2o::CommandArgs
paramLeftOver	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::paramLeftOver(const std::string& name, std::string& p, const std::string& defValue, const std::string& desc, bool optional)$/;"	f	class:g2o::CommandArgs
parseArgs	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^bool CommandArgs::parseArgs(int argc, char** argv, bool exitOnError)$/;"	f	class:g2o::CommandArgs
parsedParam	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^bool CommandArgs::parsedParam(const std::string& param) const$/;"	f	class:g2o::CommandArgs
printHelp	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::printHelp(std::ostream& os)$/;"	f	class:g2o::CommandArgs
setBanner	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::setBanner(const std::string& banner)$/;"	f	class:g2o::CommandArgs
str2arg	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^void CommandArgs::str2arg(const std::string& input, CommandArgument& ca) const$/;"	f	class:g2o::CommandArgs
trim	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^std::string CommandArgs::trim(const std::string& s) const$/;"	f	class:g2o::CommandArgs
type2str	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^const char* CommandArgs::type2str(int t) const$/;"	f	class:g2o::CommandArgs
~CommandArgs	trunk/EXTERNAL/g2o/g2o/stuff/command_args.cpp	/^CommandArgs::~CommandArgs()$/;"	f	class:g2o::CommandArgs
CommandArgs	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^class G2O_STUFF_API CommandArgs$/;"	c	namespace:g2o
CommandArgument	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^      CommandArgument() : name(""), description(""), type(0), data(0), parsed(false), optional(false)$/;"	f	struct:g2o::CommandArgs::CommandArgument
CommandArgument	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^    struct CommandArgument$/;"	s	class:g2o::CommandArgs
G2O_COMMAND_ARGS_H	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	28;"	d
_args	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^    std::vector<CommandArgument> _args;$/;"	m	class:g2o::CommandArgs
_banner	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^    std::string _banner;$/;"	m	class:g2o::CommandArgs
_leftOvers	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^    std::vector<CommandArgument> _leftOvers;$/;"	m	class:g2o::CommandArgs
_leftOversOptional	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^    std::vector<CommandArgument> _leftOversOptional;$/;"	m	class:g2o::CommandArgs
_progName	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^    std::string _progName;$/;"	m	class:g2o::CommandArgs
data	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^      void* data;$/;"	m	struct:g2o::CommandArgs::CommandArgument
description	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^      std::string description;$/;"	m	struct:g2o::CommandArgs::CommandArgument
g2o	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^namespace g2o {$/;"	n
getBanner	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^    const std::string& getBanner() const { return _banner; }$/;"	f	class:g2o::CommandArgs
name	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^      std::string name;$/;"	m	struct:g2o::CommandArgs::CommandArgument
optional	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^      bool optional;$/;"	m	struct:g2o::CommandArgs::CommandArgument
parsed	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^      bool parsed;$/;"	m	struct:g2o::CommandArgs::CommandArgument
type	trunk/EXTERNAL/g2o/g2o/stuff/command_args.h	/^      int type;$/;"	m	struct:g2o::CommandArgs::CommandArgument
changeFileExtension	trunk/EXTERNAL/g2o/g2o/stuff/filesys_tools.cpp	/^std::string changeFileExtension(const std::string& filename, const std::string& newExt, bool stripDot)$/;"	f	namespace:g2o
fileExists	trunk/EXTERNAL/g2o/g2o/stuff/filesys_tools.cpp	/^bool fileExists(const char* filename)$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/stuff/filesys_tools.cpp	/^namespace g2o {$/;"	n	file:
getBasename	trunk/EXTERNAL/g2o/g2o/stuff/filesys_tools.cpp	/^std::string getBasename(const std::string& filename)$/;"	f	namespace:g2o
getDirname	trunk/EXTERNAL/g2o/g2o/stuff/filesys_tools.cpp	/^std::string getDirname(const std::string& filename)$/;"	f	namespace:g2o
getFileExtension	trunk/EXTERNAL/g2o/g2o/stuff/filesys_tools.cpp	/^std::string getFileExtension(const std::string& filename)$/;"	f	namespace:g2o
getFilesByPattern	trunk/EXTERNAL/g2o/g2o/stuff/filesys_tools.cpp	/^std::vector<std::string> getFilesByPattern(const char* pattern)$/;"	f	namespace:g2o
getPureFilename	trunk/EXTERNAL/g2o/g2o/stuff/filesys_tools.cpp	/^std::string getPureFilename(const std::string& filename)$/;"	f	namespace:g2o
G2O_FILESYS_TOOLS_H	trunk/EXTERNAL/g2o/g2o/stuff/filesys_tools.h	36;"	d
g2o	trunk/EXTERNAL/g2o/g2o/stuff/filesys_tools.h	/^namespace g2o {$/;"	n
G2O_STUFF_API	trunk/EXTERNAL/g2o/g2o/stuff/g2o_stuff_api.h	20;"	d
G2O_STUFF_API	trunk/EXTERNAL/g2o/g2o/stuff/g2o_stuff_api.h	22;"	d
G2O_STUFF_API	trunk/EXTERNAL/g2o/g2o/stuff/g2o_stuff_api.h	25;"	d
G2O_STUFF_API	trunk/EXTERNAL/g2o/g2o/stuff/g2o_stuff_api.h	30;"	d
G2O_STUFF_API_H	trunk/EXTERNAL/g2o/g2o/stuff/g2o_stuff_api.h	11;"	d
DEG2RAD	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	31;"	d
FIXED	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	128;"	d
G2O_ATTRIBUTE_CONSTRUCTOR	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	40;"	d
G2O_ATTRIBUTE_CONSTRUCTOR	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	74;"	d
G2O_ATTRIBUTE_CONSTRUCTOR	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	97;"	d
G2O_ATTRIBUTE_DEPRECATED	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	102;"	d
G2O_ATTRIBUTE_DEPRECATED	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	48;"	d
G2O_ATTRIBUTE_DEPRECATED	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	84;"	d
G2O_ATTRIBUTE_FORMAT12	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	45;"	d
G2O_ATTRIBUTE_FORMAT12	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	81;"	d
G2O_ATTRIBUTE_FORMAT12	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	99;"	d
G2O_ATTRIBUTE_FORMAT23	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	100;"	d
G2O_ATTRIBUTE_FORMAT23	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	46;"	d
G2O_ATTRIBUTE_FORMAT23	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	82;"	d
G2O_ATTRIBUTE_UNUSED	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	44;"	d
G2O_ATTRIBUTE_UNUSED	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	80;"	d
G2O_ATTRIBUTE_UNUSED	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	98;"	d
G2O_ATTRIBUTE_WARNING	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	101;"	d
G2O_ATTRIBUTE_WARNING	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	47;"	d
G2O_ATTRIBUTE_WARNING	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	83;"	d
G2O_FSKIP_LINE	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	114;"	d
G2O_MACROS_H	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	28;"	d
PVAR	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	118;"	d
PVARA	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	123;"	d
RAD2DEG	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	35;"	d
__PRETTY_FUNCTION__	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	62;"	d
__PRETTY_FUNCTION__	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	95;"	d
g2o_isfinite	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	107;"	d
g2o_isfinite	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	53;"	d
g2o_isfinite	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	57;"	d
g2o_isfinite	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	90;"	d
g2o_isinf	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	106;"	d
g2o_isinf	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	52;"	d
g2o_isinf	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	56;"	d
g2o_isinf	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	89;"	d
g2o_isnan	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	105;"	d
g2o_isnan	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	51;"	d
g2o_isnan	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	55;"	d
g2o_isnan	trunk/EXTERNAL/g2o/g2o/stuff/macros.h	88;"	d
ForceLinkFunction	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^    typedef void (* ForceLinkFunction) (void);$/;"	t
ForceLinker	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^    ForceLinker(ForceLinkFunction function) { (function)(); }$/;"	f	struct:g2o::ForceLinker
ForceLinker	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^struct ForceLinker$/;"	s	namespace:g2o
G2O_STUFF_MISC_H	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	28;"	d
M_PI	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	34;"	d
arrayHasNaN	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline bool arrayHasNaN(const double* array, int size, int* nanIndex = 0)$/;"	f	namespace:g2o
average_angle	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline double average_angle(double theta1, double theta2)$/;"	f	namespace:g2o
clamp	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline T clamp(T l, T x, T u) $/;"	f	namespace:g2o
deg2rad	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline double deg2rad(double degree)$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^namespace g2o {$/;"	n
hypot	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline T hypot(T x, T y)$/;"	f	namespace:g2o
hypot_sqr	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline T hypot_sqr(T x, T y)$/;"	f	namespace:g2o
inverse_theta	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline double inverse_theta(double th)$/;"	f	namespace:g2o
normalize_theta	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline double normalize_theta(double theta)$/;"	f	namespace:g2o
rad2deg	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline double rad2deg(double rad)$/;"	f	namespace:g2o
sign	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline int sign(T x)$/;"	f	namespace:g2o
square	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline T square(T x)$/;"	f	namespace:g2o
wrap	trunk/EXTERNAL/g2o/g2o/stuff/misc.h	/^inline T wrap(T l, T x, T u) $/;"	f	namespace:g2o
GLUWrapper	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^    GLUWrapper()$/;"	f	class:g2o::opengl::GLUWrapper
GLUWrapper	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^class GLUWrapper$/;"	c	namespace:g2o::opengl	file:
_quadratic	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^    GLUquadricObj* _quadratic;;$/;"	m	class:g2o::opengl::GLUWrapper	file:
drawArrow2D	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawArrow2D(float len, float head_width, float head_len)$/;"	f	namespace:g2o::opengl
drawBox	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawBox(GLfloat l, GLfloat w, GLfloat h)$/;"	f	namespace:g2o::opengl
drawCone	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawCone(GLfloat radius, GLfloat height)$/;"	f	namespace:g2o::opengl
drawCylinder	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawCylinder(GLfloat radius, GLfloat height)$/;"	f	namespace:g2o::opengl
drawDisk	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawDisk(GLfloat radius)$/;"	f	namespace:g2o::opengl
drawEllipsoid	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawEllipsoid(GLfloat r1, GLfloat r2, GLfloat r3)$/;"	f	namespace:g2o::opengl
drawPlane	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawPlane(GLfloat l, GLfloat w)$/;"	f	namespace:g2o::opengl
drawPoseBox	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawPoseBox()$/;"	f	namespace:g2o::opengl
drawPyramid	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawPyramid(GLfloat length, GLfloat height)$/;"	f	namespace:g2o::opengl
drawRangeRing	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawRangeRing(GLfloat range, GLfloat fov, GLfloat range_width)$/;"	f	namespace:g2o::opengl
drawSlice	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawSlice(GLfloat radius, GLfloat height, GLfloat fov, int slices_per_circle)$/;"	f	namespace:g2o::opengl
drawSphere	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^void drawSphere(GLfloat radius)$/;"	f	namespace:g2o::opengl
g2o	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^namespace g2o {$/;"	n	file:
getQuadradic	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^    static GLUquadricObj* getQuadradic()$/;"	f	class:g2o::opengl::GLUWrapper
opengl	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^namespace opengl {$/;"	n	namespace:g2o	file:
~GLUWrapper	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.cpp	/^    ~GLUWrapper()$/;"	f	class:g2o::opengl::GLUWrapper
G2O_OPENGL_API	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.h	36;"	d
G2O_OPENGL_API	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.h	38;"	d
G2O_OPENGL_API	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.h	41;"	d
G2O_OPENGL_API	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.h	44;"	d
G2O_OPENGL_PRIMITIVES_H	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.h	20;"	d
g2o	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.h	/^namespace g2o {$/;"	n
opengl	trunk/EXTERNAL/g2o/g2o/stuff/opengl_primitives.h	/^namespace opengl {$/;"	n	namespace:g2o
G2O_OPENGL_WRAPPER_H	trunk/EXTERNAL/g2o/g2o/stuff/opengl_wrapper.h	2;"	d
vasprintf	trunk/EXTERNAL/g2o/g2o/stuff/os_specific.c	/^int vasprintf(char** strp, const char* fmt, va_list ap)$/;"	f
G2O_OS_SPECIFIC_HH_	trunk/EXTERNAL/g2o/g2o/stuff/os_specific.h	28;"	d
drand48	trunk/EXTERNAL/g2o/g2o/stuff/os_specific.h	37;"	d
BaseProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.cpp	/^  BaseProperty::BaseProperty(const std::string name_) :_name(name_){$/;"	f	class:g2o::BaseProperty
addProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.cpp	/^  bool PropertyMap::addProperty(BaseProperty* p) {$/;"	f	class:g2o::PropertyMap
eraseProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.cpp	/^  bool PropertyMap::eraseProperty(const std::string& name) {$/;"	f	class:g2o::PropertyMap
g2o	trunk/EXTERNAL/g2o/g2o/stuff/property.cpp	/^namespace g2o {$/;"	n	file:
updateMapFromString	trunk/EXTERNAL/g2o/g2o/stuff/property.cpp	/^  bool PropertyMap::updateMapFromString(const std::string& values)$/;"	f	class:g2o::PropertyMap
updatePropertyFromString	trunk/EXTERNAL/g2o/g2o/stuff/property.cpp	/^  bool PropertyMap::updatePropertyFromString(const std::string& name, const std::string& value)$/;"	f	class:g2o::PropertyMap
writeToCSV	trunk/EXTERNAL/g2o/g2o/stuff/property.cpp	/^  void PropertyMap::writeToCSV(std::ostream& os) const$/;"	f	class:g2o::PropertyMap
~BaseProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.cpp	/^  BaseProperty::~BaseProperty(){}$/;"	f	class:g2o::BaseProperty
~PropertyMap	trunk/EXTERNAL/g2o/g2o/stuff/property.cpp	/^  PropertyMap::~PropertyMap() {$/;"	f	class:g2o::PropertyMap
BaseClass	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      typedef std::map<std::string, BaseProperty*>        BaseClass;$/;"	t	class:g2o::PropertyMap
BaseProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^  class G2O_STUFF_API BaseProperty {$/;"	c	namespace:g2o
BoolProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^  typedef Property<bool> BoolProperty;$/;"	t	namespace:g2o
DoubleProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^  typedef Property<double> DoubleProperty;$/;"	t	namespace:g2o
FloatProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^  typedef Property<float> FloatProperty;$/;"	t	namespace:g2o
G2O_PROPERTY_H_	trunk/EXTERNAL/g2o/g2o/stuff/property.h	28;"	d
IntProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^  typedef Property<int> IntProperty;$/;"	t	namespace:g2o
Property	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      Property(const std::string& name_): BaseProperty(name_){}$/;"	f	class:g2o::Property
Property	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      Property(const std::string& name_, const T& v): BaseProperty(name_), _value(v){}$/;"	f	class:g2o::Property
Property	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^  class Property: public BaseProperty {$/;"	c	namespace:g2o
PropertyMap	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^  class G2O_STUFF_API PropertyMap : protected std::map<std::string, BaseProperty*>$/;"	c	namespace:g2o
PropertyMapConstIterator	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      typedef BaseClass::const_iterator                   PropertyMapConstIterator;$/;"	t	class:g2o::PropertyMap
PropertyMapIterator	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      typedef BaseClass::iterator                         PropertyMapIterator;$/;"	t	class:g2o::PropertyMap
StringProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^  typedef Property<std::string> StringProperty;$/;"	t	namespace:g2o
ValueType	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      typedef T ValueType;$/;"	t	class:g2o::Property
_name	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      std::string _name;$/;"	m	class:g2o::BaseProperty
_value	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      T _value;$/;"	m	class:g2o::Property
fromString	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      virtual bool fromString(const std::string& s)$/;"	f	class:g2o::Property
g2o	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^namespace g2o {$/;"	n
getProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      P* getProperty(const std::string& name_)$/;"	f	class:g2o::PropertyMap
getProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      const P* getProperty(const std::string& name_) const$/;"	f	class:g2o::PropertyMap
makeProperty	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      P* makeProperty(const std::string& name_, const typename P::ValueType& v)$/;"	f	class:g2o::PropertyMap
name	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      const std::string& name() {return _name;}$/;"	f	class:g2o::BaseProperty
setValue	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      void setValue(const T& v) {_value = v; }$/;"	f	class:g2o::Property
toString	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      virtual std::string toString() const$/;"	f	class:g2o::Property
value	trunk/EXTERNAL/g2o/g2o/stuff/property.h	/^      const T& value() const {return _value;}$/;"	f	class:g2o::Property
_gen_real	trunk/EXTERNAL/g2o/g2o/stuff/sampler.cpp	/^  static std::tr1::ranlux_base_01* _gen_real = new std::tr1::ranlux_base_01;$/;"	v	file:
_uniformReal	trunk/EXTERNAL/g2o/g2o/stuff/sampler.cpp	/^  static std::tr1::uniform_real<double> _uniformReal;$/;"	v	file:
g2o	trunk/EXTERNAL/g2o/g2o/stuff/sampler.cpp	/^namespace g2o {$/;"	n	file:
sampleGaussian	trunk/EXTERNAL/g2o/g2o/stuff/sampler.cpp	/^  double sampleGaussian(std::tr1::ranlux_base_01* generator){$/;"	f	namespace:g2o
sampleUniform	trunk/EXTERNAL/g2o/g2o/stuff/sampler.cpp	/^  double sampleUniform(double min, double max, std::tr1::ranlux_base_01* generator){$/;"	f	namespace:g2o
G2O_GAUSSIAN_SAMPLER_	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	28;"	d
GaussianSampler	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^    GaussianSampler(bool hasGenerator=true){$/;"	f	class:g2o::GaussianSampler
GaussianSampler	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^  class GaussianSampler {$/;"	c	namespace:g2o
Sampler	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^  class G2O_STUFF_API Sampler$/;"	c	namespace:g2o
_cholesky	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^    CovarianceType _cholesky;$/;"	m	class:g2o::GaussianSampler
_generator	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^    std::tr1::ranlux_base_01* _generator;$/;"	m	class:g2o::GaussianSampler
g2o	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^namespace g2o {$/;"	n
gaussRand	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^      static double gaussRand(double mean, double sigma)$/;"	f	class:g2o::Sampler
generateSample	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^    SampleType generateSample() {$/;"	f	class:g2o::GaussianSampler
seedRand	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^      static void seedRand()$/;"	f	class:g2o::Sampler
seedRand	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^      static void seedRand(unsigned int seed)$/;"	f	class:g2o::Sampler
setDistribution	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^    void setDistribution(const CovarianceType& cov){$/;"	f	class:g2o::GaussianSampler
uniformRand	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^      static double uniformRand(double lowerBndr, double upperBndr)$/;"	f	class:g2o::Sampler
~GaussianSampler	trunk/EXTERNAL/g2o/g2o/stuff/sampler.h	/^    ~GaussianSampler() {$/;"	f	class:g2o::GaussianSampler
G2O_SCOPED_POINTER_H	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	28;"	d
ScopedArray	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      ScopedArray(T* t = 0) : _pointer(t) {}$/;"	f	class:g2o::ScopedArray
ScopedArray	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^  class ScopedArray$/;"	c	namespace:g2o
ScopedPointer	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      ScopedPointer(T* t = 0) : _pointer(t) {}$/;"	f	class:g2o::ScopedPointer
ScopedPointer	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^  class ScopedPointer $/;"	c	namespace:g2o
ScopedPointerDeleter	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^    struct ScopedPointerDeleter$/;"	s	namespace:g2o::<anonymous>
_pointer	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      T* _pointer;$/;"	m	class:g2o::ScopedArray
_pointer	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      T* _pointer;$/;"	m	class:g2o::ScopedPointer
g2o	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^namespace g2o {$/;"	n
get	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      T* get() const { return _pointer;}$/;"	f	class:g2o::ScopedArray
get	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      T* get() const { return _pointer;}$/;"	f	class:g2o::ScopedPointer
operator ()	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      void operator()(T* t) { delete t;}$/;"	f	struct:g2o::<anonymous>::ScopedPointerDeleter
operator *	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      T& operator*() const { return *_pointer;}$/;"	f	class:g2o::ScopedPointer
operator ->	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      T* operator->() const { return _pointer;}$/;"	f	class:g2o::ScopedPointer
operator []	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      T & operator[](std::ptrdiff_t i) const$/;"	f	class:g2o::ScopedArray
reset	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      void reset(T* p)$/;"	f	class:g2o::ScopedArray
reset	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      void reset(T* p)$/;"	f	class:g2o::ScopedPointer
swap	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      void swap(ScopedArray & b)$/;"	f	class:g2o::ScopedArray
swap	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      void swap(ScopedPointer& b)$/;"	f	class:g2o::ScopedPointer
~ScopedArray	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      ~ScopedArray()$/;"	f	class:g2o::ScopedArray
~ScopedPointer	trunk/EXTERNAL/g2o/g2o/stuff/scoped_pointer.h	/^      ~ScopedPointer()$/;"	f	class:g2o::ScopedPointer
TripletColSort	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.cpp	/^    struct TripletColSort$/;"	s	namespace:g2o::<anonymous>	file:
TripletEntry	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.cpp	/^      TripletEntry(int r_, int c_, double x_) : r(r_), c(c_), x(x_) {}$/;"	f	struct:g2o::<anonymous>::TripletEntry
TripletEntry	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.cpp	/^    struct TripletEntry$/;"	s	namespace:g2o::<anonymous>	file:
c	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.cpp	/^      int r, c;$/;"	m	struct:g2o::<anonymous>::TripletEntry	file:
g2o	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.cpp	/^      bool operator()(const TripletEntry& e1, const TripletEntry& e2) const$/;"	f	struct:g2o::<anonymous>::TripletColSort
r	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.cpp	/^      int r, c;$/;"	m	struct:g2o::<anonymous>::TripletEntry	file:
writeCCSMatrix	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.cpp	/^  bool writeCCSMatrix(const string& filename, int rows, int cols, const int* Ap, const int* Ai, const double* Ax, bool upperTriangleSymmetric)$/;"	f	namespace:g2o
writeVector	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.cpp	/^  bool writeVector(const string& filename, const double*v, int n)$/;"	f	namespace:g2o
x	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.cpp	/^      double x;$/;"	m	struct:g2o::<anonymous>::TripletEntry	file:
G2O_SPARSE_HELPER_H	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.h	28;"	d
g2o	trunk/EXTERNAL/g2o/g2o/stuff/sparse_helper.h	/^namespace g2o {$/;"	n
formatString	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^std::string formatString(const char* fmt, ...)$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^namespace g2o {$/;"	n	file:
readLine	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^int readLine(std::istream& is, std::stringstream& currentLine)$/;"	f	namespace:g2o
strEndsWith	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^bool strEndsWith(const std::string& s, const std::string& end)$/;"	f	namespace:g2o
strExpandFilename	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^std::string strExpandFilename(const std::string& filename)$/;"	f	namespace:g2o
strPrintf	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^int strPrintf(std::string& str, const char* fmt, ...)$/;"	f	namespace:g2o
strSplit	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^std::vector<std::string> strSplit(const std::string& str, const std::string& delimiters)$/;"	f	namespace:g2o
strStartsWith	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^bool strStartsWith(const std::string& s, const std::string& start)$/;"	f	namespace:g2o
strToLower	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^std::string strToLower(const std::string& s)$/;"	f	namespace:g2o
strToUpper	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^std::string strToUpper(const std::string& s)$/;"	f	namespace:g2o
trim	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^std::string trim(const std::string& s)$/;"	f	namespace:g2o
trimLeft	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^std::string trimLeft(const std::string& s)$/;"	f	namespace:g2o
trimRight	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.cpp	/^std::string trimRight(const std::string& s)$/;"	f	namespace:g2o
G2O_STRING_TOOLS_H	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.h	28;"	d
convertString	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.h	/^bool convertString(const std::string& s, T& x, bool failIfLeftoverChars = true)$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.h	/^namespace g2o {$/;"	n
readFloats	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.h	/^OutputIterator readFloats(const char* str, OutputIterator out)$/;"	f	namespace:g2o
readInts	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.h	/^OutputIterator readInts(const char* str, OutputIterator out)$/;"	f	namespace:g2o
stringToType	trunk/EXTERNAL/g2o/g2o/stuff/string_tools.h	/^T stringToType(const std::string& s, bool failIfLeftoverChars = true)$/;"	f	namespace:g2o
ScopedTictoc	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^  ScopedTictoc::ScopedTictoc(const char* algorithmPart) :$/;"	f	class:g2o::ScopedTictoc
TicTocElement	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    TicTocElement() :$/;"	f	struct:g2o::TicTocElement
TicTocElement	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^  struct TicTocElement$/;"	s	namespace:g2o	file:
TicTocInitializer	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    TicTocInitializer()$/;"	f	struct:g2o::TicTocInitializer
TicTocInitializer	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^  struct TicTocInitializer$/;"	s	namespace:g2o	file:
TicTocMap	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^  typedef std::map<std::string, TicTocElement> TicTocMap;$/;"	t	namespace:g2o	file:
algorithmPart	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    std::string algorithmPart;              \/\/\/< name \/ description of the code block$/;"	m	struct:g2o::TicTocElement	file:
clockIsRunning	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    bool clockIsRunning;$/;"	m	struct:g2o::TicTocElement	file:
enabled	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    bool enabled;$/;"	m	struct:g2o::TicTocInitializer	file:
exponentialMovingAverage	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    double exponentialMovingAverage;        \/\/\/< exponential moving average with alpha = 0.01$/;"	m	struct:g2o::TicTocElement	file:
g2o	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^namespace g2o {$/;"	n	file:
maxTime	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    double maxTime;$/;"	m	struct:g2o::TicTocElement	file:
minTime	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    double minTime;$/;"	m	struct:g2o::TicTocElement	file:
numCalls	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    int numCalls;                           \/\/\/< the number of calls$/;"	m	struct:g2o::TicTocElement	file:
operator <	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    bool operator<(const TicTocElement& other) const$/;"	f	struct:g2o::TicTocElement
ticTime	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    double ticTime;                         \/\/\/< the time of the last tic$/;"	m	struct:g2o::TicTocElement	file:
tictoc	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^  double tictoc(const char* algorithmPart)$/;"	f	namespace:g2o
tictocElements	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    TicTocMap tictocElements;$/;"	m	struct:g2o::TicTocInitializer	file:
totalTime	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    double totalTime;                       \/\/\/< the total time of this part of the algorithm$/;"	m	struct:g2o::TicTocElement	file:
~ScopedTictoc	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^  ScopedTictoc::~ScopedTictoc()$/;"	f	class:g2o::ScopedTictoc
~TicTocInitializer	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.cpp	/^    ~TicTocInitializer()$/;"	f	struct:g2o::TicTocInitializer
G2O_SCOPED_TICTOC	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.h	71;"	d
G2O_TICTOC_H	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.h	28;"	d
ScopedTictoc	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.h	/^   class G2O_STUFF_API ScopedTictoc$/;"	c	namespace:g2o
_algorithmPart	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.h	/^       std::string _algorithmPart;$/;"	m	class:g2o::ScopedTictoc
g2o	trunk/EXTERNAL/g2o/g2o/stuff/tictoc.h	/^namespace g2o {$/;"	n
DELTA_EPOCH_IN_MICROSECS	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.cpp	43;"	d	file:
DELTA_EPOCH_IN_MICROSECS	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.cpp	45;"	d	file:
ScopeTime	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.cpp	/^ScopeTime::ScopeTime(const char* title) : _title(title), _startTime(get_monotonic_time()) {}$/;"	f	class:g2o::ScopeTime
g2o	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.cpp	/^namespace g2o {$/;"	n	file:
get_monotonic_time	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.cpp	/^double get_monotonic_time()$/;"	f	namespace:g2o
gettimeofday	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.cpp	/^int gettimeofday(struct timeval *tv, struct timezone *tz)$/;"	f	namespace:g2o
timezone	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.cpp	/^struct timezone$/;"	s	namespace:g2o	file:
tz_dsttime	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.cpp	/^  int  tz_dsttime;     \/* type of dst correction *\/$/;"	m	struct:g2o::timezone	file:
tz_minuteswest	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.cpp	/^  int  tz_minuteswest; \/* minutes W of Greenwich *\/$/;"	m	struct:g2o::timezone	file:
~ScopeTime	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.cpp	/^ScopeTime::~ScopeTime() {$/;"	f	class:g2o::ScopeTime
DO_EVERY	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	66;"	d
DO_EVERY_TS	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	50;"	d
G2O_TIMEUTIL_H	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	28;"	d
MEASURE_FUNCTION_TIME	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	127;"	d
MEASURE_TIME	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	70;"	d
ScopeTime	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	/^class G2O_STUFF_API ScopeTime {$/;"	c	namespace:g2o
_startTime	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	/^    double _startTime;$/;"	m	class:g2o::ScopeTime
_title	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	/^    std::string _title;$/;"	m	class:g2o::ScopeTime
g2o	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	/^namespace g2o {$/;"	n
get_time	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	/^inline double get_time() $/;"	f	namespace:g2o
timeval	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	/^typedef struct timeval {$/;"	s	namespace:g2o
timeval	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	/^} timeval;$/;"	t	namespace:g2o
tv_sec	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	/^  long tv_sec;$/;"	m	struct:g2o::timeval
tv_usec	trunk/EXTERNAL/g2o/g2o/stuff/timeutil.h	/^  long tv_usec;$/;"	m	struct:g2o::timeval
G2O_UNSCENTED_	trunk/EXTERNAL/g2o/g2o/stuff/unscented.h	28;"	d
SigmaPoint	trunk/EXTERNAL/g2o/g2o/stuff/unscented.h	/^    SigmaPoint(): _wi(0), _wp(0) {}$/;"	f	struct:g2o::SigmaPoint
SigmaPoint	trunk/EXTERNAL/g2o/g2o/stuff/unscented.h	/^    SigmaPoint(const SampleType& sample, double wi, double wp):$/;"	f	struct:g2o::SigmaPoint
SigmaPoint	trunk/EXTERNAL/g2o/g2o/stuff/unscented.h	/^  struct SigmaPoint {$/;"	s	namespace:g2o
_sample	trunk/EXTERNAL/g2o/g2o/stuff/unscented.h	/^    SampleType _sample;$/;"	m	struct:g2o::SigmaPoint
_wi	trunk/EXTERNAL/g2o/g2o/stuff/unscented.h	/^    double _wi;$/;"	m	struct:g2o::SigmaPoint
_wp	trunk/EXTERNAL/g2o/g2o/stuff/unscented.h	/^    double _wp;$/;"	m	struct:g2o::SigmaPoint
g2o	trunk/EXTERNAL/g2o/g2o/stuff/unscented.h	/^namespace g2o {$/;"	n
reconstructGaussian	trunk/EXTERNAL/g2o/g2o/stuff/unscented.h	/^  void reconstructGaussian(SampleType& mean, CovarianceType& covariance, const std::vector<SigmaPoint<SampleType> >& sigmaPoints){$/;"	f	namespace:g2o
sampleUnscented	trunk/EXTERNAL/g2o/g2o/stuff/unscented.h	/^  bool sampleUnscented(std::vector<SigmaPoint <SampleType> >& sigmaPoints, const SampleType& mean, const CovarianceType& covariance){$/;"	f	namespace:g2o
DataQueue	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.cpp	/^  DataQueue::DataQueue()$/;"	f	class:g2o::DataQueue
add	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.cpp	/^  void DataQueue::add(RobotData* rd)$/;"	f	class:g2o::DataQueue
after	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.cpp	/^  RobotData* DataQueue::after(double timestamp) const$/;"	f	class:g2o::DataQueue
before	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.cpp	/^  RobotData* DataQueue::before(double timestamp) const$/;"	f	class:g2o::DataQueue
findClosestData	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.cpp	/^  RobotData* DataQueue::findClosestData(double timestamp) const$/;"	f	class:g2o::DataQueue
g2o	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.cpp	/^namespace g2o {$/;"	n	file:
~DataQueue	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.cpp	/^  DataQueue::~DataQueue()$/;"	f	class:g2o::DataQueue
Buffer	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.h	/^      typedef std::map<double, RobotData*>           Buffer;$/;"	t	class:g2o::DataQueue
DataQueue	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.h	/^  class G2O_TYPES_DATA_API DataQueue$/;"	c	namespace:g2o
G2O_DATA_QUEUE_H	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.h	28;"	d
_buffer	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.h	/^      Buffer _buffer;$/;"	m	class:g2o::DataQueue
buffer	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.h	/^      const Buffer& buffer() const {return _buffer;}$/;"	f	class:g2o::DataQueue
g2o	trunk/EXTERNAL/g2o/g2o/types/data/data_queue.h	/^namespace g2o {$/;"	n
G2O_TYPES_DATA_API	trunk/EXTERNAL/g2o/g2o/types/data/g2o_types_data_api.h	19;"	d
G2O_TYPES_DATA_API	trunk/EXTERNAL/g2o/g2o/types/data/g2o_types_data_api.h	21;"	d
G2O_TYPES_DATA_API	trunk/EXTERNAL/g2o/g2o/types/data/g2o_types_data_api.h	24;"	d
G2O_TYPES_DATA_API	trunk/EXTERNAL/g2o/g2o/types/data/g2o_types_data_api.h	29;"	d
G2O_TYPES_DATA_API_H	trunk/EXTERNAL/g2o/g2o/types/data/g2o_types_data_api.h	11;"	d
LaserParameters	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.cpp	/^  LaserParameters::LaserParameters(int nbeams, double _firstBeamAngle, double _angularStep, double _maxRange)$/;"	f	class:g2o::LaserParameters
LaserParameters	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.cpp	/^  LaserParameters::LaserParameters(int t, int nbeams, double _firstBeamAngle, double _angularStep, double _maxRange, double _accuracy, int _remissionMode)$/;"	f	class:g2o::LaserParameters
g2o	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.cpp	/^namespace g2o {$/;"	n	file:
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	struct:g2o::LaserParameters
G2O_LASER_PARAMETERS_H	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	28;"	d
LaserParameters	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^  struct G2O_TYPES_DATA_API LaserParameters$/;"	s	namespace:g2o
accuracy	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^    double accuracy;$/;"	m	struct:g2o::LaserParameters
angularStep	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^    double angularStep;$/;"	m	struct:g2o::LaserParameters
firstBeamAngle	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^    double firstBeamAngle;$/;"	m	struct:g2o::LaserParameters
fov	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^    double fov;$/;"	m	struct:g2o::LaserParameters
g2o	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^namespace g2o {$/;"	n
laserPose	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^    SE2 laserPose;$/;"	m	struct:g2o::LaserParameters
maxRange	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^    double maxRange;$/;"	m	struct:g2o::LaserParameters
remissionMode	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^    int remissionMode;$/;"	m	struct:g2o::LaserParameters
type	trunk/EXTERNAL/g2o/g2o/types/data/laser_parameters.h	/^    int type;$/;"	m	struct:g2o::LaserParameters
RawLaser	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.cpp	/^  RawLaser::RawLaser() :$/;"	f	class:g2o::RawLaser
cartesian	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.cpp	/^  RawLaser::Point2DVector RawLaser::cartesian() const$/;"	f	class:g2o::RawLaser
g2o	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.cpp	/^  bool RawLaser::read(std::istream& is)$/;"	f	class:g2o::RawLaser
setLaserParams	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.cpp	/^  void RawLaser::setLaserParams(const LaserParameters& laserParams)$/;"	f	class:g2o::RawLaser
setRanges	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.cpp	/^  void RawLaser::setRanges(const vector<double>& ranges)$/;"	f	class:g2o::RawLaser
setRemissions	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.cpp	/^  void RawLaser::setRemissions(const std::vector<double>& remissions)$/;"	f	class:g2o::RawLaser
write	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.cpp	/^  bool RawLaser::write(std::ostream& \/*os*\/) const$/;"	f	class:g2o::RawLaser
~RawLaser	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.cpp	/^  RawLaser::~RawLaser()$/;"	f	class:g2o::RawLaser
G2O_RAW_LASER_H	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.h	28;"	d
Point2DVector	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.h	/^      typedef std::vector<Eigen::Vector2d, Eigen::aligned_allocator<Eigen::Vector2d> >      Point2DVector;$/;"	t	class:g2o::RawLaser
RawLaser	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.h	/^  class G2O_TYPES_DATA_API RawLaser : public RobotData {$/;"	c	namespace:g2o
_laserParams	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.h	/^      LaserParameters _laserParams;$/;"	m	class:g2o::RawLaser
_ranges	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.h	/^      std::vector<double> _ranges;$/;"	m	class:g2o::RawLaser
_remissions	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.h	/^      std::vector<double> _remissions;$/;"	m	class:g2o::RawLaser
g2o	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.h	/^namespace g2o {$/;"	n
laserParams	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.h	/^      const LaserParameters& laserParams() const { return _laserParams;}$/;"	f	class:g2o::RawLaser
ranges	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.h	/^      const std::vector<double>& ranges() const { return _ranges;}$/;"	f	class:g2o::RawLaser
remissions	trunk/EXTERNAL/g2o/g2o/types/data/raw_laser.h	/^      const std::vector<double>& remissions() const { return _remissions;}$/;"	f	class:g2o::RawLaser
RobotData	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.cpp	/^  RobotData::RobotData() :$/;"	f	class:g2o::RobotData
g2o	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.cpp	/^namespace g2o {$/;"	n	file:
setHostname	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.cpp	/^  void RobotData::setHostname(const std::string& hostname)$/;"	f	class:g2o::RobotData
setLoggerTimestamp	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.cpp	/^  void RobotData::setLoggerTimestamp(double ts)$/;"	f	class:g2o::RobotData
setTag	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.cpp	/^  void RobotData::setTag(const std::string& tag)$/;"	f	class:g2o::RobotData
setTimestamp	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.cpp	/^  void RobotData::setTimestamp(double ts)$/;"	f	class:g2o::RobotData
~RobotData	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.cpp	/^  RobotData::~RobotData()$/;"	f	class:g2o::RobotData
G2O_ROBOT_DATA_H	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	28;"	d
RobotData	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	/^  class G2O_TYPES_DATA_API RobotData : public OptimizableGraph::Data$/;"	c	namespace:g2o
_hostname	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	/^      std::string _hostname; \/\/\/< name of the computer\/robot generating the data$/;"	m	class:g2o::RobotData
_loggerTimestamp	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	/^      double _loggerTimestamp; \/\/\/< timestamp when the measurement was recorded$/;"	m	class:g2o::RobotData
_tag	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	/^      std::string _tag; \/\/\/< string tag (FLASER, ROBOTLASER, ODOM..) of the line in the log$/;"	m	class:g2o::RobotData
_timestamp	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	/^      double _timestamp; \/\/\/< timestamp when the measurement was generated$/;"	m	class:g2o::RobotData
g2o	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	/^namespace g2o {$/;"	n
hostname	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	/^      const std::string& hostname() const { return _hostname;}$/;"	f	class:g2o::RobotData
loggerTimestamp	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	/^      double loggerTimestamp() const { return _loggerTimestamp;}$/;"	f	class:g2o::RobotData
tag	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	/^      const std::string& tag() const { return _tag;}$/;"	f	class:g2o::RobotData
timestamp	trunk/EXTERNAL/g2o/g2o/types/data/robot_data.h	/^      double timestamp() const { return _timestamp;}$/;"	f	class:g2o::RobotData
RobotLaser	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.cpp	/^  RobotLaser::RobotLaser() :$/;"	f	class:g2o::RobotLaser
RobotLaserDrawAction	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.cpp	/^  RobotLaserDrawAction::RobotLaserDrawAction(): DrawAction(typeid(RobotLaser).name()){$/;"	f	class:g2o::RobotLaserDrawAction
g2o	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.cpp	/^  HyperGraphElementAction* RobotLaserDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::RobotLaserDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.cpp	/^  bool RobotLaser::read(std::istream& is)$/;"	f	class:g2o::RobotLaser
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.cpp	/^  bool RobotLaserDrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::RobotLaserDrawAction
setOdomPose	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.cpp	/^  void RobotLaser::setOdomPose(const SE2& odomPose)$/;"	f	class:g2o::RobotLaser
write	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.cpp	/^  bool RobotLaser::write(std::ostream& os) const$/;"	f	class:g2o::RobotLaser
~RobotLaser	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.cpp	/^  RobotLaser::~RobotLaser()$/;"	f	class:g2o::RobotLaser
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::RobotLaser
G2O_ROBOT_LASER_H	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	28;"	d
RobotLaser	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^  class G2O_TYPES_DATA_API RobotLaser : public RawLaser$/;"	c	namespace:g2o
RobotLaserDrawAction	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^  class G2O_TYPES_DATA_API RobotLaserDrawAction: public DrawAction{$/;"	c	namespace:g2o
_beamsDownsampling	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^    IntProperty* _beamsDownsampling;$/;"	m	class:g2o::RobotLaserDrawAction
_forwardSafetyDist	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^      double _laserTv, _laserRv, _forwardSafetyDist, _sideSaftyDist, _turnAxis;$/;"	m	class:g2o::RobotLaser
_laserRv	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^      double _laserTv, _laserRv, _forwardSafetyDist, _sideSaftyDist, _turnAxis;$/;"	m	class:g2o::RobotLaser
_laserTv	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^      double _laserTv, _laserRv, _forwardSafetyDist, _sideSaftyDist, _turnAxis;$/;"	m	class:g2o::RobotLaser
_maxRange	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^    FloatProperty* _maxRange;$/;"	m	class:g2o::RobotLaserDrawAction
_odomPose	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^      SE2 _odomPose;$/;"	m	class:g2o::RobotLaser
_pointSize	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^    FloatProperty* _pointSize;$/;"	m	class:g2o::RobotLaserDrawAction
_sideSaftyDist	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^      double _laserTv, _laserRv, _forwardSafetyDist, _sideSaftyDist, _turnAxis;$/;"	m	class:g2o::RobotLaser
_turnAxis	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^      double _laserTv, _laserRv, _forwardSafetyDist, _sideSaftyDist, _turnAxis;$/;"	m	class:g2o::RobotLaser
g2o	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^namespace g2o {$/;"	n
laserPose	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^      SE2 laserPose() const { return _odomPose * _laserParams.laserPose;} $/;"	f	class:g2o::RobotLaser
odomPose	trunk/EXTERNAL/g2o/g2o/types/data/robot_laser.h	/^      const SE2& odomPose() const { return _odomPose;}$/;"	f	class:g2o::RobotLaser
RobotLaserDrawAction	trunk/EXTERNAL/g2o/g2o/types/data/types_data.cpp	/^  G2O_REGISTER_ACTION(RobotLaserDrawAction);$/;"	v
VertexTagDrawAction	trunk/EXTERNAL/g2o/g2o/types/data/types_data.cpp	/^  G2O_REGISTER_ACTION(VertexTagDrawAction);$/;"	v
data	trunk/EXTERNAL/g2o/g2o/types/data/types_data.cpp	/^  G2O_REGISTER_TYPE_GROUP(data);$/;"	v
g2o	trunk/EXTERNAL/g2o/g2o/types/data/types_data.cpp	/^namespace g2o {$/;"	n	file:
G2O_TYPES_DATA_H	trunk/EXTERNAL/g2o/g2o/types/data/types_data.h	28;"	d
VertexTag	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.cpp	/^  VertexTag::VertexTag() : RobotData()$/;"	f	class:g2o::VertexTag
VertexTagDrawAction	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.cpp	/^  VertexTagDrawAction::VertexTagDrawAction(): DrawAction(typeid(VertexTag).name()){$/;"	f	class:g2o::VertexTagDrawAction
g2o	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.cpp	/^  HyperGraphElementAction* VertexTagDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::VertexTagDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.cpp	/^  bool VertexTag::read(std::istream& is)$/;"	f	class:g2o::VertexTag
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.cpp	/^  bool VertexTagDrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::VertexTagDrawAction
write	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.cpp	/^  bool VertexTag::write(std::ostream& os) const$/;"	f	class:g2o::VertexTag
~VertexTag	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.cpp	/^  VertexTag::~VertexTag()$/;"	f	class:g2o::VertexTag
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::VertexTag
G2O_VERTEX_TAG_H	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	28;"	d
VertexTag	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^  class G2O_TYPES_DATA_API VertexTag : public RobotData$/;"	c	namespace:g2o
VertexTagDrawAction	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^  class G2O_TYPES_DATA_API VertexTagDrawAction: public DrawAction{$/;"	c	namespace:g2o
_name	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^      std::string _name;$/;"	m	class:g2o::VertexTag
_odom2d	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^      Eigen::Vector3f _odom2d;$/;"	m	class:g2o::VertexTag
_position	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^      Eigen::Vector3f _position;$/;"	m	class:g2o::VertexTag
_textSize	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^    DoubleProperty* _textSize;$/;"	m	class:g2o::VertexTagDrawAction
g2o	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^namespace g2o {$/;"	n
name	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^      const std::string name() const { return _name;} $/;"	f	class:g2o::VertexTag
position	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^      const Eigen::Vector3f& position() const {return _position;}$/;"	f	class:g2o::VertexTag
setName	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^      void setName(const std::string& name_) {_name=name_;}$/;"	f	class:g2o::VertexTag
setPosition	trunk/EXTERNAL/g2o/g2o/types/data/vertex_tag.h	/^      void setPosition( const Eigen::Vector3f& p) {_position = p;}$/;"	f	class:g2o::VertexTag
EdgeSE3Offset	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.cpp	/^  EdgeSE3Offset::EdgeSE3Offset() : BaseBinaryEdge<6, SE3Quat, VertexSE3, VertexSE3>() {$/;"	f	class:g2o::deprecated::EdgeSE3Offset
computeError	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.cpp	/^  void EdgeSE3Offset::computeError() {$/;"	f	class:g2o::deprecated::EdgeSE3Offset
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.cpp	/^  void EdgeSE3Offset::initialEstimate(const OptimizableGraph::VertexSet& from_, OptimizableGraph::Vertex* \/*to_*\/) {$/;"	f	class:g2o::deprecated::EdgeSE3Offset
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.cpp	/^  void EdgeSE3Offset::linearizeOplus(){$/;"	f	class:g2o::deprecated::EdgeSE3Offset
read	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.cpp	/^  bool EdgeSE3Offset::read(std::istream& is) {$/;"	f	class:g2o::deprecated::EdgeSE3Offset
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.cpp	/^  bool EdgeSE3Offset::resolveCaches(){$/;"	f	class:g2o::deprecated::EdgeSE3Offset
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.cpp	/^  bool EdgeSE3Offset::setMeasurementFromState(){$/;"	f	class:g2o::deprecated::EdgeSE3Offset
write	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.cpp	/^  bool EdgeSE3Offset::write(std::ostream& os) const {$/;"	f	class:g2o::deprecated::EdgeSE3Offset
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::deprecated::EdgeSE3Offset
EdgeSE3Offset	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API EdgeSE3Offset : public BaseBinaryEdge<6, SE3Quat, VertexSE3, VertexSE3> {$/;"	c	namespace:g2o::deprecated
G2O_DEPRECATED_EDGE_SE3_OFFSET_H_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	28;"	d
_cacheFrom	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      CacheSE3Offset  *_cacheFrom, *_cacheTo;$/;"	m	class:g2o::deprecated::EdgeSE3Offset
_cacheTo	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      CacheSE3Offset  *_cacheFrom, *_cacheTo;$/;"	m	class:g2o::deprecated::EdgeSE3Offset
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      SE3Quat _inverseMeasurement;$/;"	m	class:g2o::deprecated::EdgeSE3Offset
_offsetFrom	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      ParameterSE3Offset *_offsetFrom, *_offsetTo;$/;"	m	class:g2o::deprecated::EdgeSE3Offset
_offsetTo	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      ParameterSE3Offset *_offsetFrom, *_offsetTo;$/;"	m	class:g2o::deprecated::EdgeSE3Offset
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^namespace deprecated {$/;"	n	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::deprecated::EdgeSE3Offset
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& \/*from*\/, $/;"	f	class:g2o::deprecated::EdgeSE3Offset
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      virtual int measurementDimension() const {return 7;}$/;"	f	class:g2o::deprecated::EdgeSE3Offset
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      virtual void setMeasurement(const SE3Quat& m){$/;"	f	class:g2o::deprecated::EdgeSE3Offset
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_offset.h	/^      virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::deprecated::EdgeSE3Offset
EdgeSE3PointXYZ	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.cpp	/^  EdgeSE3PointXYZ::EdgeSE3PointXYZ() : BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ>() {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
computeError	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.cpp	/^  void EdgeSE3PointXYZ::computeError() {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.cpp	/^  void EdgeSE3PointXYZ::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to_*\/)$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.cpp	/^  void EdgeSE3PointXYZ::linearizeOplus() {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
read	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.cpp	/^  bool EdgeSE3PointXYZ::read(std::istream& is) {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.cpp	/^  bool EdgeSE3PointXYZ::resolveCaches(){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.cpp	/^  bool EdgeSE3PointXYZ::setMeasurementFromState(){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
write	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.cpp	/^  bool EdgeSE3PointXYZ::write(std::ostream& os) const {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
EdgeSE3PointXYZ	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API EdgeSE3PointXYZ : public BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ> {$/;"	c	namespace:g2o::deprecated
G2O_DEPRECATED_EDGE_SE3_POINT_XYZ_H_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	28;"	d
J	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^    Eigen::Matrix<double,3,9> J; \/\/ jacobian before projection$/;"	m	class:g2o::deprecated::EdgeSE3PointXYZ
cache	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^    CacheSE3Offset* cache;$/;"	m	class:g2o::deprecated::EdgeSE3PointXYZ
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^namespace deprecated {$/;"	n	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, $/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^    virtual int measurementDimension() const {return 3;}$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
offsetParam	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^    ParameterSE3Offset* offsetParam;$/;"	m	class:g2o::deprecated::EdgeSE3PointXYZ
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^    virtual void setMeasurement(const Vector3d& m){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZ
EdgeSE3PointXYZDepth	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.cpp	/^  EdgeSE3PointXYZDepth::EdgeSE3PointXYZDepth() : BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ>() {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
computeError	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.cpp	/^  void EdgeSE3PointXYZDepth::computeError() {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.cpp	/^  void EdgeSE3PointXYZDepth::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to_*\/)$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.cpp	/^  void EdgeSE3PointXYZDepth::linearizeOplus() {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
read	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.cpp	/^  bool EdgeSE3PointXYZDepth::read(std::istream& is) {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.cpp	/^  bool EdgeSE3PointXYZDepth::resolveCaches(){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.cpp	/^  bool EdgeSE3PointXYZDepth::setMeasurementFromState(){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
write	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.cpp	/^  bool EdgeSE3PointXYZDepth::write(std::ostream& os) const {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
EdgeSE3PointXYZDepth	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API EdgeSE3PointXYZDepth : public BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ> {$/;"	c	namespace:g2o::deprecated
G2O_DEPRECATED_EDGE_PROJECT_DEPTH_H_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	28;"	d
J	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^    Eigen::Matrix<double,3,9> J; \/\/ jacobian before projection$/;"	m	class:g2o::deprecated::EdgeSE3PointXYZDepth
cache	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^    CacheCamera* cache;$/;"	m	class:g2o::deprecated::EdgeSE3PointXYZDepth
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^namespace deprecated {$/;"	n	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, $/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^    virtual int measurementDimension() const {return 3;}$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
params	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^    ParameterCamera* params;$/;"	m	class:g2o::deprecated::EdgeSE3PointXYZDepth
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^    virtual void setMeasurement(const Vector3d& m){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_depth.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDepth
EdgeProjectDisparityDrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^  EdgeProjectDisparityDrawAction::EdgeProjectDisparityDrawAction(): DrawAction(typeid(EdgeSE3PointXYZDisparity).name()){}$/;"	f	class:g2o::deprecated::EdgeProjectDisparityDrawAction
EdgeSE3PointXYZDisparity	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^  EdgeSE3PointXYZDisparity::EdgeSE3PointXYZDisparity() : BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ>() {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
computeError	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^  void EdgeSE3PointXYZDisparity::computeError() {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^  void EdgeSE3PointXYZDisparity::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to*\/)$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^  void EdgeSE3PointXYZDisparity::linearizeOplus() {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
operator ()	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^  HyperGraphElementAction* EdgeProjectDisparityDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::deprecated::EdgeProjectDisparityDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^  bool EdgeSE3PointXYZDisparity::read(std::istream& is) {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^  bool EdgeSE3PointXYZDisparity::resolveCaches(){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^  bool EdgeSE3PointXYZDisparity::setMeasurementFromState(){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
write	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.cpp	/^  bool EdgeSE3PointXYZDisparity::write(std::ostream& os) const {$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
EDGE_PROJECT_DISPARITY_ANALYTIC_JACOBIAN	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	36;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::deprecated::EdgeSE3PointXYZDisparity
EdgeProjectDisparityDrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^  class EdgeProjectDisparityDrawAction: public DrawAction{$/;"	c	namespace:g2o::deprecated
EdgeSE3PointXYZDisparity	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API EdgeSE3PointXYZDisparity : public BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ> {$/;"	c	namespace:g2o::deprecated
G2O_DEPRECATED_EDGE_SE3_POINTXYZ_DISPARITY_H_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	28;"	d
J	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^    Eigen::Matrix<double,3,9> J; \/\/ jacobian before projection$/;"	m	class:g2o::deprecated::EdgeSE3PointXYZDisparity
cache	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^    CacheCamera* cache;$/;"	m	class:g2o::deprecated::EdgeSE3PointXYZDisparity
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^namespace deprecated {$/;"	n	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, $/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^    virtual int measurementDimension() const {return 3;}$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
params	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^    ParameterCamera* params;$/;"	m	class:g2o::deprecated::EdgeSE3PointXYZDisparity
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^    virtual void setMeasurement(const Vector3d& m){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_pointxyz_disparity.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::deprecated::EdgeSE3PointXYZDisparity
EdgeSE3Prior	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.cpp	/^  EdgeSE3Prior::EdgeSE3Prior() : BaseUnaryEdge<6, SE3Quat, VertexSE3>() {$/;"	f	class:g2o::deprecated::EdgeSE3Prior
computeError	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.cpp	/^  void EdgeSE3Prior::computeError() {$/;"	f	class:g2o::deprecated::EdgeSE3Prior
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.cpp	/^  void EdgeSE3Prior::initialEstimate(const OptimizableGraph::VertexSet& \/*from_*\/, OptimizableGraph::Vertex* \/*to_*\/) {$/;"	f	class:g2o::deprecated::EdgeSE3Prior
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.cpp	/^  void EdgeSE3Prior::linearizeOplus(){$/;"	f	class:g2o::deprecated::EdgeSE3Prior
read	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.cpp	/^  bool EdgeSE3Prior::read(std::istream& is) {$/;"	f	class:g2o::deprecated::EdgeSE3Prior
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.cpp	/^  bool EdgeSE3Prior::resolveCaches(){$/;"	f	class:g2o::deprecated::EdgeSE3Prior
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.cpp	/^  bool EdgeSE3Prior::setMeasurementFromState(){$/;"	f	class:g2o::deprecated::EdgeSE3Prior
write	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.cpp	/^  bool EdgeSE3Prior::write(std::ostream& os) const {$/;"	f	class:g2o::deprecated::EdgeSE3Prior
EdgeSE3Prior	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API EdgeSE3Prior : public BaseUnaryEdge<6, SE3Quat, VertexSE3> {$/;"	c	namespace:g2o::deprecated
G2O_DEPRECATED_EDGE_SE3_PRIOR_H_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	28;"	d
_cache	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^    CacheSE3Offset* _cache;$/;"	m	class:g2o::deprecated::EdgeSE3Prior
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^    SE3Quat _inverseMeasurement;$/;"	m	class:g2o::deprecated::EdgeSE3Prior
_offsetParam	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^    ParameterSE3Offset* _offsetParam;$/;"	m	class:g2o::deprecated::EdgeSE3Prior
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^namespace deprecated {$/;"	n	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::deprecated::EdgeSE3Prior
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& \/*from*\/, $/;"	f	class:g2o::deprecated::EdgeSE3Prior
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^    virtual int measurementDimension() const {return 7;}$/;"	f	class:g2o::deprecated::EdgeSE3Prior
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^    virtual void setMeasurement(const SE3Quat& m){$/;"	f	class:g2o::deprecated::EdgeSE3Prior
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_prior.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::deprecated::EdgeSE3Prior
EdgeSE3	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^  EdgeSE3::EdgeSE3() :$/;"	f	class:g2o::deprecated::EdgeSE3
EdgeSE3DrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^  EdgeSE3DrawAction::EdgeSE3DrawAction(): DrawAction(typeid(EdgeSE3).name()){}$/;"	f	class:g2o::deprecated::EdgeSE3DrawAction
EdgeSE3WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^  EdgeSE3WriteGnuplotAction::EdgeSE3WriteGnuplotAction(): WriteGnuplotAction(typeid(EdgeSE3).name()){}$/;"	f	class:g2o::deprecated::EdgeSE3WriteGnuplotAction
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^  void EdgeSE3::initialEstimate(const OptimizableGraph::VertexSet& from_, OptimizableGraph::Vertex* \/*to_*\/)$/;"	f	class:g2o::deprecated::EdgeSE3
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^  void EdgeSE3::linearizeOplus(){$/;"	f	class:g2o::deprecated::EdgeSE3
operator ()	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^  HyperGraphElementAction* EdgeSE3DrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::deprecated::EdgeSE3DrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^  HyperGraphElementAction* EdgeSE3WriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::deprecated::EdgeSE3WriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^  bool EdgeSE3::read(std::istream& is)$/;"	f	class:g2o::deprecated::EdgeSE3
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^  bool EdgeSE3::setMeasurementFromState(){$/;"	f	class:g2o::deprecated::EdgeSE3
write	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.cpp	/^  bool EdgeSE3::write(std::ostream& os) const$/;"	f	class:g2o::deprecated::EdgeSE3
EDGE_SE3_QUAT_ANALYTIC_JACOBIAN	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	36;"	d
EdgeSE3	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^ class G2O_DEPRECATED_TYPES_SLAM3D_API EdgeSE3 : public BaseBinaryEdge<6, SE3Quat, VertexSE3, VertexSE3>$/;"	c	namespace:g2o::deprecated
EdgeSE3DrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^  class EdgeSE3DrawAction: public DrawAction{$/;"	c	namespace:g2o::deprecated
EdgeSE3WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^  class EdgeSE3WriteGnuplotAction: public WriteGnuplotAction {$/;"	c	namespace:g2o::deprecated
G2O_DEPRECATED_EDGE_SE3_QUAT_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	28;"	d
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^    SE3Quat _inverseMeasurement;$/;"	m	class:g2o::deprecated::EdgeSE3
computeError	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^    void computeError()$/;"	f	class:g2o::deprecated::EdgeSE3
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^namespace deprecated {$/;"	n	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::deprecated::EdgeSE3
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& , OptimizableGraph::Vertex* ) { return 1.;}$/;"	f	class:g2o::deprecated::EdgeSE3
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^    virtual int measurementDimension() const {return 7;}$/;"	f	class:g2o::deprecated::EdgeSE3
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^    virtual void setMeasurement(const SE3Quat& m){$/;"	f	class:g2o::deprecated::EdgeSE3
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/edge_se3_quat.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::deprecated::EdgeSE3
G2O_DEPRECATED_TYPES_SLAM3D_API	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/g2o_deprecated_types_slam3d_api.h	19;"	d
G2O_DEPRECATED_TYPES_SLAM3D_API	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/g2o_deprecated_types_slam3d_api.h	21;"	d
G2O_DEPRECATED_TYPES_SLAM3D_API	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/g2o_deprecated_types_slam3d_api.h	24;"	d
G2O_DEPRECATED_TYPES_SLAM3D_API	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/g2o_deprecated_types_slam3d_api.h	29;"	d
G2O_DEPRECATED_TYPES_SLAM3D_API_H	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/g2o_deprecated_types_slam3d_api.h	11;"	d
CacheCameraDrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  CacheCameraDrawAction::CacheCameraDrawAction(): DrawAction(typeid(CacheCamera).name()){$/;"	f	class:g2o::deprecated::CacheCameraDrawAction
ParameterCamera	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  ParameterCamera::ParameterCamera(){$/;"	f	class:g2o::deprecated::ParameterCamera
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
drawMyPyramid	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  static void drawMyPyramid(float height, float side){$/;"	f	namespace:g2o::deprecated	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  HyperGraphElementAction* CacheCameraDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::deprecated::CacheCameraDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  bool ParameterCamera::read(std::istream& is) {$/;"	f	class:g2o::deprecated::ParameterCamera
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  bool CacheCameraDrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::deprecated::CacheCameraDrawAction
resolveDependancies	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  bool CacheCamera::resolveDependancies(){$/;"	f	class:g2o::deprecated::CacheCamera
setKcam	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  void ParameterCamera::setKcam(double fx, double fy, double cx, double cy){$/;"	f	class:g2o::deprecated::ParameterCamera
setOffset	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  void ParameterCamera::setOffset(const SE3Quat& offset_){$/;"	f	class:g2o::deprecated::ParameterCamera
updateImpl	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  void CacheCamera::updateImpl(){$/;"	f	class:g2o::deprecated::CacheCamera
write	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.cpp	/^  bool ParameterCamera::write(std::ostream& os) const {$/;"	f	class:g2o::deprecated::ParameterCamera
CacheCamera	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API CacheCamera: public CacheSE3Offset {$/;"	c	namespace:g2o::deprecated
CacheCameraDrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API CacheCameraDrawAction: public DrawAction{$/;"	c	namespace:g2o::deprecated
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::deprecated::ParameterCamera
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::deprecated::CacheCamera
G2O_DEPRECATED_CAMERA_PARAMETERS_H_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	28;"	d
Kcam	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^      const Eigen::Matrix3d& Kcam() const { return _Kcam;}$/;"	f	class:g2o::deprecated::ParameterCamera
Kcam_inverseOffsetR	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^      const Eigen::Matrix3d& Kcam_inverseOffsetR() const { return _Kcam_inverseOffsetR;}$/;"	f	class:g2o::deprecated::ParameterCamera
ParameterCamera	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API ParameterCamera: public ParameterSE3Offset {$/;"	c	namespace:g2o::deprecated
_Kcam	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^      Eigen::Matrix3d _Kcam;$/;"	m	class:g2o::deprecated::ParameterCamera
_Kcam_inverseOffsetR	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^      Eigen::Matrix3d _Kcam_inverseOffsetR;$/;"	m	class:g2o::deprecated::ParameterCamera
_cameraSide	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^      FloatProperty* _cameraZ, *_cameraSide;$/;"	m	class:g2o::deprecated::CacheCameraDrawAction
_cameraZ	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^      FloatProperty* _cameraZ, *_cameraSide;$/;"	m	class:g2o::deprecated::CacheCameraDrawAction
_invKcam	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^      Eigen::Matrix3d _invKcam;$/;"	m	class:g2o::deprecated::ParameterCamera
_w2i	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^    Eigen::Affine3d _w2i; \/\/\/< world to image transform$/;"	m	class:g2o::deprecated::CacheCamera
camParams	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^    const ParameterCamera* camParams() const {return params;}$/;"	f	class:g2o::deprecated::CacheCamera
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^namespace deprecated {$/;"	n	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^namespace g2o {$/;"	n
invKcam	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^      const Eigen::Matrix3d& invKcam() const { return _invKcam;}$/;"	f	class:g2o::deprecated::ParameterCamera
params	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^    ParameterCamera* params;$/;"	m	class:g2o::deprecated::CacheCamera
w2i	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_camera.h	/^    const Eigen::Affine3d& w2i() const {return _w2i;}$/;"	f	class:g2o::deprecated::CacheCamera
CacheSE3Offset	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  CacheSE3Offset::CacheSE3Offset() :$/;"	f	class:g2o::deprecated::CacheSE3Offset
CacheSE3OffsetDrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  CacheSE3OffsetDrawAction::CacheSE3OffsetDrawAction(): DrawAction(typeid(CacheSE3Offset).name()){$/;"	f	class:g2o::deprecated::CacheSE3OffsetDrawAction
ParameterSE3Offset	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  ParameterSE3Offset::ParameterSE3Offset(){$/;"	f	class:g2o::deprecated::ParameterSE3Offset
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  HyperGraphElementAction* CacheSE3OffsetDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::deprecated::CacheSE3OffsetDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  bool ParameterSE3Offset::read(std::istream& is) {$/;"	f	class:g2o::deprecated::ParameterSE3Offset
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  bool CacheSE3OffsetDrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::deprecated::CacheSE3OffsetDrawAction
resolveDependancies	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  bool CacheSE3Offset::resolveDependancies(){$/;"	f	class:g2o::deprecated::CacheSE3Offset
setOffset	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  void ParameterSE3Offset::setOffset(const SE3Quat& offset_){$/;"	f	class:g2o::deprecated::ParameterSE3Offset
setOffsetParam	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  void CacheSE3Offset::setOffsetParam(ParameterSE3Offset* offsetParam)$/;"	f	class:g2o::deprecated::CacheSE3Offset
updateImpl	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  void CacheSE3Offset::updateImpl(){$/;"	f	class:g2o::deprecated::CacheSE3Offset
write	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.cpp	/^  bool ParameterSE3Offset::write(std::ostream& os) const {$/;"	f	class:g2o::deprecated::ParameterSE3Offset
CacheSE3Offset	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API CacheSE3Offset: public Cache {$/;"	c	namespace:g2o::deprecated
CacheSE3OffsetDrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API CacheSE3OffsetDrawAction: public DrawAction{$/;"	c	namespace:g2o::deprecated
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::deprecated::CacheSE3Offset
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::deprecated::ParameterSE3Offset
G2O_DEPRECATED_VERTEX_SE3_OFFSET_PARAMETERS_H_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	28;"	d
ParameterSE3Offset	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API ParameterSE3Offset: public Parameter$/;"	c	namespace:g2o::deprecated
_cubeSide	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      FloatProperty* _cubeSide;$/;"	m	class:g2o::deprecated::CacheSE3OffsetDrawAction
_inverseOffsetMatrix	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      Eigen::Isometry3d _inverseOffsetMatrix;$/;"	m	class:g2o::deprecated::ParameterSE3Offset
_n2w	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      Eigen::Isometry3d _n2w; \/\/\/< sensor to world$/;"	m	class:g2o::deprecated::CacheSE3Offset
_offset	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      SE3Quat _offset;$/;"	m	class:g2o::deprecated::ParameterSE3Offset
_offsetMatrix	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      Eigen::Isometry3d _offsetMatrix;$/;"	m	class:g2o::deprecated::ParameterSE3Offset
_offsetParam	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      ParameterSE3Offset* _offsetParam; \/\/\/< the parameter connected to the cache$/;"	m	class:g2o::deprecated::CacheSE3Offset
_se3_n2w	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      SE3Quat _se3_n2w;$/;"	m	class:g2o::deprecated::CacheSE3Offset
_se3_w2n	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      SE3Quat _se3_w2n;$/;"	m	class:g2o::deprecated::CacheSE3Offset
_w2l	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      Eigen::Isometry3d _w2l; \/\/\/< world to local$/;"	m	class:g2o::deprecated::CacheSE3Offset
_w2n	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      Eigen::Isometry3d _w2n; \/\/\/< world to sensor transform$/;"	m	class:g2o::deprecated::CacheSE3Offset
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^namespace deprecated {$/;"	n	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^namespace g2o {$/;"	n
inverseOffsetMatrix	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      const Eigen::Isometry3d& inverseOffsetMatrix() const { return _inverseOffsetMatrix;}$/;"	f	class:g2o::deprecated::ParameterSE3Offset
n2w	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      const SE3Quat& n2w() const {return _se3_n2w;}$/;"	f	class:g2o::deprecated::CacheSE3Offset
n2wMatrix	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      const Eigen::Isometry3d& n2wMatrix() const { return _n2w;}$/;"	f	class:g2o::deprecated::CacheSE3Offset
offset	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      const SE3Quat& offset() const { return _offset;}$/;"	f	class:g2o::deprecated::ParameterSE3Offset
offsetMatrix	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      const Eigen::Isometry3d& offsetMatrix() const { return _offsetMatrix;}$/;"	f	class:g2o::deprecated::ParameterSE3Offset
offsetParam	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      const ParameterSE3Offset* offsetParam() const { return _offsetParam;}$/;"	f	class:g2o::deprecated::CacheSE3Offset
w2lMatrix	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      const Eigen::Isometry3d& w2lMatrix() const { return _w2l;}$/;"	f	class:g2o::deprecated::CacheSE3Offset
w2n	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      const SE3Quat& w2n() const {return _se3_w2n;}$/;"	f	class:g2o::deprecated::CacheSE3Offset
w2nMatrix	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/parameter_se3_offset.h	/^      const Eigen::Isometry3d& w2nMatrix() const { return _w2n;}$/;"	f	class:g2o::deprecated::CacheSE3Offset
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/se3quat_gradients.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
euler_to_quat	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/se3quat_gradients.cpp	/^Eigen::Quaterniond euler_to_quat(double yaw, double pitch, double roll)$/;"	f	namespace:g2o::deprecated
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/se3quat_gradients.cpp	/^namespace g2o {$/;"	n	file:
jac_quat3_euler3	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/se3quat_gradients.cpp	/^void jac_quat3_euler3(Eigen::Matrix<double, 6, 6>& J, const SE3Quat& t)$/;"	f	namespace:g2o::deprecated
quat_to_euler	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/se3quat_gradients.cpp	/^void quat_to_euler(const Eigen::Quaterniond& q, double& yaw, double& pitch, double& roll)$/;"	f	namespace:g2o::deprecated
G2O_DEPRECATED_SE3QUAT_GRADIENTS_H	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/se3quat_gradients.h	28;"	d
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/se3quat_gradients.h	/^namespace deprecated {$/;"	n	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/se3quat_gradients.h	/^namespace g2o {$/;"	n
jacobian_3d_qman	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/se3quat_gradients.h	/^void jacobian_3d_qman ( MatrixBase<Derived> &  Ji , MatrixBase<Derived> &  Jj,$/;"	f	namespace:g2o::deprecated
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/types_slam3d.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
deprecated_slam3d	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/types_slam3d.cpp	/^  G2O_REGISTER_TYPE_GROUP(deprecated_slam3d);$/;"	v
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/types_slam3d.cpp	/^namespace g2o {$/;"	n	file:
G2O_DEPRECATED_TYPES_SLAM3D_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/types_slam3d.h	28;"	d
THREE_D_TYPES_ANALYTIC_JACOBIAN	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/types_slam3d.h	35;"	d
VertexPointXYZDrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.cpp	/^  VertexPointXYZDrawAction::VertexPointXYZDrawAction(): DrawAction(typeid(VertexPointXYZ).name()){$/;"	f	class:g2o::deprecated::VertexPointXYZDrawAction
VertexPointXYZWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.cpp	/^  VertexPointXYZWriteGnuplotAction::VertexPointXYZWriteGnuplotAction() :$/;"	f	class:g2o::deprecated::VertexPointXYZWriteGnuplotAction
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.cpp	/^  HyperGraphElementAction* VertexPointXYZDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::deprecated::VertexPointXYZDrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.cpp	/^  HyperGraphElementAction* VertexPointXYZWriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params_ )$/;"	f	class:g2o::deprecated::VertexPointXYZWriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.cpp	/^  bool VertexPointXYZ::read(std::istream& is) {$/;"	f	class:g2o::deprecated::VertexPointXYZ
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.cpp	/^  bool VertexPointXYZDrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::deprecated::VertexPointXYZDrawAction
write	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.cpp	/^  bool VertexPointXYZ::write(std::ostream& os) const {$/;"	f	class:g2o::deprecated::VertexPointXYZ
G2O_DEPRECATED_VERTEX_TRACKXYZ_H_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	28;"	d
VertexPointXYZ	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^          VertexPointXYZ() {}$/;"	f	class:g2o::deprecated::VertexPointXYZ
VertexPointXYZ	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API VertexPointXYZ : public BaseVertex<3, Eigen::Vector3d>$/;"	c	namespace:g2o::deprecated
VertexPointXYZDrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API VertexPointXYZDrawAction: public DrawAction{$/;"	c	namespace:g2o::deprecated
VertexPointXYZWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API VertexPointXYZWriteGnuplotAction: public WriteGnuplotAction$/;"	c	namespace:g2o::deprecated
_pointSize	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^    FloatProperty *_pointSize;$/;"	m	class:g2o::deprecated::VertexPointXYZDrawAction
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^namespace deprecated {$/;"	n	namespace:g2o
estimateDimension	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^        virtual int estimateDimension() const {$/;"	f	class:g2o::deprecated::VertexPointXYZ
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^namespace g2o {$/;"	n
getEstimateData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^        virtual bool getEstimateData(double* est) const{$/;"	f	class:g2o::deprecated::VertexPointXYZ
getMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^        virtual bool getMinimalEstimateData(double* est) const{$/;"	f	class:g2o::deprecated::VertexPointXYZ
minimalEstimateDimension	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^        virtual int minimalEstimateDimension() const {$/;"	f	class:g2o::deprecated::VertexPointXYZ
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^        virtual void oplusImpl(const double* update_) {$/;"	f	class:g2o::deprecated::VertexPointXYZ
setEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^        virtual bool setEstimateDataImpl(const double* est){$/;"	f	class:g2o::deprecated::VertexPointXYZ
setMinimalEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^        virtual bool setMinimalEstimateDataImpl(const double* est){$/;"	f	class:g2o::deprecated::VertexPointXYZ
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_pointxyz.h	/^        virtual void setToOriginImpl() { _estimate.fill(0.); }$/;"	f	class:g2o::deprecated::VertexPointXYZ
VertexSE3	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^  VertexSE3::VertexSE3() :$/;"	f	class:g2o::deprecated::VertexSE3
VertexSE3DrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^  VertexSE3DrawAction::VertexSE3DrawAction(): DrawAction(typeid(VertexSE3).name()){$/;"	f	class:g2o::deprecated::VertexSE3DrawAction
VertexSE3WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^  VertexSE3WriteGnuplotAction::VertexSE3WriteGnuplotAction(): WriteGnuplotAction(typeid(VertexSE3).name()){}$/;"	f	class:g2o::deprecated::VertexSE3WriteGnuplotAction
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^namespace deprecated {$/;"	n	namespace:g2o	file:
drawTriangle	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^  void drawTriangle(float xSize, float ySize){$/;"	f	namespace:g2o::deprecated
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^  HyperGraphElementAction* VertexSE3DrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::deprecated::VertexSE3DrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^  HyperGraphElementAction* VertexSE3WriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::deprecated::VertexSE3WriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^  bool VertexSE3::read(std::istream& is)$/;"	f	class:g2o::deprecated::VertexSE3
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^  bool VertexSE3DrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::deprecated::VertexSE3DrawAction
write	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.cpp	/^  bool VertexSE3::write(std::ostream& os) const$/;"	f	class:g2o::deprecated::VertexSE3
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::deprecated::VertexSE3
G2O_DEPRECATED_VERTEX_SE3_QUAT_	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	28;"	d
VertexSE3	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^class G2O_DEPRECATED_TYPES_SLAM3D_API VertexSE3 : public BaseVertex<6, SE3Quat>$/;"	c	namespace:g2o::deprecated
VertexSE3DrawAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API VertexSE3DrawAction: public DrawAction{$/;"	c	namespace:g2o::deprecated
VertexSE3WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^  class G2O_DEPRECATED_TYPES_SLAM3D_API VertexSE3WriteGnuplotAction: public WriteGnuplotAction {$/;"	c	namespace:g2o::deprecated
_cacheDrawActions	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    HyperGraphElementAction* _cacheDrawActions;$/;"	m	class:g2o::deprecated::VertexSE3DrawAction
_triangleX	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    FloatProperty* _triangleX, *_triangleY;$/;"	m	class:g2o::deprecated::VertexSE3DrawAction
_triangleY	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    FloatProperty* _triangleX, *_triangleY;$/;"	m	class:g2o::deprecated::VertexSE3DrawAction
deprecated	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^namespace deprecated {$/;"	n	namespace:g2o
estimateDimension	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    virtual int estimateDimension() const {$/;"	f	class:g2o::deprecated::VertexSE3
g2o	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^namespace g2o {$/;"	n
getEstimateData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    virtual bool getEstimateData(double* est) const{$/;"	f	class:g2o::deprecated::VertexSE3
getMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    virtual bool getMinimalEstimateData(double* est) const{$/;"	f	class:g2o::deprecated::VertexSE3
minimalEstimateDimension	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    virtual int minimalEstimateDimension() const {$/;"	f	class:g2o::deprecated::VertexSE3
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    virtual void oplusImpl(const double* update)$/;"	f	class:g2o::deprecated::VertexSE3
setEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    virtual bool setEstimateDataImpl(const double* est){$/;"	f	class:g2o::deprecated::VertexSE3
setMinimalEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    virtual bool setMinimalEstimateDataImpl(const double* est){$/;"	f	class:g2o::deprecated::VertexSE3
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/deprecated/slam3d/vertex_se3_quat.h	/^    virtual void setToOriginImpl() {$/;"	f	class:g2o::deprecated::VertexSE3
G2O_TYPES_ICP_API	trunk/EXTERNAL/g2o/g2o/types/icp/g2o_types_icp_api.h	19;"	d
G2O_TYPES_ICP_API	trunk/EXTERNAL/g2o/g2o/types/icp/g2o_types_icp_api.h	21;"	d
G2O_TYPES_ICP_API	trunk/EXTERNAL/g2o/g2o/types/icp/g2o_types_icp_api.h	24;"	d
G2O_TYPES_ICP_API	trunk/EXTERNAL/g2o/g2o/types/icp/g2o_types_icp_api.h	29;"	d
G2O_TYPES_ICP_API_H	trunk/EXTERNAL/g2o/g2o/types/icp/g2o_types_icp_api.h	11;"	d
Edge_V_V_GICP	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  Edge_V_V_GICP::Edge_V_V_GICP(const Edge_V_V_GICP* e)$/;"	f	class:g2o::Edge_V_V_GICP
Edge_XYZ_VSC	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  Edge_XYZ_VSC::Edge_XYZ_VSC()$/;"	f	class:g2o::Edge_XYZ_VSC
G2O_ATTRIBUTE_CONSTRUCTOR	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  G2O_ATTRIBUTE_CONSTRUCTOR(init_icp_types)$/;"	f	namespace:g2o
Kcam	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  Matrix3d VertexSCam::Kcam;$/;"	m	class:g2o::VertexSCam	file:
Vector6d	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  typedef  Matrix<double, 6, 1> Vector6d;$/;"	t	namespace:g2o	file:
VertexSCam	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  VertexSCam::VertexSCam() :$/;"	f	class:g2o::VertexSCam
baseline	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  double VertexSCam::baseline;$/;"	m	class:g2o::VertexSCam	file:
dRidx	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  Matrix3d Edge_V_V_GICP::dRidx; \/\/ differential quat matrices$/;"	m	class:g2o::Edge_V_V_GICP	file:
dRidx	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  Matrix3d VertexSCam::dRidx; \/\/ differential quat matrices$/;"	m	class:g2o::VertexSCam	file:
dRidy	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  Matrix3d Edge_V_V_GICP::dRidy; \/\/ differential quat matrices$/;"	m	class:g2o::Edge_V_V_GICP	file:
dRidy	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  Matrix3d VertexSCam::dRidy; \/\/ differential quat matrices$/;"	m	class:g2o::VertexSCam	file:
dRidz	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  Matrix3d Edge_V_V_GICP::dRidz; \/\/ differential quat matrices$/;"	m	class:g2o::Edge_V_V_GICP	file:
dRidz	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  Matrix3d VertexSCam::dRidz; \/\/ differential quat matrices$/;"	m	class:g2o::VertexSCam	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^namespace g2o {$/;"	n	file:
icp	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  G2O_REGISTER_TYPE_GROUP(icp);$/;"	v
init	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^    void init()$/;"	f	namespace:g2o::types_icp
initialized	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^    int initialized = 0;$/;"	v
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  void Edge_V_V_GICP::linearizeOplus()$/;"	f	class:g2o::Edge_V_V_GICP
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  void Edge_XYZ_VSC::linearizeOplus()$/;"	f	class:g2o::Edge_XYZ_VSC
read	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  bool Edge_V_V_GICP::read(std::istream& is)$/;"	f	class:g2o::Edge_V_V_GICP
read	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  bool Edge_XYZ_VSC::read(std::istream&)$/;"	f	class:g2o::Edge_XYZ_VSC
read	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  bool VertexSCam::read(std::istream&)$/;"	f	class:g2o::VertexSCam
types_icp	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  namespace types_icp {$/;"	n	namespace:g2o	file:
write	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  bool Edge_V_V_GICP::write(std::ostream& os) const$/;"	f	class:g2o::Edge_V_V_GICP
write	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  bool Edge_XYZ_VSC::write(std::ostream&) const$/;"	f	class:g2o::Edge_XYZ_VSC
write	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.cpp	/^  bool VertexSCam::write(std::ostream&) const$/;"	f	class:g2o::VertexSCam
EdgeGICP	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    EdgeGICP()$/;"	f	class:g2o::EdgeGICP
EdgeGICP	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^  class G2O_TYPES_ICP_API EdgeGICP$/;"	c	namespace:g2o
Edge_V_V_GICP	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      Edge_V_V_GICP() : pl_pl(false) {};$/;"	f	class:g2o::Edge_V_V_GICP
Edge_V_V_GICP	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^  class G2O_TYPES_ICP_API Edge_V_V_GICP : public  BaseBinaryEdge<3, EdgeGICP, VertexSE3, VertexSE3>$/;"	c	namespace:g2o
Edge_XYZ_VSC	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^  class G2O_TYPES_ICP_API Edge_XYZ_VSC : public  BaseBinaryEdge<3, Vector3d, VertexSBAPointXYZ, VertexSCam>$/;"	c	namespace:g2o
G2O_TYPES_ICP	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	28;"	d
GICP_ANALYTIC_JACOBIANS	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	30;"	d
Kcam	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      static Matrix3d Kcam;$/;"	m	class:g2o::VertexSCam
R0	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Matrix3d R0,R1;$/;"	m	class:g2o::EdgeGICP
R1	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Matrix3d R0,R1;$/;"	m	class:g2o::EdgeGICP
Vector6d	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^  typedef  Matrix<double, 6, 1> Vector6d;$/;"	t	namespace:g2o
VertexSCam	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^  class G2O_TYPES_ICP_API VertexSCam : public VertexSE3$/;"	c	namespace:g2o
baseline	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      static double baseline;$/;"	m	class:g2o::VertexSCam
computeError	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    void computeError()$/;"	f	class:g2o::Edge_V_V_GICP
computeError	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    void computeError()$/;"	f	class:g2o::Edge_XYZ_VSC
cov0	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Matrix3d cov0(double e)$/;"	f	class:g2o::EdgeGICP
cov0	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Matrix3d cov0, cov1;$/;"	m	class:g2o::Edge_V_V_GICP
cov1	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Matrix3d cov0, cov1;$/;"	m	class:g2o::Edge_V_V_GICP
cov1	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Matrix3d cov1(double e)$/;"	f	class:g2o::EdgeGICP
dRdx	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      Matrix3d dRdx, dRdy, dRdz;$/;"	m	class:g2o::VertexSCam
dRdy	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      Matrix3d dRdx, dRdy, dRdz;$/;"	m	class:g2o::VertexSCam
dRdz	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      Matrix3d dRdx, dRdy, dRdz;$/;"	m	class:g2o::VertexSCam
dRidx	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      static Matrix3d dRidx;$/;"	m	class:g2o::VertexSCam
dRidx	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    static Matrix3d dRidx;$/;"	m	class:g2o::Edge_V_V_GICP
dRidy	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^	  static Matrix3d dRidy;$/;"	m	class:g2o::VertexSCam
dRidy	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^	static Matrix3d dRidy;$/;"	m	class:g2o::Edge_V_V_GICP
dRidz	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^	  static Matrix3d dRidz;$/;"	m	class:g2o::VertexSCam
dRidz	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^	static Matrix3d dRidz; \/\/ differential quat matrices$/;"	m	class:g2o::Edge_V_V_GICP
g2o	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^namespace g2o {$/;"	n
makeRot0	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    void makeRot0() $/;"	f	class:g2o::EdgeGICP
makeRot1	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    void makeRot1()$/;"	f	class:g2o::EdgeGICP
mapPoint	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      void mapPoint(Vector3d &res, const Vector3d &pt3)$/;"	f	class:g2o::VertexSCam
normal0	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Vector3d normal0, normal1;$/;"	m	class:g2o::EdgeGICP
normal1	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Vector3d normal0, normal1;$/;"	m	class:g2o::EdgeGICP
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      virtual void oplusImpl(const double* update)$/;"	f	class:g2o::VertexSCam
pl_pl	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    bool pl_pl;$/;"	m	class:g2o::Edge_V_V_GICP
pos0	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Vector3d pos0, pos1;$/;"	m	class:g2o::EdgeGICP
pos1	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Vector3d pos0, pos1;$/;"	m	class:g2o::EdgeGICP
prec0	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Matrix3d prec0(double e)$/;"	f	class:g2o::EdgeGICP
prec1	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^    Matrix3d prec1(double e)$/;"	f	class:g2o::EdgeGICP
setAll	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      void setAll()$/;"	f	class:g2o::VertexSCam
setDr	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      void setDr()$/;"	f	class:g2o::VertexSCam
setKcam	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      static void setKcam(double fx, double fy, double cx, double cy, double tx)$/;"	f	class:g2o::VertexSCam
setProjection	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      void setProjection() { w2i = Kcam * w2n; }$/;"	f	class:g2o::VertexSCam
setTransform	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      void setTransform()  {$/;"	f	class:g2o::VertexSCam
transformF2W	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      static void transformF2W(Matrix<double,3,4> &m,$/;"	f	class:g2o::VertexSCam
transformW2F	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      static void transformW2F(Matrix<double,3,4> &m,$/;"	f	class:g2o::VertexSCam
types_icp	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^  namespace types_icp {$/;"	n	namespace:g2o
w2i	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      Matrix<double,3,4> w2i; \/\/ transform from world to image coordinates$/;"	m	class:g2o::VertexSCam
w2n	trunk/EXTERNAL/g2o/g2o/types/icp/types_icp.h	/^      Matrix<double,3,4> w2n; \/\/ transform from world to node coordinates$/;"	m	class:g2o::VertexSCam
G2O_TYPES_SBA_API	trunk/EXTERNAL/g2o/g2o/types/sba/g2o_types_sba_api.h	19;"	d
G2O_TYPES_SBA_API	trunk/EXTERNAL/g2o/g2o/types/sba/g2o_types_sba_api.h	21;"	d
G2O_TYPES_SBA_API	trunk/EXTERNAL/g2o/g2o/types/sba/g2o_types_sba_api.h	24;"	d
G2O_TYPES_SBA_API	trunk/EXTERNAL/g2o/g2o/types/sba/g2o_types_sba_api.h	29;"	d
G2O_TYPES_SBA_API_H	trunk/EXTERNAL/g2o/g2o/types/sba/g2o_types_sba_api.h	11;"	d
EdgeNormal	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    EdgeNormal()$/;"	f	class:g2o::EdgeNormal
EdgeNormal	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^  class G2O_TYPES_SBA_API EdgeNormal$/;"	c	namespace:g2o
G2O_SBACam_	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	39;"	d
Kcam	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    Matrix3d Kcam; $/;"	m	class:g2o::SBACam
R	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    Matrix3d R; $/;"	m	class:g2o::EdgeNormal
SBACam	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^  SBACam()$/;"	f	class:g2o::SBACam
SBACam	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^  SBACam(const Quaterniond&  r_, const Vector3d& t_) : SE3Quat(r_, t_)$/;"	f	class:g2o::SBACam
SBACam	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^  SBACam(const SE3Quat& p) : SE3Quat(p) {$/;"	f	class:g2o::SBACam
SBACam	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^  class G2O_TYPES_SBA_API SBACam: public SE3Quat$/;"	c	namespace:g2o
Vector6d	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^  typedef  Matrix<double, 6, 1> Vector6d;$/;"	t	namespace:g2o
baseline	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    double baseline;$/;"	m	class:g2o::SBACam
dRdx	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    Matrix3d dRdx, dRdy, dRdz;$/;"	m	class:g2o::SBACam
dRdy	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    Matrix3d dRdx, dRdy, dRdz;$/;"	m	class:g2o::SBACam
dRdz	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    Matrix3d dRdx, dRdy, dRdz;$/;"	m	class:g2o::SBACam
g2o	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^namespace g2o {$/;"	n
makeRot	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    void makeRot()$/;"	f	class:g2o::EdgeNormal
normal	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    Vector3d normal;$/;"	m	class:g2o::EdgeNormal
operator <<	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^  inline std::ostream& operator <<(std::ostream& out_str,$/;"	f	namespace:g2o
pos	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    Vector3d pos;$/;"	m	class:g2o::EdgeNormal
setDr	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    void setDr()$/;"	f	class:g2o::SBACam
setKcam	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    void setKcam(double fx, double fy, double cx, double cy, double tx)$/;"	f	class:g2o::SBACam
setProjection	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    void setProjection() { w2i = Kcam * w2n; }$/;"	f	class:g2o::SBACam
setTransform	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    void setTransform()  { transformW2F(w2n,_t,_r); }$/;"	f	class:g2o::SBACam
transformF2W	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    static void transformF2W(Matrix<double,3,4> &m, $/;"	f	class:g2o::SBACam
transformW2F	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    static void transformW2F(Matrix<double,3,4> &m, $/;"	f	class:g2o::SBACam
update	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    void update(const Vector6d& update)$/;"	f	class:g2o::SBACam
w2i	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    Matrix<double,3,4> w2i; \/\/ transform from world to image coordinates$/;"	m	class:g2o::SBACam
w2n	trunk/EXTERNAL/g2o/g2o/types/sba/sbacam.h	/^    Matrix<double,3,4> w2n; \/\/ transform from world to node coordinates$/;"	m	class:g2o::SBACam
EdgeProjectP2MC	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  EdgeProjectP2MC::EdgeProjectP2MC() :$/;"	f	class:g2o::EdgeProjectP2MC
EdgeProjectP2MC_Intrinsics	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  EdgeProjectP2MC_Intrinsics::EdgeProjectP2MC_Intrinsics() :$/;"	f	class:g2o::EdgeProjectP2MC_Intrinsics
EdgeProjectP2SC	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  EdgeProjectP2SC::EdgeProjectP2SC() :$/;"	f	class:g2o::EdgeProjectP2SC
EdgeSBACam	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  EdgeSBACam::EdgeSBACam() :$/;"	f	class:g2o::EdgeSBACam
EdgeSBAScale	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  EdgeSBAScale::EdgeSBAScale() :$/;"	f	class:g2o::EdgeSBAScale
VertexCam	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  VertexCam::VertexCam() $/;"	f	class:g2o::VertexCam
VertexIntrinsics	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  VertexIntrinsics::VertexIntrinsics() $/;"	f	class:g2o::VertexIntrinsics
VertexSBAPointXYZ	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  VertexSBAPointXYZ::VertexSBAPointXYZ() : BaseVertex<3, Vector3d>()$/;"	f	class:g2o::VertexSBAPointXYZ
g2o	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  void EdgeSBACam::initialEstimate(const OptimizableGraph::VertexSet& from_, OptimizableGraph::Vertex* \/*to_*\/)$/;"	f	class:g2o::EdgeSBACam
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  void EdgeSBAScale::initialEstimate(const OptimizableGraph::VertexSet& from_, OptimizableGraph::Vertex* \/*to_*\/)$/;"	f	class:g2o::EdgeSBAScale
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  void EdgeProjectP2MC::linearizeOplus()$/;"	f	class:g2o::EdgeProjectP2MC
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  void EdgeProjectP2MC_Intrinsics::linearizeOplus()$/;"	f	class:g2o::EdgeProjectP2MC_Intrinsics
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  void EdgeProjectP2SC::linearizeOplus()$/;"	f	class:g2o::EdgeProjectP2SC
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeProjectP2MC::read(std::istream& is)$/;"	f	class:g2o::EdgeProjectP2MC
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeProjectP2MC_Intrinsics::read(std::istream& is)$/;"	f	class:g2o::EdgeProjectP2MC_Intrinsics
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeProjectP2SC::read(std::istream& is)$/;"	f	class:g2o::EdgeProjectP2SC
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeSBACam::read(std::istream& is)$/;"	f	class:g2o::EdgeSBACam
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeSBAScale::read(std::istream& is)$/;"	f	class:g2o::EdgeSBAScale
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool VertexCam::read(std::istream& is)$/;"	f	class:g2o::VertexCam
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool VertexIntrinsics::read(std::istream& is)$/;"	f	class:g2o::VertexIntrinsics
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool VertexSBAPointXYZ::read(std::istream& is)$/;"	f	class:g2o::VertexSBAPointXYZ
sba	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  G2O_REGISTER_TYPE_GROUP(sba);$/;"	v
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeSBACam::setMeasurementFromState()$/;"	f	class:g2o::EdgeSBACam
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeProjectP2MC::write(std::ostream& os) const$/;"	f	class:g2o::EdgeProjectP2MC
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeProjectP2MC_Intrinsics::write(std::ostream& os) const$/;"	f	class:g2o::EdgeProjectP2MC_Intrinsics
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeProjectP2SC::write(std::ostream& os) const$/;"	f	class:g2o::EdgeProjectP2SC
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeSBACam::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSBACam
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool EdgeSBAScale::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSBAScale
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool VertexCam::write(std::ostream& os) const$/;"	f	class:g2o::VertexCam
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool VertexIntrinsics::write(std::ostream& os) const$/;"	f	class:g2o::VertexIntrinsics
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.cpp	/^  bool VertexSBAPointXYZ::write(std::ostream& os) const$/;"	f	class:g2o::VertexSBAPointXYZ
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::EdgeSBACam
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::VertexCam
EdgeProjectP2MC	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^ class G2O_TYPES_SBA_API EdgeProjectP2MC : public  BaseBinaryEdge<2, Vector2d, VertexSBAPointXYZ, VertexCam> $/;"	c	namespace:g2o
EdgeProjectP2MC_Intrinsics	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^ class G2O_TYPES_SBA_API EdgeProjectP2MC_Intrinsics : public  BaseMultiEdge<2, Vector2d> $/;"	c	namespace:g2o
EdgeProjectP2SC	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^ class G2O_TYPES_SBA_API EdgeProjectP2SC : public  BaseBinaryEdge<3, Vector3d, VertexSBAPointXYZ, VertexCam>$/;"	c	namespace:g2o
EdgeSBACam	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^ class G2O_TYPES_SBA_API EdgeSBACam : public BaseBinaryEdge<6, SE3Quat, VertexCam, VertexCam>$/;"	c	namespace:g2o
EdgeSBAScale	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^ class G2O_TYPES_SBA_API EdgeSBAScale : public BaseBinaryEdge<1, double, VertexCam, VertexCam>$/;"	c	namespace:g2o
G2O_SBA_TYPES	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	28;"	d
VertexCam	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^  class G2O_TYPES_SBA_API VertexCam : public BaseVertex<6, SBACam>$/;"	c	namespace:g2o
VertexIntrinsics	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^class G2O_TYPES_SBA_API VertexIntrinsics : public BaseVertex<4, Matrix<double, 5, 1> >$/;"	c	namespace:g2o
VertexSBAPointXYZ	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^ class G2O_TYPES_SBA_API VertexSBAPointXYZ : public BaseVertex<3, Vector3d>$/;"	c	namespace:g2o
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    SE3Quat _inverseMeasurement;$/;"	m	class:g2o::EdgeSBACam
computeError	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    void computeError()$/;"	f	class:g2o::EdgeProjectP2MC
computeError	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    void computeError()$/;"	f	class:g2o::EdgeProjectP2MC_Intrinsics
computeError	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    void computeError()$/;"	f	class:g2o::EdgeProjectP2SC
computeError	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    void computeError()$/;"	f	class:g2o::EdgeSBACam
computeError	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    void computeError()$/;"	f	class:g2o::EdgeSBAScale
estimateDimension	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual int estimateDimension() const {$/;"	f	class:g2o::VertexCam
g2o	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^namespace g2o {$/;"	n
getEstimateData	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual bool getEstimateData(double* est) const{$/;"	f	class:g2o::VertexCam
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::EdgeSBACam
getMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual bool getMinimalEstimateData(double* est) const{$/;"	f	class:g2o::VertexCam
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& , OptimizableGraph::Vertex* ) { return 1.;}$/;"	f	class:g2o::EdgeSBACam
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& , OptimizableGraph::Vertex* ) { return 1.;}$/;"	f	class:g2o::EdgeSBAScale
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual int measurementDimension() const {return 7;}$/;"	f	class:g2o::EdgeSBACam
minimalEstimateDimension	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual int minimalEstimateDimension() const {$/;"	f	class:g2o::VertexCam
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual void oplusImpl(const double* update)$/;"	f	class:g2o::VertexCam
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual void oplusImpl(const double* update)$/;"	f	class:g2o::VertexIntrinsics
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual void oplusImpl(const double* update)$/;"	f	class:g2o::VertexSBAPointXYZ
setEstimate	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual void setEstimate(const SBACam& cam){$/;"	f	class:g2o::VertexCam
setEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual bool setEstimateDataImpl(const double* est){$/;"	f	class:g2o::VertexCam
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual void setMeasurement(const SE3Quat& meas){$/;"	f	class:g2o::EdgeSBACam
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual void setMeasurement(const double& m){$/;"	f	class:g2o::EdgeSBAScale
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::EdgeSBACam
setMinimalEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual bool setMinimalEstimateDataImpl(const double* est){$/;"	f	class:g2o::VertexCam
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexCam
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexIntrinsics
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/sba/types_sba.h	/^    virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexSBAPointXYZ
CameraParameters	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^::CameraParameters()$/;"	f	class:g2o::CameraParameters
EdgeProjectXYZ2UV	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^EdgeProjectXYZ2UV::EdgeProjectXYZ2UV() : BaseBinaryEdge<2, Vector2d, VertexSBAPointXYZ, VertexSE3Expmap>() {$/;"	f	class:g2o::EdgeProjectXYZ2UV
EdgeProjectXYZ2UVU	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^EdgeProjectXYZ2UVU::EdgeProjectXYZ2UVU() : BaseBinaryEdge<3, Vector3d, VertexSBAPointXYZ, VertexSE3Expmap>()$/;"	f	class:g2o::EdgeProjectXYZ2UVU
EdgeSE3Expmap	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^EdgeSE3Expmap::EdgeSE3Expmap() :$/;"	f	class:g2o::EdgeSE3Expmap
VertexSE3Expmap	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^VertexSE3Expmap::VertexSE3Expmap() : BaseVertex<6, SE3Quat>() {$/;"	f	class:g2o::VertexSE3Expmap
cam_map	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^Vector2d  CameraParameters::cam_map(const Vector3d & trans_xyz) const {$/;"	f	class:g2o::CameraParameters
computeError	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^void EdgeProjectPSI2UV::computeError(){$/;"	f	class:g2o::EdgeProjectPSI2UV
d_Tinvpsi_d_psi	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^inline Matrix3d d_Tinvpsi_d_psi(const SE3Quat & T, const Vector3d & psi){$/;"	f	namespace:g2o
d_expy_d_y	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^inline Matrix<double,3,6> d_expy_d_y(const Vector3d & y){$/;"	f	namespace:g2o
d_proj_d_y	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^inline Matrix<double,2,3> d_proj_d_y(const double & f, const Vector3d & xyz){$/;"	f	namespace:g2o
expmap	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^G2O_REGISTER_TYPE_GROUP(expmap);$/;"	v
g2o	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^namespace g2o {$/;"	n	file:
invert_depth	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^inline Vector3d invert_depth(const Vector3d & x){$/;"	f	namespace:g2o
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^void EdgeProjectPSI2UV::linearizeOplus(){$/;"	f	class:g2o::EdgeProjectPSI2UV
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^void EdgeProjectXYZ2UV::linearizeOplus() {$/;"	f	class:g2o::EdgeProjectXYZ2UV
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^void EdgeSE3Expmap::linearizeOplus() {$/;"	f	class:g2o::EdgeSE3Expmap
project2d	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^Vector2d project2d(const Vector3d& v)  {$/;"	f	namespace:g2o
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^bool EdgeProjectPSI2UV::read(std::istream& is) {$/;"	f	class:g2o::EdgeProjectPSI2UV
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^bool EdgeProjectXYZ2UV::read(std::istream& is){$/;"	f	class:g2o::EdgeProjectXYZ2UV
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^bool EdgeProjectXYZ2UVU::read(std::istream& is){$/;"	f	class:g2o::EdgeProjectXYZ2UVU
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^bool EdgeSE3Expmap::read(std::istream& is)  {$/;"	f	class:g2o::EdgeSE3Expmap
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^bool VertexSE3Expmap::read(std::istream& is) {$/;"	f	class:g2o::VertexSE3Expmap
stereocam_uvu_map	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^Vector3d CameraParameters::stereocam_uvu_map(const Vector3d & trans_xyz) const {$/;"	f	class:g2o::CameraParameters
unproject2d	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^Vector3d unproject2d(const Vector2d& v)  {$/;"	f	namespace:g2o
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^bool EdgeProjectPSI2UV::write(std::ostream& os) const  {$/;"	f	class:g2o::EdgeProjectPSI2UV
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^bool EdgeProjectXYZ2UV::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeProjectXYZ2UV
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^bool EdgeProjectXYZ2UVU::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeProjectXYZ2UVU
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^bool EdgeSE3Expmap::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE3Expmap
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.cpp	/^bool VertexSE3Expmap::write(std::ostream& os) const {$/;"	f	class:g2o::VertexSE3Expmap
CameraParameters	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  CameraParameters(double focal_length,$/;"	f	class:g2o::CameraParameters
CameraParameters	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^class G2O_TYPES_SBA_API CameraParameters : public g2o::Parameter$/;"	c	namespace:g2o
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::CameraParameters
EdgeProjectPSI2UV	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  EdgeProjectPSI2UV()  {$/;"	f	class:g2o::EdgeProjectPSI2UV
EdgeProjectPSI2UV	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^class G2O_TYPES_SBA_API EdgeProjectPSI2UV : public  g2o::BaseMultiEdge<2, Vector2d>$/;"	c	namespace:g2o
EdgeProjectXYZ2UV	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^class G2O_TYPES_SBA_API EdgeProjectXYZ2UV : public  BaseBinaryEdge<2, Vector2d, VertexSBAPointXYZ, VertexSE3Expmap>{$/;"	c	namespace:g2o
EdgeProjectXYZ2UVU	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^class G2O_TYPES_SBA_API EdgeProjectXYZ2UVU : public  BaseBinaryEdge<3, Vector3d, VertexSBAPointXYZ, VertexSE3Expmap>{$/;"	c	namespace:g2o
EdgeSE3Expmap	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^class G2O_TYPES_SBA_API EdgeSE3Expmap : public BaseBinaryEdge<6, SE3Quat, VertexSE3Expmap, VertexSE3Expmap>{$/;"	c	namespace:g2o
G2O_SIX_DOF_TYPES_EXPMAP	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	28;"	d
Matrix6d	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^typedef Matrix<double, 6, 6> Matrix6d;$/;"	t	namespace:g2o
VertexSE3Expmap	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^class G2O_TYPES_SBA_API VertexSE3Expmap : public BaseVertex<6, SE3Quat>{$/;"	c	namespace:g2o
_cam	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  CameraParameters * _cam;$/;"	m	class:g2o::EdgeProjectPSI2UV
_cam	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  CameraParameters * _cam;$/;"	m	class:g2o::EdgeProjectXYZ2UV
baseline	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  double baseline;$/;"	m	class:g2o::CameraParameters
computeError	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  void computeError()  {$/;"	f	class:g2o::EdgeProjectXYZ2UV
computeError	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  void computeError()  {$/;"	f	class:g2o::EdgeSE3Expmap
computeError	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  void computeError(){$/;"	f	class:g2o::EdgeProjectXYZ2UVU
focal_length	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  double focal_length;$/;"	m	class:g2o::CameraParameters
g2o	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^namespace g2o {$/;"	n
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  virtual void oplusImpl(const double* update_)  {$/;"	f	class:g2o::VertexSE3Expmap
principle_point	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  Vector2d principle_point;$/;"	m	class:g2o::CameraParameters
read	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  virtual bool read (std::istream& is){$/;"	f	class:g2o::CameraParameters
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexSE3Expmap
types_six_dof_expmap	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^namespace types_six_dof_expmap {$/;"	n	namespace:g2o
write	trunk/EXTERNAL/g2o/g2o/types/sba/types_six_dof_expmap.h	/^  virtual bool write (std::ostream& os) const {$/;"	f	class:g2o::CameraParameters
EdgeSE2OdomDifferentialCalib	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.cpp	/^  EdgeSE2OdomDifferentialCalib::EdgeSE2OdomDifferentialCalib() :$/;"	f	class:g2o::EdgeSE2OdomDifferentialCalib
EdgeSE2OdomDifferentialCalibDrawAction	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.cpp	/^  EdgeSE2OdomDifferentialCalibDrawAction::EdgeSE2OdomDifferentialCalibDrawAction() :$/;"	f	class:g2o::EdgeSE2OdomDifferentialCalibDrawAction
g2o	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.cpp	/^  HyperGraphElementAction* EdgeSE2OdomDifferentialCalibDrawAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* )$/;"	f	class:g2o::EdgeSE2OdomDifferentialCalibDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.cpp	/^  bool EdgeSE2OdomDifferentialCalib::read(std::istream& is)$/;"	f	class:g2o::EdgeSE2OdomDifferentialCalib
write	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.cpp	/^  bool EdgeSE2OdomDifferentialCalib::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSE2OdomDifferentialCalib
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::EdgeSE2OdomDifferentialCalib
EdgeSE2OdomDifferentialCalib	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.h	/^  class G2O_TYPES_SCLAM2D_API EdgeSE2OdomDifferentialCalib : public BaseMultiEdge<3, VelocityMeasurement>$/;"	c	namespace:g2o
EdgeSE2OdomDifferentialCalibDrawAction	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.h	/^  class G2O_TYPES_SCLAM2D_API EdgeSE2OdomDifferentialCalibDrawAction: public DrawAction {$/;"	c	namespace:g2o
G2O_EDGE_SE2_ODOM_CALIB_DIFFERENTIAL_H	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.h	28;"	d
computeError	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.h	/^      void computeError()$/;"	f	class:g2o::EdgeSE2OdomDifferentialCalib
g2o	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_odom_differential_calib.h	/^namespace g2o {$/;"	n
EdgeSE2SensorCalib	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.cpp	/^  EdgeSE2SensorCalib::EdgeSE2SensorCalib() :$/;"	f	class:g2o::EdgeSE2SensorCalib
EdgeSE2SensorCalibDrawAction	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.cpp	/^  EdgeSE2SensorCalibDrawAction::EdgeSE2SensorCalibDrawAction() : $/;"	f	class:g2o::EdgeSE2SensorCalibDrawAction
g2o	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.cpp	/^  void EdgeSE2SensorCalib::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to)$/;"	f	class:g2o::EdgeSE2SensorCalib
operator ()	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.cpp	/^  HyperGraphElementAction* EdgeSE2SensorCalibDrawAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* )$/;"	f	class:g2o::EdgeSE2SensorCalibDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.cpp	/^  bool EdgeSE2SensorCalib::read(std::istream& is)$/;"	f	class:g2o::EdgeSE2SensorCalib
write	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.cpp	/^  bool EdgeSE2SensorCalib::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSE2SensorCalib
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::EdgeSE2SensorCalib
EdgeSE2SensorCalib	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.h	/^  class G2O_TYPES_SCLAM2D_API EdgeSE2SensorCalib : public BaseMultiEdge<3, SE2>$/;"	c	namespace:g2o
EdgeSE2SensorCalibDrawAction	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.h	/^  class EdgeSE2SensorCalibDrawAction: public DrawAction {$/;"	c	namespace:g2o
G2O_EDGE_SE2_SENSOR_CALIB_H	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.h	28;"	d
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.h	/^      SE2 _inverseMeasurement;$/;"	m	class:g2o::EdgeSE2SensorCalib
computeError	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.h	/^      void computeError()$/;"	f	class:g2o::EdgeSE2SensorCalib
g2o	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.h	/^namespace g2o {$/;"	n
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to)$/;"	f	class:g2o::EdgeSE2SensorCalib
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/edge_se2_sensor_calib.h	/^      void setMeasurement(const SE2& m){$/;"	f	class:g2o::EdgeSE2SensorCalib
G2O_TYPES_SCLAM2D_API	trunk/EXTERNAL/g2o/g2o/types/sclam2d/g2o_types_sclam2d_api.h	19;"	d
G2O_TYPES_SCLAM2D_API	trunk/EXTERNAL/g2o/g2o/types/sclam2d/g2o_types_sclam2d_api.h	21;"	d
G2O_TYPES_SCLAM2D_API	trunk/EXTERNAL/g2o/g2o/types/sclam2d/g2o_types_sclam2d_api.h	24;"	d
G2O_TYPES_SCLAM2D_API	trunk/EXTERNAL/g2o/g2o/types/sclam2d/g2o_types_sclam2d_api.h	29;"	d
G2O_TYPES_SCLAM2D_API_H	trunk/EXTERNAL/g2o/g2o/types/sclam2d/g2o_types_sclam2d_api.h	11;"	d
MotionMeasurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.cpp	/^  MotionMeasurement::MotionMeasurement() :$/;"	f	class:g2o::MotionMeasurement
MotionMeasurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.cpp	/^  MotionMeasurement::MotionMeasurement(const Eigen::Vector3d& m, double dt) :$/;"	f	class:g2o::MotionMeasurement
MotionMeasurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.cpp	/^  MotionMeasurement::MotionMeasurement(double x, double y, double theta, double dt) :$/;"	f	class:g2o::MotionMeasurement
VelocityMeasurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.cpp	/^  VelocityMeasurement::VelocityMeasurement() :$/;"	f	class:g2o::VelocityMeasurement
VelocityMeasurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.cpp	/^  VelocityMeasurement::VelocityMeasurement(double vl, double vr, double dt) :$/;"	f	class:g2o::VelocityMeasurement
convertToMotion	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.cpp	/^  MotionMeasurement OdomConvert::convertToMotion(const VelocityMeasurement& v, double l)$/;"	f	class:g2o::OdomConvert
convertToVelocity	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.cpp	/^  VelocityMeasurement OdomConvert::convertToVelocity(const MotionMeasurement& m)$/;"	f	class:g2o::OdomConvert
g2o	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.cpp	/^namespace g2o {$/;"	n	file:
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::MotionMeasurement
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::VelocityMeasurement
G2O_ODOMETRY_MEASUREMENT_H	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	28;"	d
MotionMeasurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^  class G2O_TYPES_SCLAM2D_API MotionMeasurement$/;"	c	namespace:g2o
OdomConvert	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^  class G2O_TYPES_SCLAM2D_API OdomConvert$/;"	c	namespace:g2o
VelocityMeasurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^  class G2O_TYPES_SCLAM2D_API VelocityMeasurement$/;"	c	namespace:g2o
_dt	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      double _dt;$/;"	m	class:g2o::MotionMeasurement
_dt	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      double _dt;$/;"	m	class:g2o::VelocityMeasurement
_measurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      Eigen::Vector2d _measurement;$/;"	m	class:g2o::VelocityMeasurement
_measurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      Eigen::Vector3d _measurement;$/;"	m	class:g2o::MotionMeasurement
dt	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      double dt() const { return _dt;}$/;"	f	class:g2o::MotionMeasurement
dt	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      double dt() const { return _dt;}$/;"	f	class:g2o::VelocityMeasurement
g2o	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^namespace g2o {$/;"	n
measurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      const Eigen::Vector2d& measurement() const { return _measurement;}$/;"	f	class:g2o::VelocityMeasurement
measurement	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      const Eigen::Vector3d& measurement() const { return _measurement;}$/;"	f	class:g2o::MotionMeasurement
setDt	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      void setDt(double t) { _dt = t;}$/;"	f	class:g2o::MotionMeasurement
setDt	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      void setDt(double t) { _dt = t;}$/;"	f	class:g2o::VelocityMeasurement
setTheta	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      void setTheta(double v) { _measurement(2) = v;}$/;"	f	class:g2o::MotionMeasurement
setVl	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      void setVl(double v) { _measurement(0) = v;}$/;"	f	class:g2o::VelocityMeasurement
setVr	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      void setVr(double v) { _measurement(1) = v;}$/;"	f	class:g2o::VelocityMeasurement
setX	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      void setX(double v) { _measurement(0) = v;}$/;"	f	class:g2o::MotionMeasurement
setY	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      void setY(double v) { _measurement(1) = v;}$/;"	f	class:g2o::MotionMeasurement
theta	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      double theta() const { return _measurement(2);}$/;"	f	class:g2o::MotionMeasurement
vl	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      double vl() const { return _measurement(0);}$/;"	f	class:g2o::VelocityMeasurement
vr	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      double vr() const { return _measurement(1);}$/;"	f	class:g2o::VelocityMeasurement
x	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      double x() const { return _measurement(0);}$/;"	f	class:g2o::MotionMeasurement
y	trunk/EXTERNAL/g2o/g2o/types/sclam2d/odometry_measurement.h	/^      double y() const { return _measurement(1);}$/;"	f	class:g2o::MotionMeasurement
EdgeSE2OdomDifferentialCalibDrawAction	trunk/EXTERNAL/g2o/g2o/types/sclam2d/types_sclam2d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE2OdomDifferentialCalibDrawAction);$/;"	v
EdgeSE2SensorCalibDrawAction	trunk/EXTERNAL/g2o/g2o/types/sclam2d/types_sclam2d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE2SensorCalibDrawAction);$/;"	v
g2o	trunk/EXTERNAL/g2o/g2o/types/sclam2d/types_sclam2d.cpp	/^namespace g2o {$/;"	n	file:
sclam	trunk/EXTERNAL/g2o/g2o/types/sclam2d/types_sclam2d.cpp	/^  G2O_REGISTER_TYPE_GROUP(sclam);$/;"	v
slam2d	trunk/EXTERNAL/g2o/g2o/types/sclam2d/types_sclam2d.cpp	/^  G2O_USE_TYPE_GROUP(slam2d);$/;"	v
G2O_TYPES_SCLAM_H	trunk/EXTERNAL/g2o/g2o/types/sclam2d/types_sclam2d.h	28;"	d
VertexOdomDifferentialParams	trunk/EXTERNAL/g2o/g2o/types/sclam2d/vertex_odom_differential_params.cpp	/^  VertexOdomDifferentialParams::VertexOdomDifferentialParams() :$/;"	f	class:g2o::VertexOdomDifferentialParams
g2o	trunk/EXTERNAL/g2o/g2o/types/sclam2d/vertex_odom_differential_params.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/types/sclam2d/vertex_odom_differential_params.cpp	/^  bool VertexOdomDifferentialParams::read(std::istream& is)$/;"	f	class:g2o::VertexOdomDifferentialParams
write	trunk/EXTERNAL/g2o/g2o/types/sclam2d/vertex_odom_differential_params.cpp	/^  bool VertexOdomDifferentialParams::write(std::ostream& os) const$/;"	f	class:g2o::VertexOdomDifferentialParams
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/sclam2d/vertex_odom_differential_params.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::VertexOdomDifferentialParams
G2O_VERTEX_ODOM_DIFFERENTIAL_PARAMS_H	trunk/EXTERNAL/g2o/g2o/types/sclam2d/vertex_odom_differential_params.h	28;"	d
VertexOdomDifferentialParams	trunk/EXTERNAL/g2o/g2o/types/sclam2d/vertex_odom_differential_params.h	/^  class G2O_TYPES_SCLAM2D_API VertexOdomDifferentialParams: public BaseVertex <3, Vector3d> {$/;"	c	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/sclam2d/vertex_odom_differential_params.h	/^namespace g2o {$/;"	n
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/sclam2d/vertex_odom_differential_params.h	/^      virtual void oplusImpl(const double* v) {$/;"	f	class:g2o::VertexOdomDifferentialParams
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/sclam2d/vertex_odom_differential_params.h	/^      virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexOdomDifferentialParams
G2O_SIM_3	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	28;"	d
Matrix7d	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^  typedef  Matrix <double, 7, 7> Matrix7d;$/;"	t	namespace:g2o
Sim3	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    Sim3()$/;"	f	struct:g2o::Sim3
Sim3	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    Sim3(const Matrix3d & R, const Vector3d & t, double s)$/;"	f	struct:g2o::Sim3
Sim3	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    Sim3(const Quaterniond & r, const Vector3d & t, double s)$/;"	f	struct:g2o::Sim3
Sim3	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    Sim3(const Vector7d & update)$/;"	f	struct:g2o::Sim3
Sim3	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^  struct Sim3$/;"	s	namespace:g2o
Vector7d	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^  typedef  Matrix <double, 7, 1> Vector7d;$/;"	t	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^namespace g2o$/;"	n
inverse	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    Sim3 inverse() const$/;"	f	struct:g2o::Sim3
log	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    Vector7d log() const$/;"	f	struct:g2o::Sim3
map	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^     Vector3d map (const Vector3d& xyz) const {$/;"	f	struct:g2o::Sim3
operator *	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    Sim3 operator *(const Sim3& other) const {$/;"	f	struct:g2o::Sim3
operator *=	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    Sim3& operator *=(const Sim3& other){$/;"	f	struct:g2o::Sim3
operator <<	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^  inline std::ostream& operator <<(std::ostream& out_str,$/;"	f	namespace:g2o
operator []	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    double operator[](int i) const$/;"	f	struct:g2o::Sim3
operator []	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    double& operator[](int i)$/;"	f	struct:g2o::Sim3
r	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    Quaterniond r;$/;"	m	struct:g2o::Sim3
rotation	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    inline Quaterniond& rotation() {return r;}$/;"	f	struct:g2o::Sim3
rotation	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    inline const Quaterniond& rotation() const {return r;}$/;"	f	struct:g2o::Sim3
s	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    double s;$/;"	m	struct:g2o::Sim3
scale	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    inline const double& scale() const {return s;}$/;"	f	struct:g2o::Sim3
scale	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    inline double& scale() {return s;}$/;"	f	struct:g2o::Sim3
t	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    Vector3d t;$/;"	m	struct:g2o::Sim3
translation	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    inline Vector3d& translation() {return t;}$/;"	f	struct:g2o::Sim3
translation	trunk/EXTERNAL/g2o/g2o/types/sim3/sim3.h	/^    inline const Vector3d& translation() const {return t;}$/;"	f	struct:g2o::Sim3
EdgeSim3	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  EdgeSim3::EdgeSim3() :$/;"	f	class:g2o::EdgeSim3
EdgeSim3ProjectXYZ	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  EdgeSim3ProjectXYZ::EdgeSim3ProjectXYZ() :$/;"	f	class:g2o::EdgeSim3ProjectXYZ
VertexSim3Expmap	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  VertexSim3Expmap::VertexSim3Expmap() : BaseVertex<7, Sim3>()$/;"	f	class:g2o::VertexSim3Expmap
g2o	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  bool EdgeSim3::read(std::istream& is)$/;"	f	class:g2o::EdgeSim3
read	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  bool EdgeSim3ProjectXYZ::read(std::istream& is)$/;"	f	class:g2o::EdgeSim3ProjectXYZ
read	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  bool VertexSim3Expmap::read(std::istream& is)$/;"	f	class:g2o::VertexSim3Expmap
sba	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  G2O_USE_TYPE_GROUP(sba);$/;"	v
sim3	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  G2O_REGISTER_TYPE_GROUP(sim3);$/;"	v
write	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  bool EdgeSim3::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSim3
write	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  bool EdgeSim3ProjectXYZ::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSim3ProjectXYZ
write	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.cpp	/^  bool VertexSim3Expmap::write(std::ostream& os) const$/;"	f	class:g2o::VertexSim3Expmap
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::VertexSim3Expmap
EdgeSim3	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^  class EdgeSim3 : public BaseBinaryEdge<7, Sim3, VertexSim3Expmap, VertexSim3Expmap>$/;"	c	namespace:g2o
EdgeSim3ProjectXYZ	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^class EdgeSim3ProjectXYZ : public  BaseBinaryEdge<2, Vector2d,  VertexSBAPointXYZ, VertexSim3Expmap>$/;"	c	namespace:g2o
G2O_SEVEN_DOF_EXPMAP_TYPES	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	28;"	d
VertexSim3Expmap	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^  class VertexSim3Expmap : public BaseVertex<7, Sim3>$/;"	c	namespace:g2o
_fix_scale	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    bool _fix_scale;$/;"	m	class:g2o::VertexSim3Expmap
_focal_length	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    Vector2d _focal_length;$/;"	m	class:g2o::VertexSim3Expmap
_principle_point	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    Vector2d _principle_point;$/;"	m	class:g2o::VertexSim3Expmap
cam_map	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    Vector2d cam_map(const Vector2d & v) const$/;"	f	class:g2o::VertexSim3Expmap
computeError	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    void computeError()$/;"	f	class:g2o::EdgeSim3
computeError	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    void computeError()$/;"	f	class:g2o::EdgeSim3ProjectXYZ
g2o	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^namespace g2o {$/;"	n
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    virtual void initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to*\/)$/;"	f	class:g2o::EdgeSim3
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& , OptimizableGraph::Vertex* ) { return 1.;}$/;"	f	class:g2o::EdgeSim3
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    virtual void oplusImpl(const double* update_)$/;"	f	class:g2o::VertexSim3Expmap
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/sim3/types_seven_dof_expmap.h	/^    virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexSim3Expmap
EdgeSE2	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.cpp	/^  EdgeSE2::EdgeSE2() :$/;"	f	class:g2o::EdgeSE2
EdgeSE2DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.cpp	/^  EdgeSE2DrawAction::EdgeSE2DrawAction(): DrawAction(typeid(EdgeSE2).name()){}$/;"	f	class:g2o::EdgeSE2DrawAction
EdgeSE2WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.cpp	/^  EdgeSE2WriteGnuplotAction::EdgeSE2WriteGnuplotAction(): WriteGnuplotAction(typeid(EdgeSE2).name()){}$/;"	f	class:g2o::EdgeSE2WriteGnuplotAction
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.cpp	/^  void EdgeSE2::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/* to *\/)$/;"	f	class:g2o::EdgeSE2
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.cpp	/^  void EdgeSE2::linearizeOplus()$/;"	f	class:g2o::EdgeSE2
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.cpp	/^  HyperGraphElementAction* EdgeSE2DrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::EdgeSE2DrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.cpp	/^  HyperGraphElementAction* EdgeSE2WriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::EdgeSE2WriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.cpp	/^  bool EdgeSE2::read(std::istream& is)$/;"	f	class:g2o::EdgeSE2
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.cpp	/^  bool EdgeSE2::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSE2
EdgeSE2	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2 : public BaseBinaryEdge<3, SE2, VertexSE2, VertexSE2>$/;"	c	namespace:g2o
EdgeSE2DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2DrawAction: public DrawAction{$/;"	c	namespace:g2o
EdgeSE2WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2WriteGnuplotAction: public WriteGnuplotAction {$/;"	c	namespace:g2o
G2O_EDGE_SE2_H	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	28;"	d
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^      SE2 _inverseMeasurement;$/;"	m	class:g2o::EdgeSE2
computeError	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^      void computeError()$/;"	f	class:g2o::EdgeSE2
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^      virtual bool getMeasurementData(double* d) const {$/;"	f	class:g2o::EdgeSE2
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& , OptimizableGraph::Vertex* ) { return 1.;}$/;"	f	class:g2o::EdgeSE2
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^      virtual int measurementDimension() const {return 3;}$/;"	f	class:g2o::EdgeSE2
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^      virtual void setMeasurement(const SE2& m){$/;"	f	class:g2o::EdgeSE2
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^      virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::EdgeSE2
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2.h	/^      virtual bool setMeasurementFromState() {$/;"	f	class:g2o::EdgeSE2
EdgeSE2Offset	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.cpp	/^  EdgeSE2Offset::EdgeSE2Offset() : BaseBinaryEdge<3, SE2, VertexSE2, VertexSE2>() {$/;"	f	class:g2o::EdgeSE2Offset
computeError	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.cpp	/^  void EdgeSE2Offset::computeError() {$/;"	f	class:g2o::EdgeSE2Offset
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.cpp	/^  void EdgeSE2Offset::initialEstimate(const OptimizableGraph::VertexSet& from_, OptimizableGraph::Vertex* \/*to_*\/) {$/;"	f	class:g2o::EdgeSE2Offset
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.cpp	/^  bool EdgeSE2Offset::read(std::istream& is) {$/;"	f	class:g2o::EdgeSE2Offset
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.cpp	/^  bool EdgeSE2Offset::resolveCaches(){$/;"	f	class:g2o::EdgeSE2Offset
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.cpp	/^  bool EdgeSE2Offset::setMeasurementFromState(){$/;"	f	class:g2o::EdgeSE2Offset
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.cpp	/^  bool EdgeSE2Offset::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE2Offset
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::EdgeSE2Offset
EdgeSE2Offset	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2Offset : public BaseBinaryEdge<3, SE2, VertexSE2, VertexSE2> {$/;"	c	namespace:g2o
G2O_EDGE_SE2_OFFSET_H_	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	28;"	d
_cacheFrom	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      CacheSE2Offset  *_cacheFrom, *_cacheTo;$/;"	m	class:g2o::EdgeSE2Offset
_cacheTo	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      CacheSE2Offset  *_cacheFrom, *_cacheTo;$/;"	m	class:g2o::EdgeSE2Offset
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      SE2 _inverseMeasurement;$/;"	m	class:g2o::EdgeSE2Offset
_offsetFrom	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      ParameterSE2Offset *_offsetFrom, *_offsetTo;$/;"	m	class:g2o::EdgeSE2Offset
_offsetTo	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      ParameterSE2Offset *_offsetFrom, *_offsetTo;$/;"	m	class:g2o::EdgeSE2Offset
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::EdgeSE2Offset
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& \/*from*\/, $/;"	f	class:g2o::EdgeSE2Offset
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      virtual int measurementDimension() const {return 3;}$/;"	f	class:g2o::EdgeSE2Offset
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      virtual void setMeasurement(const SE2& m){$/;"	f	class:g2o::EdgeSE2Offset
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_offset.h	/^      virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::EdgeSE2Offset
EdgeSE2PointXY	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.cpp	/^  EdgeSE2PointXY::EdgeSE2PointXY() :$/;"	f	class:g2o::EdgeSE2PointXY
EdgeSE2PointXYDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.cpp	/^  EdgeSE2PointXYDrawAction::EdgeSE2PointXYDrawAction(): DrawAction(typeid(EdgeSE2PointXY).name()){}$/;"	f	class:g2o::EdgeSE2PointXYDrawAction
EdgeSE2PointXYWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.cpp	/^  EdgeSE2PointXYWriteGnuplotAction::EdgeSE2PointXYWriteGnuplotAction(): WriteGnuplotAction(typeid(EdgeSE2PointXY).name()){}$/;"	f	class:g2o::EdgeSE2PointXYWriteGnuplotAction
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.cpp	/^  void EdgeSE2PointXY::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to)$/;"	f	class:g2o::EdgeSE2PointXY
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.cpp	/^  void EdgeSE2PointXY::linearizeOplus()$/;"	f	class:g2o::EdgeSE2PointXY
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.cpp	/^  HyperGraphElementAction* EdgeSE2PointXYDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::EdgeSE2PointXYDrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.cpp	/^  HyperGraphElementAction* EdgeSE2PointXYWriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::EdgeSE2PointXYWriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.cpp	/^  bool EdgeSE2PointXY::read(std::istream& is)$/;"	f	class:g2o::EdgeSE2PointXY
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.cpp	/^  bool EdgeSE2PointXY::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSE2PointXY
EdgeSE2PointXY	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2PointXY : public BaseBinaryEdge<2, Eigen::Vector2d, VertexSE2, VertexPointXY>$/;"	c	namespace:g2o
EdgeSE2PointXYDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2PointXYDrawAction: public DrawAction{$/;"	c	namespace:g2o
EdgeSE2PointXYWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2PointXYWriteGnuplotAction: public WriteGnuplotAction {$/;"	c	namespace:g2o
G2O_EDGE_SE2_POINT_XY_H	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	28;"	d
computeError	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	/^      void computeError()$/;"	f	class:g2o::EdgeSE2PointXY
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	/^      virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::EdgeSE2PointXY
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to) { (void) to; return (from.count(_vertices[0]) == 1 ? 1.0 : -1.0);}$/;"	f	class:g2o::EdgeSE2PointXY
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	/^      virtual int measurementDimension() const {return 2;}$/;"	f	class:g2o::EdgeSE2PointXY
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	/^      virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::EdgeSE2PointXY
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy.h	/^      virtual bool setMeasurementFromState(){$/;"	f	class:g2o::EdgeSE2PointXY
EdgeSE2PointXYBearing	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.cpp	/^  EdgeSE2PointXYBearing::EdgeSE2PointXYBearing()$/;"	f	class:g2o::EdgeSE2PointXYBearing
EdgeSE2PointXYBearingDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.cpp	/^  EdgeSE2PointXYBearingDrawAction::EdgeSE2PointXYBearingDrawAction(): DrawAction(typeid(EdgeSE2PointXYBearing).name()){}$/;"	f	class:g2o::EdgeSE2PointXYBearingDrawAction
EdgeSE2PointXYBearingWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.cpp	/^  EdgeSE2PointXYBearingWriteGnuplotAction::EdgeSE2PointXYBearingWriteGnuplotAction(): WriteGnuplotAction(typeid(EdgeSE2PointXYBearing).name()){}$/;"	f	class:g2o::EdgeSE2PointXYBearingWriteGnuplotAction
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.cpp	/^  void EdgeSE2PointXYBearing::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to*\/)$/;"	f	class:g2o::EdgeSE2PointXYBearing
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.cpp	/^  HyperGraphElementAction* EdgeSE2PointXYBearingDrawAction::operator()(HyperGraph::HyperGraphElement* element,  HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::EdgeSE2PointXYBearingDrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.cpp	/^  HyperGraphElementAction* EdgeSE2PointXYBearingWriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element,$/;"	f	class:g2o::EdgeSE2PointXYBearingWriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.cpp	/^  bool EdgeSE2PointXYBearing::read(std::istream& is)$/;"	f	class:g2o::EdgeSE2PointXYBearing
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.cpp	/^  bool EdgeSE2PointXYBearing::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSE2PointXYBearing
EdgeSE2PointXYBearing	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2PointXYBearing: public BaseBinaryEdge<1, double, VertexSE2, VertexPointXY>$/;"	c	namespace:g2o
EdgeSE2PointXYBearingDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2PointXYBearingDrawAction: public DrawAction{$/;"	c	namespace:g2o
EdgeSE2PointXYBearingWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2PointXYBearingWriteGnuplotAction: public WriteGnuplotAction {$/;"	c	namespace:g2o
G2O_EDGE_SE2_POINT_XY_BEARING_H	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	28;"	d
computeError	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	/^      void computeError()$/;"	f	class:g2o::EdgeSE2PointXYBearing
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	/^      virtual bool getMeasurementData(double* d) const {$/;"	f	class:g2o::EdgeSE2PointXYBearing
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex*) { return (from.count(_vertices[0]) == 1 ? 1.0 : -1.0);}$/;"	f	class:g2o::EdgeSE2PointXYBearing
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	/^      int measurementDimension() const {return 1;}$/;"	f	class:g2o::EdgeSE2PointXYBearing
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	/^      virtual bool setMeasurementData(const double* d) {$/;"	f	class:g2o::EdgeSE2PointXYBearing
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_bearing.h	/^      virtual bool setMeasurementFromState(){$/;"	f	class:g2o::EdgeSE2PointXYBearing
EdgeSE2PointXYCalib	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_calib.cpp	/^  EdgeSE2PointXYCalib::EdgeSE2PointXYCalib() :$/;"	f	class:g2o::EdgeSE2PointXYCalib
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_calib.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_calib.cpp	/^  void EdgeSE2PointXYCalib::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to*\/)$/;"	f	class:g2o::EdgeSE2PointXYCalib
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_calib.cpp	/^  bool EdgeSE2PointXYCalib::read(std::istream& is)$/;"	f	class:g2o::EdgeSE2PointXYCalib
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_calib.cpp	/^  bool EdgeSE2PointXYCalib::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSE2PointXYCalib
EdgeSE2PointXYCalib	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_calib.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2PointXYCalib : public BaseMultiEdge<2, Eigen::Vector2d>$/;"	c	namespace:g2o
G2O_EDGE_SE2_XY_CALIB_H	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_calib.h	28;"	d
computeError	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_calib.h	/^      void computeError()$/;"	f	class:g2o::EdgeSE2PointXYCalib
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_calib.h	/^namespace g2o {$/;"	n
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_calib.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to) { (void) to; return (from.count(_vertices[0]) == 1 ? 1.0 : -1.0);}$/;"	f	class:g2o::EdgeSE2PointXYCalib
EdgeSE2PointXYOffset	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.cpp	/^  EdgeSE2PointXYOffset::EdgeSE2PointXYOffset() : BaseBinaryEdge<2, Vector2d, VertexSE2, VertexPointXY>() {$/;"	f	class:g2o::EdgeSE2PointXYOffset
computeError	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.cpp	/^  void EdgeSE2PointXYOffset::computeError() {$/;"	f	class:g2o::EdgeSE2PointXYOffset
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.cpp	/^  void EdgeSE2PointXYOffset::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to_*\/)$/;"	f	class:g2o::EdgeSE2PointXYOffset
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.cpp	/^  void EdgeSE2PointXYOffset::linearizeOplus() {$/;"	f	class:g2o::EdgeSE2PointXYOffset
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.cpp	/^  bool EdgeSE2PointXYOffset::read(std::istream& is) {$/;"	f	class:g2o::EdgeSE2PointXYOffset
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.cpp	/^  bool EdgeSE2PointXYOffset::resolveCaches(){$/;"	f	class:g2o::EdgeSE2PointXYOffset
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.cpp	/^  bool EdgeSE2PointXYOffset::setMeasurementFromState(){$/;"	f	class:g2o::EdgeSE2PointXYOffset
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.cpp	/^  bool EdgeSE2PointXYOffset::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE2PointXYOffset
EdgeSE2PointXYOffset	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2PointXYOffset : public BaseBinaryEdge<2, Vector2d, VertexSE2, VertexPointXY> {$/;"	c	namespace:g2o
G2O_EDGE_SE2_POINT_XY_OFFSET_H_	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.h	28;"	d
cache	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.h	/^    CacheSE2Offset* cache;$/;"	m	class:g2o::EdgeSE2PointXYOffset
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::EdgeSE2PointXYOffset
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, $/;"	f	class:g2o::EdgeSE2PointXYOffset
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.h	/^    virtual int measurementDimension() const {return 3;}$/;"	f	class:g2o::EdgeSE2PointXYOffset
offsetParam	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.h	/^    ParameterSE2Offset* offsetParam;$/;"	m	class:g2o::EdgeSE2PointXYOffset
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.h	/^    virtual void setMeasurement(const Vector2d& m){$/;"	f	class:g2o::EdgeSE2PointXYOffset
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_pointxy_offset.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::EdgeSE2PointXYOffset
EdgeSE2Prior	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.cpp	/^  EdgeSE2Prior::EdgeSE2Prior() : BaseUnaryEdge<3, SE2, VertexSE2>()$/;"	f	class:g2o::EdgeSE2Prior
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.cpp	/^  void EdgeSE2Prior::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to)$/;"	f	class:g2o::EdgeSE2Prior
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.cpp	/^  bool EdgeSE2Prior::read(std::istream& is)$/;"	f	class:g2o::EdgeSE2Prior
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.cpp	/^  void EdgeSE2Prior::setMeasurement(const SE2& m)$/;"	f	class:g2o::EdgeSE2Prior
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.cpp	/^  bool EdgeSE2Prior::setMeasurementData(const double* d) {$/;"	f	class:g2o::EdgeSE2Prior
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.cpp	/^  bool EdgeSE2Prior::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSE2Prior
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::EdgeSE2Prior
EdgeSE2Prior	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2Prior : public BaseUnaryEdge<3, SE2, VertexSE2>$/;"	c	namespace:g2o
G2O_EDGE_SE2_PRIOR_H	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.h	28;"	d
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.h	/^      SE2 _inverseMeasurement;$/;"	m	class:g2o::EdgeSE2Prior
computeError	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.h	/^      void computeError()$/;"	f	class:g2o::EdgeSE2Prior
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.h	/^      virtual bool getMeasurementData(double* d) const {$/;"	f	class:g2o::EdgeSE2Prior
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& , OptimizableGraph::Vertex* ) { return 1.;}$/;"	f	class:g2o::EdgeSE2Prior
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_prior.h	/^      int measurementDimension() const {return 3;}$/;"	f	class:g2o::EdgeSE2Prior
EdgeSE2XYPrior	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.cpp	/^  EdgeSE2XYPrior::EdgeSE2XYPrior() : BaseUnaryEdge< 2, Eigen::Vector2d, g2o::VertexSE2 >()$/;"	f	class:g2o::EdgeSE2XYPrior
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.cpp	/^namespace g2o {$/;"	n	file:
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.cpp	/^  void EdgeSE2XYPrior::linearizeOplus()$/;"	f	class:g2o::EdgeSE2XYPrior
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.cpp	/^  bool EdgeSE2XYPrior::read(std::istream& is)$/;"	f	class:g2o::EdgeSE2XYPrior
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.cpp	/^  bool EdgeSE2XYPrior::write(std::ostream& os) const$/;"	f	class:g2o::EdgeSE2XYPrior
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::EdgeSE2XYPrior
EdgeSE2XYPrior	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.h	/^  class G2O_TYPES_SLAM2D_API EdgeSE2XYPrior : public BaseUnaryEdge<2, Eigen::Vector2d, VertexSE2>$/;"	c	namespace:g2o
G2O_EDGE_SE2_PRIOR_XY_H	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.h	28;"	d
computeError	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.h	/^    virtual void computeError()$/;"	f	class:g2o::EdgeSE2XYPrior
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.h	/^    virtual bool getMeasurementData(double* d) const$/;"	f	class:g2o::EdgeSE2XYPrior
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.h	/^    virtual int measurementDimension() const {return 2;}$/;"	f	class:g2o::EdgeSE2XYPrior
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam2d/edge_se2_xyprior.h	/^    virtual bool setMeasurementData(const double* d)$/;"	f	class:g2o::EdgeSE2XYPrior
G2O_TYPES_SLAM2D_API	trunk/EXTERNAL/g2o/g2o/types/slam2d/g2o_types_slam2d_api.h	19;"	d
G2O_TYPES_SLAM2D_API	trunk/EXTERNAL/g2o/g2o/types/slam2d/g2o_types_slam2d_api.h	21;"	d
G2O_TYPES_SLAM2D_API	trunk/EXTERNAL/g2o/g2o/types/slam2d/g2o_types_slam2d_api.h	24;"	d
G2O_TYPES_SLAM2D_API	trunk/EXTERNAL/g2o/g2o/types/slam2d/g2o_types_slam2d_api.h	29;"	d
G2O_TYPES_SLAM2D_API_H	trunk/EXTERNAL/g2o/g2o/types/slam2d/g2o_types_slam2d_api.h	11;"	d
CacheSE2Offset	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.cpp	/^  CacheSE2Offset::CacheSE2Offset() :$/;"	f	class:g2o::CacheSE2Offset
ParameterSE2Offset	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.cpp	/^  ParameterSE2Offset::ParameterSE2Offset(){$/;"	f	class:g2o::ParameterSE2Offset
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.cpp	/^  bool ParameterSE2Offset::read(std::istream& is) {$/;"	f	class:g2o::ParameterSE2Offset
resolveDependancies	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.cpp	/^  bool CacheSE2Offset::resolveDependancies(){$/;"	f	class:g2o::CacheSE2Offset
setOffset	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.cpp	/^  void ParameterSE2Offset::setOffset(const SE2& offset_){$/;"	f	class:g2o::ParameterSE2Offset
setOffsetParam	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.cpp	/^  void CacheSE2Offset::setOffsetParam(ParameterSE2Offset* offsetParam)$/;"	f	class:g2o::CacheSE2Offset
updateImpl	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.cpp	/^  void CacheSE2Offset::updateImpl(){$/;"	f	class:g2o::CacheSE2Offset
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.cpp	/^  bool ParameterSE2Offset::write(std::ostream& os) const {$/;"	f	class:g2o::ParameterSE2Offset
CacheSE2Offset	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^  class G2O_TYPES_SLAM2D_API CacheSE2Offset: public Cache {$/;"	c	namespace:g2o
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::CacheSE2Offset
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::ParameterSE2Offset
G2O_VERTEX_SE2_OFFSET_PARAMETERS_H_	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	28;"	d
ParameterSE2Offset	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^  class G2O_TYPES_SLAM2D_API ParameterSE2Offset: public Parameter$/;"	c	namespace:g2o
RpInverseRInverseMatrix	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const Eigen::Matrix2d RpInverseRInverseMatrix() const { return _RpInverse_RInverse; }$/;"	f	class:g2o::CacheSE2Offset
RpInverseRInversePrimeMatrix	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const Eigen::Matrix2d RpInverseRInversePrimeMatrix() const { return _RpInverse_RInversePrime; }$/;"	f	class:g2o::CacheSE2Offset
_RpInverse_RInverse	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      Matrix2d _RpInverse_RInverse;$/;"	m	class:g2o::CacheSE2Offset
_RpInverse_RInversePrime	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      Matrix2d _RpInverse_RInversePrime;$/;"	m	class:g2o::CacheSE2Offset
_inverseOffsetMatrix	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      Eigen::Isometry2d _inverseOffsetMatrix;$/;"	m	class:g2o::ParameterSE2Offset
_n2w	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      Eigen::Isometry2d _n2w; \/\/\/< sensor to world$/;"	m	class:g2o::CacheSE2Offset
_offset	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      SE2 _offset;$/;"	m	class:g2o::ParameterSE2Offset
_offsetMatrix	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      Eigen::Isometry2d _offsetMatrix;$/;"	m	class:g2o::ParameterSE2Offset
_offsetParam	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      ParameterSE2Offset* _offsetParam; \/\/\/< the parameter connected to the cache$/;"	m	class:g2o::CacheSE2Offset
_se2_n2w	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      SE2 _se2_n2w;$/;"	m	class:g2o::CacheSE2Offset
_se2_w2n	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      SE2 _se2_w2n;$/;"	m	class:g2o::CacheSE2Offset
_w2l	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      Eigen::Isometry2d _w2l; \/\/\/< world to local$/;"	m	class:g2o::CacheSE2Offset
_w2n	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      Eigen::Isometry2d _w2n; \/\/\/< world to sensor transform$/;"	m	class:g2o::CacheSE2Offset
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^namespace g2o {$/;"	n
inverseOffsetMatrix	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const Eigen::Isometry2d& inverseOffsetMatrix() const { return _inverseOffsetMatrix;}$/;"	f	class:g2o::ParameterSE2Offset
n2w	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const SE2& n2w() const {return _se2_n2w;}$/;"	f	class:g2o::CacheSE2Offset
n2wMatrix	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const Eigen::Isometry2d& n2wMatrix() const { return _n2w;}$/;"	f	class:g2o::CacheSE2Offset
offset	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const SE2& offset() const { return _offset;}$/;"	f	class:g2o::ParameterSE2Offset
offsetMatrix	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const Eigen::Isometry2d& offsetMatrix() const { return _offsetMatrix;}$/;"	f	class:g2o::ParameterSE2Offset
offsetParam	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const ParameterSE2Offset* offsetParam() const { return _offsetParam;}$/;"	f	class:g2o::CacheSE2Offset
w2lMatrix	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const Eigen::Isometry2d& w2lMatrix() const { return _w2l;}$/;"	f	class:g2o::CacheSE2Offset
w2n	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const SE2& w2n() const {return _se2_w2n;}$/;"	f	class:g2o::CacheSE2Offset
w2nMatrix	trunk/EXTERNAL/g2o/g2o/types/slam2d/parameter_se2_offset.h	/^      const Eigen::Isometry2d& w2nMatrix() const { return _w2n;}$/;"	f	class:g2o::CacheSE2Offset
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::SE2
G2O_SE2_H_	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	28;"	d
SE2	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      SE2():_R(0),_t(0,0){}$/;"	f	class:g2o::SE2
SE2	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      SE2(const Vector3d& v):_R(v[2]),_t(v[0],v[1]){}$/;"	f	class:g2o::SE2
SE2	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      SE2(double x, double y, double theta):_R(theta),_t(x,y){}$/;"	f	class:g2o::SE2
SE2	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^  class G2O_TYPES_SLAM2D_API SE2 {$/;"	c	namespace:g2o
_R	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      Rotation2Dd _R;$/;"	m	class:g2o::SE2
_t	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      Vector2d _t;$/;"	m	class:g2o::SE2
fromVector	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      inline void fromVector (const Vector3d& v){$/;"	f	class:g2o::SE2
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^namespace g2o {$/;"	n
inverse	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      inline SE2 inverse() const{$/;"	f	class:g2o::SE2
operator *	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      inline SE2 operator * (const SE2& tr2) const{$/;"	f	class:g2o::SE2
operator *	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      inline Vector2d operator * (const Vector2d& v) const {$/;"	f	class:g2o::SE2
operator *=	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      inline SE2& operator *= (const SE2& tr2){$/;"	f	class:g2o::SE2
operator Eigen::Isometry2d	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      operator Eigen::Isometry2d() const$/;"	f	class:g2o::SE2
operator []	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      inline double operator [](int i) const {$/;"	f	class:g2o::SE2
rotation	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      inline const Rotation2Dd& rotation() const {return _R;}$/;"	f	class:g2o::SE2
setRotation	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      void setRotation(const Rotation2Dd& R_) {_R=R_;}$/;"	f	class:g2o::SE2
setTranslation	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      void setTranslation(const Vector2d& t_) {_t=t_;}$/;"	f	class:g2o::SE2
toVector	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      inline Vector3d toVector() const {$/;"	f	class:g2o::SE2
translation	trunk/EXTERNAL/g2o/g2o/types/slam2d/se2.h	/^      inline const Vector2d& translation() const {return _t;}$/;"	f	class:g2o::SE2
EdgeSE2DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE2DrawAction);$/;"	v
EdgeSE2PointXYBearingDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE2PointXYBearingDrawAction);$/;"	v
EdgeSE2PointXYBearingWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE2PointXYBearingWriteGnuplotAction);$/;"	v
EdgeSE2PointXYDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE2PointXYDrawAction);$/;"	v
EdgeSE2PointXYWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE2PointXYWriteGnuplotAction);$/;"	v
EdgeSE2WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE2WriteGnuplotAction);$/;"	v
VertexPointXYDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_ACTION(VertexPointXYDrawAction);$/;"	v
VertexPointXYWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_ACTION(VertexPointXYWriteGnuplotAction);$/;"	v
VertexSE2DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_ACTION(VertexSE2DrawAction);$/;"	v
VertexSE2WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_ACTION(VertexSE2WriteGnuplotAction);$/;"	v
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^namespace g2o {$/;"	n	file:
slam2d	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.cpp	/^  G2O_REGISTER_TYPE_GROUP(slam2d);$/;"	v
G2O_TYPES_SLAM2D_	trunk/EXTERNAL/g2o/g2o/types/slam2d/types_slam2d.h	28;"	d
VertexPointXY	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.cpp	/^  VertexPointXY::VertexPointXY() :$/;"	f	class:g2o::VertexPointXY
VertexPointXYDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.cpp	/^  VertexPointXYDrawAction::VertexPointXYDrawAction(): DrawAction(typeid(VertexPointXY).name()){}$/;"	f	class:g2o::VertexPointXYDrawAction
VertexPointXYWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.cpp	/^  VertexPointXYWriteGnuplotAction::VertexPointXYWriteGnuplotAction(): WriteGnuplotAction(typeid(VertexPointXY).name()){}$/;"	f	class:g2o::VertexPointXYWriteGnuplotAction
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.cpp	/^  HyperGraphElementAction* VertexPointXYDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::VertexPointXYDrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.cpp	/^  HyperGraphElementAction* VertexPointXYWriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::VertexPointXYWriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.cpp	/^  bool VertexPointXY::read(std::istream& is)$/;"	f	class:g2o::VertexPointXY
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.cpp	/^  bool VertexPointXYDrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::VertexPointXYDrawAction
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.cpp	/^  bool VertexPointXY::write(std::ostream& os) const$/;"	f	class:g2o::VertexPointXY
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::VertexPointXY
G2O_VERTEX_POINT_XY_H	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	28;"	d
VertexPointXY	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^  class G2O_TYPES_SLAM2D_API VertexPointXY : public BaseVertex<2, Eigen::Vector2d>$/;"	c	namespace:g2o
VertexPointXYDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^  class G2O_TYPES_SLAM2D_API VertexPointXYDrawAction: public DrawAction{$/;"	c	namespace:g2o
VertexPointXYWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^  class G2O_TYPES_SLAM2D_API VertexPointXYWriteGnuplotAction: public WriteGnuplotAction {$/;"	c	namespace:g2o
_pointSize	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^    FloatProperty *_pointSize;$/;"	m	class:g2o::VertexPointXYDrawAction
estimateDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^      virtual int estimateDimension() const { $/;"	f	class:g2o::VertexPointXY
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^namespace g2o {$/;"	n
getEstimateData	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^      virtual bool getEstimateData(double* est) const{$/;"	f	class:g2o::VertexPointXY
getMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^      virtual bool getMinimalEstimateData(double* est) const{$/;"	f	class:g2o::VertexPointXY
minimalEstimateDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^      virtual int minimalEstimateDimension() const { $/;"	f	class:g2o::VertexPointXY
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^      virtual void oplusImpl(const double* update)$/;"	f	class:g2o::VertexPointXY
setEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^      virtual bool setEstimateDataImpl(const double* est){$/;"	f	class:g2o::VertexPointXY
setMinimalEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^      virtual bool setMinimalEstimateDataImpl(const double* est){$/;"	f	class:g2o::VertexPointXY
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_point_xy.h	/^      virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexPointXY
VertexSE2	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.cpp	/^  VertexSE2::VertexSE2() :$/;"	f	class:g2o::VertexSE2
VertexSE2DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.cpp	/^  VertexSE2DrawAction::VertexSE2DrawAction(): DrawAction(typeid(VertexSE2).name()){$/;"	f	class:g2o::VertexSE2DrawAction
VertexSE2WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.cpp	/^  VertexSE2WriteGnuplotAction::VertexSE2WriteGnuplotAction(): WriteGnuplotAction(typeid(VertexSE2).name()){}$/;"	f	class:g2o::VertexSE2WriteGnuplotAction
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.cpp	/^  HyperGraphElementAction* VertexSE2DrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::VertexSE2DrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.cpp	/^  HyperGraphElementAction* VertexSE2WriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::VertexSE2WriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.cpp	/^  bool VertexSE2::read(std::istream& is)$/;"	f	class:g2o::VertexSE2
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.cpp	/^  bool VertexSE2DrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::VertexSE2DrawAction
write	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.cpp	/^  bool VertexSE2::write(std::ostream& os) const$/;"	f	class:g2o::VertexSE2
G2O_VERTEX_SE2_H	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	28;"	d
VertexSE2	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^  class G2O_TYPES_SLAM2D_API VertexSE2 : public BaseVertex<3, SE2>$/;"	c	namespace:g2o
VertexSE2DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^  class G2O_TYPES_SLAM2D_API VertexSE2DrawAction: public DrawAction{$/;"	c	namespace:g2o
VertexSE2WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^  class G2O_TYPES_SLAM2D_API VertexSE2WriteGnuplotAction: public WriteGnuplotAction {$/;"	c	namespace:g2o
_drawActions	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^    HyperGraphElementAction* _drawActions;$/;"	m	class:g2o::VertexSE2DrawAction
_triangleX	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^    FloatProperty* _triangleX, *_triangleY;$/;"	m	class:g2o::VertexSE2DrawAction
_triangleY	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^    FloatProperty* _triangleX, *_triangleY;$/;"	m	class:g2o::VertexSE2DrawAction
estimateDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^      virtual int estimateDimension() const { return 3; }$/;"	f	class:g2o::VertexSE2
g2o	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^namespace g2o {$/;"	n
getEstimateData	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^      virtual bool getEstimateData(double* est) const {$/;"	f	class:g2o::VertexSE2
getMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^      virtual bool getMinimalEstimateData(double* est) const {$/;"	f	class:g2o::VertexSE2
minimalEstimateDimension	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^      virtual int minimalEstimateDimension() const { return 3; }$/;"	f	class:g2o::VertexSE2
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^      virtual void oplusImpl(const double* update)$/;"	f	class:g2o::VertexSE2
setEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^      virtual bool setEstimateDataImpl(const double* est){$/;"	f	class:g2o::VertexSE2
setMinimalEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^      virtual bool setMinimalEstimateDataImpl(const double* est){$/;"	f	class:g2o::VertexSE2
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/slam2d/vertex_se2.h	/^      virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexSE2
_q2m	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat.cpp	/^    int _q2m(double& S, double& qw, const double&  r00 , const double&  r10 , const double&  r20 , const double&  r01 , const double&  r11 , const double&  r21 , const double&  r02 , const double&  r12 , const double&  r22 ){$/;"	f	namespace:g2o::internal
compute_dq_dR	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat.cpp	/^    void  compute_dq_dR ( Eigen::Matrix<double, 3 , 9 >&  dq_dR , const double&  r11 , const double&  r21 , const double&  r31 , const double&  r12 , const double&  r22 , const double&  r32 , const double&  r13 , const double&  r23 , const double&  r33 ){$/;"	f	namespace:g2o::internal
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat.cpp	/^namespace g2o {$/;"	n	file:
internal	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat.cpp	/^  namespace internal {$/;"	n	namespace:g2o	file:
_DQUAT2MAT_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat.h	2;"	d
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat.h	/^namespace g2o {$/;"	n
internal	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat.h	/^  namespace internal {$/;"	n	namespace:g2o
compute_dR_dq	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat_maxima_generated.cpp	/^void  compute_dR_dq ( Eigen::Matrix<double, 9 , 3 >&  dR_dq , const double&  qx , const double&  qy , const double&  qz , const double&  qw ) { $/;"	f
compute_dq_dR_w	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat_maxima_generated.cpp	/^void  compute_dq_dR_w ( Eigen::Matrix<double, 3 , 9 >&  dq_dR_w , const double&  qw , const double&  r00 , const double&  r10 , const double&  r20 , const double&  r01 , const double&  r11 , const double&  r21 , const double&  r02 , const double&  r12 , const double&  r22 ) { $/;"	f
compute_dq_dR_x	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat_maxima_generated.cpp	/^void  compute_dq_dR_x ( Eigen::Matrix<double, 3 , 9 >&  dq_dR_x , const double&  qx , const double&  r00 , const double&  r10 , const double&  r20 , const double&  r01 , const double&  r11 , const double&  r21 , const double&  r02 , const double&  r12 , const double&  r22 ) { $/;"	f
compute_dq_dR_y	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat_maxima_generated.cpp	/^void  compute_dq_dR_y ( Eigen::Matrix<double, 3 , 9 >&  dq_dR_y , const double&  qy , const double&  r00 , const double&  r10 , const double&  r20 , const double&  r01 , const double&  r11 , const double&  r21 , const double&  r02 , const double&  r12 , const double&  r22 ) { $/;"	f
compute_dq_dR_z	trunk/EXTERNAL/g2o/g2o/types/slam3d/dquat2mat_maxima_generated.cpp	/^void  compute_dq_dR_z ( Eigen::Matrix<double, 3 , 9 >&  dq_dR_z , const double&  qz , const double&  r00 , const double&  r10 , const double&  r20 , const double&  r01 , const double&  r11 , const double&  r21 , const double&  r02 , const double&  r12 , const double&  r22 ) { $/;"	f
EdgeSE3	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  EdgeSE3::EdgeSE3() : BaseBinaryEdge<6, Eigen::Isometry3d, VertexSE3, VertexSE3>() {$/;"	f	class:g2o::EdgeSE3
EdgeSE3DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  EdgeSE3DrawAction::EdgeSE3DrawAction(): DrawAction(typeid(EdgeSE3).name()){}$/;"	f	class:g2o::EdgeSE3DrawAction
EdgeSE3WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  EdgeSE3WriteGnuplotAction::EdgeSE3WriteGnuplotAction(): WriteGnuplotAction(typeid(EdgeSE3).name()){}$/;"	f	class:g2o::EdgeSE3WriteGnuplotAction
computeError	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  void EdgeSE3::computeError() {$/;"	f	class:g2o::EdgeSE3
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  void EdgeSE3::initialEstimate(const OptimizableGraph::VertexSet& from_, OptimizableGraph::Vertex* \/*to_*\/) {$/;"	f	class:g2o::EdgeSE3
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  void EdgeSE3::linearizeOplus(){$/;"	f	class:g2o::EdgeSE3
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  HyperGraphElementAction* EdgeSE3DrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::EdgeSE3DrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  HyperGraphElementAction* EdgeSE3WriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::EdgeSE3WriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  bool EdgeSE3::read(std::istream& is) {$/;"	f	class:g2o::EdgeSE3
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  bool EdgeSE3::setMeasurementFromState(){$/;"	f	class:g2o::EdgeSE3
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.cpp	/^  bool EdgeSE3::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE3
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::EdgeSE3
EdgeSE3	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^  class G2O_TYPES_SLAM3D_API EdgeSE3 : public BaseBinaryEdge<6, Eigen::Isometry3d, VertexSE3, VertexSE3> {$/;"	c	namespace:g2o
EdgeSE3DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^  class G2O_TYPES_SLAM3D_API EdgeSE3DrawAction: public DrawAction{$/;"	c	namespace:g2o
EdgeSE3WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^  class G2O_TYPES_SLAM3D_API EdgeSE3WriteGnuplotAction: public WriteGnuplotAction {$/;"	c	namespace:g2o
G2O_EDGE_SE3_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	2;"	d
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^      Eigen::Isometry3d _inverseMeasurement;$/;"	m	class:g2o::EdgeSE3
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^      virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::EdgeSE3
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& \/*from*\/, $/;"	f	class:g2o::EdgeSE3
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^      virtual int measurementDimension() const {return 7;}$/;"	f	class:g2o::EdgeSE3
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^      virtual void setMeasurement(const Eigen::Isometry3d& m){$/;"	f	class:g2o::EdgeSE3
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3.h	/^      virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::EdgeSE3
EdgeSE3Offset	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.cpp	/^  EdgeSE3Offset::EdgeSE3Offset() : EdgeSE3() {$/;"	f	class:g2o::EdgeSE3Offset
computeError	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.cpp	/^  void EdgeSE3Offset::computeError() {$/;"	f	class:g2o::EdgeSE3Offset
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.cpp	/^  void EdgeSE3Offset::initialEstimate(const OptimizableGraph::VertexSet& from_, OptimizableGraph::Vertex* \/*to_*\/) {$/;"	f	class:g2o::EdgeSE3Offset
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.cpp	/^  void EdgeSE3Offset::linearizeOplus(){$/;"	f	class:g2o::EdgeSE3Offset
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.cpp	/^  bool EdgeSE3Offset::read(std::istream& is) {$/;"	f	class:g2o::EdgeSE3Offset
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.cpp	/^  bool EdgeSE3Offset::resolveCaches(){$/;"	f	class:g2o::EdgeSE3Offset
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.cpp	/^  bool EdgeSE3Offset::setMeasurementFromState(){$/;"	f	class:g2o::EdgeSE3Offset
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.cpp	/^  bool EdgeSE3Offset::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE3Offset
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::EdgeSE3Offset
EdgeSE3Offset	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.h	/^  class G2O_TYPES_SLAM3D_API EdgeSE3Offset : public EdgeSE3 {$/;"	c	namespace:g2o
G2O_EDGE_SE3_OFFSET_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.h	28;"	d
_cacheFrom	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.h	/^      CacheSE3Offset  *_cacheFrom, *_cacheTo;$/;"	m	class:g2o::EdgeSE3Offset
_cacheTo	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.h	/^      CacheSE3Offset  *_cacheFrom, *_cacheTo;$/;"	m	class:g2o::EdgeSE3Offset
_offsetFrom	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.h	/^      ParameterSE3Offset *_offsetFrom, *_offsetTo;$/;"	m	class:g2o::EdgeSE3Offset
_offsetTo	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.h	/^      ParameterSE3Offset *_offsetFrom, *_offsetTo;$/;"	m	class:g2o::EdgeSE3Offset
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.h	/^namespace g2o {$/;"	n
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_offset.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& \/*from*\/, $/;"	f	class:g2o::EdgeSE3Offset
EdgeSE3PointXYZ	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^  EdgeSE3PointXYZ::EdgeSE3PointXYZ() : BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ>() {$/;"	f	class:g2o::EdgeSE3PointXYZ
EdgeSE3PointXYZDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^  EdgeSE3PointXYZDrawAction::EdgeSE3PointXYZDrawAction(): DrawAction(typeid(EdgeSE3PointXYZ).name()){}$/;"	f	class:g2o::EdgeSE3PointXYZDrawAction
computeError	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^  void EdgeSE3PointXYZ::computeError() {$/;"	f	class:g2o::EdgeSE3PointXYZ
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^  void EdgeSE3PointXYZ::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to_*\/)$/;"	f	class:g2o::EdgeSE3PointXYZ
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^  void EdgeSE3PointXYZ::linearizeOplus() {$/;"	f	class:g2o::EdgeSE3PointXYZ
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^  HyperGraphElementAction* EdgeSE3PointXYZDrawAction::operator()(HyperGraph::HyperGraphElement* element,$/;"	f	class:g2o::EdgeSE3PointXYZDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^  bool EdgeSE3PointXYZ::read(std::istream& is) {$/;"	f	class:g2o::EdgeSE3PointXYZ
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^  bool EdgeSE3PointXYZ::resolveCaches(){$/;"	f	class:g2o::EdgeSE3PointXYZ
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^  bool EdgeSE3PointXYZ::setMeasurementFromState(){$/;"	f	class:g2o::EdgeSE3PointXYZ
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.cpp	/^  bool EdgeSE3PointXYZ::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE3PointXYZ
EdgeSE3PointXYZ	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^  class G2O_TYPES_SLAM3D_API EdgeSE3PointXYZ : public BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ> {$/;"	c	namespace:g2o
EdgeSE3PointXYZDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^  class EdgeSE3PointXYZDrawAction: public DrawAction{$/;"	c	namespace:g2o
G2O_EDGE_SE3_POINT_XYZ_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	28;"	d
J	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^    Eigen::Matrix<double,3,9> J; \/\/ jacobian before projection$/;"	m	class:g2o::EdgeSE3PointXYZ
cache	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^    CacheSE3Offset* cache;$/;"	m	class:g2o::EdgeSE3PointXYZ
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::EdgeSE3PointXYZ
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, $/;"	f	class:g2o::EdgeSE3PointXYZ
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^    virtual int measurementDimension() const {return 3;}$/;"	f	class:g2o::EdgeSE3PointXYZ
offsetParam	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^    ParameterSE3Offset* offsetParam;$/;"	m	class:g2o::EdgeSE3PointXYZ
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^    virtual void setMeasurement(const Vector3d& m){$/;"	f	class:g2o::EdgeSE3PointXYZ
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::EdgeSE3PointXYZ
EdgeSE3PointXYZDepth	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.cpp	/^  EdgeSE3PointXYZDepth::EdgeSE3PointXYZDepth() : BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ>() {$/;"	f	class:g2o::EdgeSE3PointXYZDepth
computeError	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.cpp	/^  void EdgeSE3PointXYZDepth::computeError() {$/;"	f	class:g2o::EdgeSE3PointXYZDepth
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.cpp	/^  void EdgeSE3PointXYZDepth::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to_*\/)$/;"	f	class:g2o::EdgeSE3PointXYZDepth
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.cpp	/^  void EdgeSE3PointXYZDepth::linearizeOplus() {$/;"	f	class:g2o::EdgeSE3PointXYZDepth
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.cpp	/^  bool EdgeSE3PointXYZDepth::read(std::istream& is) {$/;"	f	class:g2o::EdgeSE3PointXYZDepth
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.cpp	/^  bool EdgeSE3PointXYZDepth::resolveCaches(){$/;"	f	class:g2o::EdgeSE3PointXYZDepth
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.cpp	/^  bool EdgeSE3PointXYZDepth::setMeasurementFromState(){$/;"	f	class:g2o::EdgeSE3PointXYZDepth
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.cpp	/^  bool EdgeSE3PointXYZDepth::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE3PointXYZDepth
EdgeSE3PointXYZDepth	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	/^  class G2O_TYPES_SLAM3D_API EdgeSE3PointXYZDepth : public BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ> {$/;"	c	namespace:g2o
G2O_EDGE_PROJECT_DEPTH_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	28;"	d
J	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	/^    Eigen::Matrix<double,3,9> J; \/\/ jacobian before projection$/;"	m	class:g2o::EdgeSE3PointXYZDepth
cache	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	/^    CacheCamera* cache;$/;"	m	class:g2o::EdgeSE3PointXYZDepth
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::EdgeSE3PointXYZDepth
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, $/;"	f	class:g2o::EdgeSE3PointXYZDepth
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	/^    virtual int measurementDimension() const {return 3;}$/;"	f	class:g2o::EdgeSE3PointXYZDepth
params	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	/^    ParameterCamera* params;$/;"	m	class:g2o::EdgeSE3PointXYZDepth
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	/^    virtual void setMeasurement(const Vector3d& m){$/;"	f	class:g2o::EdgeSE3PointXYZDepth
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_depth.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::EdgeSE3PointXYZDepth
EdgeProjectDisparityDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^  EdgeProjectDisparityDrawAction::EdgeProjectDisparityDrawAction(): DrawAction(typeid(EdgeSE3PointXYZDisparity).name()){}$/;"	f	class:g2o::EdgeProjectDisparityDrawAction
EdgeSE3PointXYZDisparity	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^  EdgeSE3PointXYZDisparity::EdgeSE3PointXYZDisparity() : BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ>() {$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
computeError	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^  void EdgeSE3PointXYZDisparity::computeError() {$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^  void EdgeSE3PointXYZDisparity::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* \/*to*\/)$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^  void EdgeSE3PointXYZDisparity::linearizeOplus() {$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^  HyperGraphElementAction* EdgeProjectDisparityDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::EdgeProjectDisparityDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^  bool EdgeSE3PointXYZDisparity::read(std::istream& is) {$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^  bool EdgeSE3PointXYZDisparity::resolveCaches(){$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^  bool EdgeSE3PointXYZDisparity::setMeasurementFromState(){$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.cpp	/^  bool EdgeSE3PointXYZDisparity::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
EDGE_PROJECT_DISPARITY_ANALYTIC_JACOBIAN	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	36;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::EdgeSE3PointXYZDisparity
EdgeProjectDisparityDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^  class G2O_TYPES_SLAM3D_API EdgeProjectDisparityDrawAction: public DrawAction{$/;"	c	namespace:g2o
EdgeSE3PointXYZDisparity	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^  class G2O_TYPES_SLAM3D_API EdgeSE3PointXYZDisparity : public BaseBinaryEdge<3, Vector3d, VertexSE3, VertexPointXYZ> {$/;"	c	namespace:g2o
G2O_EDGE_SE3_POINTXYZ_DISPARITY_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	28;"	d
J	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^    Eigen::Matrix<double,3,9> J; \/\/ jacobian before projection$/;"	m	class:g2o::EdgeSE3PointXYZDisparity
cache	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^    CacheCamera* cache;$/;"	m	class:g2o::EdgeSE3PointXYZDisparity
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, $/;"	f	class:g2o::EdgeSE3PointXYZDisparity
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^    virtual int measurementDimension() const {return 3;}$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
params	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^    ParameterCamera* params;$/;"	m	class:g2o::EdgeSE3PointXYZDisparity
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^    virtual void setMeasurement(const Vector3d& m){$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_pointxyz_disparity.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::EdgeSE3PointXYZDisparity
EdgeSE3Prior	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.cpp	/^  EdgeSE3Prior::EdgeSE3Prior() : BaseUnaryEdge<6, Eigen::Isometry3d, VertexSE3>() {$/;"	f	class:g2o::EdgeSE3Prior
computeError	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.cpp	/^  void EdgeSE3Prior::computeError() {$/;"	f	class:g2o::EdgeSE3Prior
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.cpp	/^namespace g2o {$/;"	n	file:
initialEstimate	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.cpp	/^  void EdgeSE3Prior::initialEstimate(const OptimizableGraph::VertexSet& \/*from_*\/, OptimizableGraph::Vertex* \/*to_*\/) {$/;"	f	class:g2o::EdgeSE3Prior
linearizeOplus	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.cpp	/^  void EdgeSE3Prior::linearizeOplus(){$/;"	f	class:g2o::EdgeSE3Prior
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.cpp	/^  bool EdgeSE3Prior::read(std::istream& is) {$/;"	f	class:g2o::EdgeSE3Prior
resolveCaches	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.cpp	/^  bool EdgeSE3Prior::resolveCaches(){$/;"	f	class:g2o::EdgeSE3Prior
setMeasurementFromState	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.cpp	/^  bool EdgeSE3Prior::setMeasurementFromState(){$/;"	f	class:g2o::EdgeSE3Prior
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.cpp	/^  bool EdgeSE3Prior::write(std::ostream& os) const {$/;"	f	class:g2o::EdgeSE3Prior
EdgeSE3Prior	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	/^  class G2O_TYPES_SLAM3D_API EdgeSE3Prior : public BaseUnaryEdge<6, Eigen::Isometry3d, VertexSE3> {$/;"	c	namespace:g2o
G2O_EDGE_SE3_PRIOR_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	28;"	d
_cache	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	/^    CacheSE3Offset* _cache;$/;"	m	class:g2o::EdgeSE3Prior
_inverseMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	/^    Eigen::Isometry3d _inverseMeasurement;$/;"	m	class:g2o::EdgeSE3Prior
_offsetParam	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	/^    ParameterSE3Offset* _offsetParam;$/;"	m	class:g2o::EdgeSE3Prior
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	/^namespace g2o {$/;"	n
getMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	/^    virtual bool getMeasurementData(double* d) const{$/;"	f	class:g2o::EdgeSE3Prior
initialEstimatePossible	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& \/*from*\/, $/;"	f	class:g2o::EdgeSE3Prior
measurementDimension	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	/^    virtual int measurementDimension() const {return 7;}$/;"	f	class:g2o::EdgeSE3Prior
setMeasurement	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	/^    virtual void setMeasurement(const Eigen::Isometry3d& m){$/;"	f	class:g2o::EdgeSE3Prior
setMeasurementData	trunk/EXTERNAL/g2o/g2o/types/slam3d/edge_se3_prior.h	/^    virtual bool setMeasurementData(const double* d){$/;"	f	class:g2o::EdgeSE3Prior
G2O_TYPES_SLAM3D_API	trunk/EXTERNAL/g2o/g2o/types/slam3d/g2o_types_slam3d_api.h	19;"	d
G2O_TYPES_SLAM3D_API	trunk/EXTERNAL/g2o/g2o/types/slam3d/g2o_types_slam3d_api.h	21;"	d
G2O_TYPES_SLAM3D_API	trunk/EXTERNAL/g2o/g2o/types/slam3d/g2o_types_slam3d_api.h	24;"	d
G2O_TYPES_SLAM3D_API	trunk/EXTERNAL/g2o/g2o/types/slam3d/g2o_types_slam3d_api.h	29;"	d
G2O_TYPES_SLAM3D_API_H	trunk/EXTERNAL/g2o/g2o/types/slam3d/g2o_types_slam3d_api.h	11;"	d
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.cpp	/^namespace g2o {$/;"	n	file:
internal	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.cpp	/^  namespace internal {$/;"	n	namespace:g2o	file:
G2O_ISOMETRY3D_GRADIENTS_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.h	28;"	d
computeEdgeSE3Gradient	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.h	/^  void computeEdgeSE3Gradient(Eigen::Isometry3d& E,$/;"	f	namespace:g2o::internal
computeEdgeSE3PriorGradient	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.h	/^  void computeEdgeSE3PriorGradient(Eigen::Isometry3d& E,$/;"	f	namespace:g2o::internal
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.h	/^namespace g2o {$/;"	n
internal	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.h	/^  namespace internal {$/;"	n	namespace:g2o
skew	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.h	/^    inline void skew(Eigen::MatrixBase<Derived>& s, const Eigen::MatrixBase<DerivedOther>& v){$/;"	f	namespace:g2o::internal
skew	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.h	/^    void skew(Eigen::MatrixBase<Derived>& Sx, $/;"	f	namespace:g2o::internal
skewT	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.h	/^    inline void skewT(Eigen::MatrixBase<Derived>& Sx, $/;"	f	namespace:g2o::internal
skewT	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_gradients.h	/^    inline void skewT(Eigen::MatrixBase<Derived>& s, const Eigen::MatrixBase<DerivedOther>& v){$/;"	f	namespace:g2o::internal
fromCompactQuaternion	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Matrix3d fromCompactQuaternion(const Vector3d& v) {$/;"	f	namespace:g2o::internal
fromEuler	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Matrix3d fromEuler(const Vector3d& v) {$/;"	f	namespace:g2o::internal
fromSE3Quat	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Isometry3d fromSE3Quat(const SE3Quat& t)$/;"	f	namespace:g2o::internal
fromVectorET	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Isometry3d fromVectorET(const Vector6d& v) {$/;"	f	namespace:g2o::internal
fromVectorMQT	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Isometry3d fromVectorMQT(const Vector6d& v){$/;"	f	namespace:g2o::internal
fromVectorQT	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Isometry3d fromVectorQT(const Vector7d& v) {$/;"	f	namespace:g2o::internal
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^namespace g2o {$/;"	n	file:
internal	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^  namespace internal {$/;"	n	namespace:g2o	file:
normalize	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Quaterniond& normalize(Quaterniond& q){$/;"	f	namespace:g2o::internal
normalized	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Quaterniond normalized(const Quaterniond& q) {$/;"	f	namespace:g2o::internal
toCompactQuaternion	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Vector3d toCompactQuaternion(const Eigen::Matrix3d& R) {$/;"	f	namespace:g2o::internal
toEuler	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Vector3d toEuler(const Eigen::Matrix3d& R) {$/;"	f	namespace:g2o::internal
toSE3Quat	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    SE3Quat toSE3Quat(const Isometry3d& t)$/;"	f	namespace:g2o::internal
toVectorET	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Vector6d toVectorET(const Isometry3d& t) {$/;"	f	namespace:g2o::internal
toVectorMQT	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Vector6d toVectorMQT(const Isometry3d& t) {$/;"	f	namespace:g2o::internal
toVectorQT	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.cpp	/^    Vector7d toVectorQT(const Isometry3d& t){$/;"	f	namespace:g2o::internal
G2O_ISOMETRY3D_MAPPINGS_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.h	28;"	d
Vector6d	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.h	/^  typedef Matrix<double, 6, 1> Vector6d;$/;"	t	namespace:g2o
Vector7d	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.h	/^  typedef Matrix<double, 7, 1> Vector7d;$/;"	t	namespace:g2o
approximateNearestOrthogonalMatrix	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.h	/^    void approximateNearestOrthogonalMatrix(const Eigen::MatrixBase<Derived>& R)$/;"	f	namespace:g2o::internal
extractRotation	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.h	/^    inline Eigen::Isometry3d::ConstLinearPart extractRotation(const Eigen::Isometry3d& A)$/;"	f	namespace:g2o::internal
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.h	/^namespace g2o {$/;"	n
internal	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.h	/^  namespace internal {$/;"	n	namespace:g2o
nearestOrthogonalMatrix	trunk/EXTERNAL/g2o/g2o/types/slam3d/isometry3d_mappings.h	/^    void nearestOrthogonalMatrix(const Eigen::MatrixBase<Derived>& R)$/;"	f	namespace:g2o::internal
CacheCameraDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  CacheCameraDrawAction::CacheCameraDrawAction(): DrawAction(typeid(CacheCamera).name()){$/;"	f	class:g2o::CacheCameraDrawAction
ParameterCamera	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  ParameterCamera::ParameterCamera(){$/;"	f	class:g2o::ParameterCamera
drawMyPyramid	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  static void drawMyPyramid(float height, float side){$/;"	f	namespace:g2o	file:
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  HyperGraphElementAction* CacheCameraDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::CacheCameraDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  bool ParameterCamera::read(std::istream& is) {$/;"	f	class:g2o::ParameterCamera
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  bool CacheCameraDrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::CacheCameraDrawAction
resolveDependancies	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  bool CacheCamera::resolveDependancies(){$/;"	f	class:g2o::CacheCamera
setKcam	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  void ParameterCamera::setKcam(double fx, double fy, double cx, double cy){$/;"	f	class:g2o::ParameterCamera
setOffset	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  void ParameterCamera::setOffset(const Eigen::Isometry3d& offset_){$/;"	f	class:g2o::ParameterCamera
updateImpl	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  void CacheCamera::updateImpl(){$/;"	f	class:g2o::CacheCamera
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.cpp	/^  bool ParameterCamera::write(std::ostream& os) const {$/;"	f	class:g2o::ParameterCamera
CacheCamera	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^  class G2O_TYPES_SLAM3D_API CacheCamera: public CacheSE3Offset {$/;"	c	namespace:g2o
CacheCameraDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^  class G2O_TYPES_SLAM3D_API CacheCameraDrawAction: public DrawAction{$/;"	c	namespace:g2o
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::ParameterCamera
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::CacheCamera
G2O_CAMERA_PARAMETERS_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	28;"	d
Kcam	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^      const Eigen::Matrix3d& Kcam() const { return _Kcam;}$/;"	f	class:g2o::ParameterCamera
Kcam_inverseOffsetR	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^      const Eigen::Matrix3d& Kcam_inverseOffsetR() const { return _Kcam_inverseOffsetR;}$/;"	f	class:g2o::ParameterCamera
ParameterCamera	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^  class G2O_TYPES_SLAM3D_API ParameterCamera: public ParameterSE3Offset {$/;"	c	namespace:g2o
_Kcam	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^      Eigen::Matrix3d _Kcam;$/;"	m	class:g2o::ParameterCamera
_Kcam_inverseOffsetR	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^      Eigen::Matrix3d _Kcam_inverseOffsetR;$/;"	m	class:g2o::ParameterCamera
_cameraSide	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^      FloatProperty* _cameraZ, *_cameraSide;$/;"	m	class:g2o::CacheCameraDrawAction
_cameraZ	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^      FloatProperty* _cameraZ, *_cameraSide;$/;"	m	class:g2o::CacheCameraDrawAction
_invKcam	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^      Eigen::Matrix3d _invKcam;$/;"	m	class:g2o::ParameterCamera
_w2i	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^    Eigen::Affine3d _w2i; \/\/\/< world to image transform$/;"	m	class:g2o::CacheCamera
camParams	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^    const ParameterCamera* camParams() const {return params;}$/;"	f	class:g2o::CacheCamera
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^namespace g2o {$/;"	n
invKcam	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^      const Eigen::Matrix3d& invKcam() const { return _invKcam;}$/;"	f	class:g2o::ParameterCamera
params	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^    ParameterCamera* params;$/;"	m	class:g2o::CacheCamera
w2i	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_camera.h	/^    const Eigen::Affine3d& w2i() const {return _w2i;}$/;"	f	class:g2o::CacheCamera
CacheSE3Offset	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  CacheSE3Offset::CacheSE3Offset() :$/;"	f	class:g2o::CacheSE3Offset
CacheSE3OffsetDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  CacheSE3OffsetDrawAction::CacheSE3OffsetDrawAction(): DrawAction(typeid(CacheSE3Offset).name()){$/;"	f	class:g2o::CacheSE3OffsetDrawAction
ParameterSE3Offset	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  ParameterSE3Offset::ParameterSE3Offset(){$/;"	f	class:g2o::ParameterSE3Offset
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  HyperGraphElementAction* CacheSE3OffsetDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::CacheSE3OffsetDrawAction
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  bool ParameterSE3Offset::read(std::istream& is) {$/;"	f	class:g2o::ParameterSE3Offset
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  bool CacheSE3OffsetDrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::CacheSE3OffsetDrawAction
resolveDependancies	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  bool CacheSE3Offset::resolveDependancies(){$/;"	f	class:g2o::CacheSE3Offset
setOffset	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  void ParameterSE3Offset::setOffset(const Isometry3d& offset_){$/;"	f	class:g2o::ParameterSE3Offset
setOffsetParam	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  void CacheSE3Offset::setOffsetParam(ParameterSE3Offset* offsetParam)$/;"	f	class:g2o::CacheSE3Offset
updateImpl	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  void CacheSE3Offset::updateImpl(){$/;"	f	class:g2o::CacheSE3Offset
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.cpp	/^  bool ParameterSE3Offset::write(std::ostream& os) const {$/;"	f	class:g2o::ParameterSE3Offset
CacheSE3Offset	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^  class G2O_TYPES_SLAM3D_API CacheSE3Offset: public Cache {$/;"	c	namespace:g2o
CacheSE3OffsetDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^  class G2O_TYPES_SLAM3D_API CacheSE3OffsetDrawAction: public DrawAction{$/;"	c	namespace:g2o
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::CacheSE3Offset
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::ParameterSE3Offset
G2O_VERTEX_SE3_OFFSET_PARAMETERS_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	28;"	d
ParameterSE3Offset	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^  class G2O_TYPES_SLAM3D_API ParameterSE3Offset: public Parameter$/;"	c	namespace:g2o
_cubeSide	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      FloatProperty* _cubeSide;$/;"	m	class:g2o::CacheSE3OffsetDrawAction
_inverseOffset	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      Eigen::Isometry3d _inverseOffset;$/;"	m	class:g2o::ParameterSE3Offset
_n2w	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      Eigen::Isometry3d _n2w;$/;"	m	class:g2o::CacheSE3Offset
_offset	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      Eigen::Isometry3d _offset;$/;"	m	class:g2o::ParameterSE3Offset
_offsetParam	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      ParameterSE3Offset* _offsetParam; \/\/\/< the parameter connected to the cache$/;"	m	class:g2o::CacheSE3Offset
_w2l	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      Eigen::Isometry3d _w2l;$/;"	m	class:g2o::CacheSE3Offset
_w2n	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      Eigen::Isometry3d _w2n;$/;"	m	class:g2o::CacheSE3Offset
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^namespace g2o {$/;"	n
inverseOffset	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      const Eigen::Isometry3d& inverseOffset() const { return _inverseOffset;}$/;"	f	class:g2o::ParameterSE3Offset
n2w	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      const Eigen::Isometry3d& n2w() const { return _n2w;}$/;"	f	class:g2o::CacheSE3Offset
offset	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      const Eigen::Isometry3d& offset() const { return _offset;}$/;"	f	class:g2o::ParameterSE3Offset
offsetParam	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      const ParameterSE3Offset* offsetParam() const { return _offsetParam;}$/;"	f	class:g2o::CacheSE3Offset
w2l	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      const Eigen::Isometry3d& w2l() const { return _w2l;}$/;"	f	class:g2o::CacheSE3Offset
w2n	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_se3_offset.h	/^      const Eigen::Isometry3d& w2n() const { return _w2n;}$/;"	f	class:g2o::CacheSE3Offset
ParameterStereoCamera	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.cpp	/^  ParameterStereoCamera::ParameterStereoCamera(){$/;"	f	class:g2o::ParameterStereoCamera
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.cpp	/^namespace g2o {$/;"	n	file:
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.cpp	/^  bool ParameterStereoCamera::read(std::istream& is) {$/;"	f	class:g2o::ParameterStereoCamera
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.cpp	/^  bool ParameterStereoCamera::write(std::ostream& os) const {$/;"	f	class:g2o::ParameterStereoCamera
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::ParameterStereoCamera
G2O_STEREO_CAMERA_PARAMETERS_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.h	28;"	d
ParameterStereoCamera	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.h	/^  class G2O_TYPES_SLAM3D_API ParameterStereoCamera: public ParameterCamera {$/;"	c	namespace:g2o
_baseline	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.h	/^      double _baseline;$/;"	m	class:g2o::ParameterStereoCamera
baseline	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.h	/^      double baseline() const {return _baseline;}$/;"	f	class:g2o::ParameterStereoCamera
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.h	/^namespace g2o {$/;"	n
setBaseline	trunk/EXTERNAL/g2o/g2o/types/slam3d/parameter_stereo_camera.h	/^      void  setBaseline(double baseline_) { _baseline = baseline_;}$/;"	f	class:g2o::ParameterStereoCamera
G2O_MATH_STUFF	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3_ops.h	28;"	d
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3_ops.h	/^namespace g2o {$/;"	n
deltaR	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3_ops.hpp	/^  Vector3d deltaR(const Matrix3d& R)$/;"	f
project	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3_ops.hpp	/^  Vector2d project(const Vector3d& v)$/;"	f
project	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3_ops.hpp	/^  Vector3d project(const Vector4d& v)$/;"	f
skew	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3_ops.hpp	/^  Matrix3d skew(const Vector3d&v)$/;"	f
unproject	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3_ops.hpp	/^  Vector3d unproject(const Vector2d& v)$/;"	f
unproject	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3_ops.hpp	/^  Vector4d unproject(const Vector3d& v)$/;"	f
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::SE3Quat
G2O_SE3QUAT_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	28;"	d
SE3Quat	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^        explicit SE3Quat(const MatrixBase<Derived>& v)$/;"	f	class:g2o::SE3Quat
SE3Quat	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      SE3Quat(){$/;"	f	class:g2o::SE3Quat
SE3Quat	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      SE3Quat(const Matrix3d& R, const Vector3d& t):_r(Quaterniond(R)),_t(t){ $/;"	f	class:g2o::SE3Quat
SE3Quat	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      SE3Quat(const Quaterniond& q, const Vector3d& t):_r(q),_t(t){$/;"	f	class:g2o::SE3Quat
SE3Quat	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^  class G2O_TYPES_SLAM3D_API SE3Quat {$/;"	c	namespace:g2o
Vector6d	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^  typedef Matrix<double, 6, 1> Vector6d;$/;"	t	namespace:g2o
Vector7d	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^  typedef Matrix<double, 7, 1> Vector7d;$/;"	t	namespace:g2o
_r	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      Quaterniond _r;$/;"	m	class:g2o::SE3Quat
_t	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      Vector3d _t;$/;"	m	class:g2o::SE3Quat
adj	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      Matrix<double, 6, 6> adj() const$/;"	f	class:g2o::SE3Quat
exp	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      static SE3Quat exp(const Vector6d & update)$/;"	f	class:g2o::SE3Quat
fromMinimalVector	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline void fromMinimalVector(const Vector6d& v){$/;"	f	class:g2o::SE3Quat
fromVector	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline void fromVector(const Vector7d& v){$/;"	f	class:g2o::SE3Quat
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^namespace g2o {$/;"	n
inverse	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline SE3Quat inverse() const{$/;"	f	class:g2o::SE3Quat
log	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      Vector6d log() const {$/;"	f	class:g2o::SE3Quat
map	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      Vector3d map(const Vector3d & xyz) const$/;"	f	class:g2o::SE3Quat
normalizeRotation	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      void normalizeRotation(){$/;"	f	class:g2o::SE3Quat
operator *	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline SE3Quat operator* (const SE3Quat& tr2) const{$/;"	f	class:g2o::SE3Quat
operator *	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline Vector3d operator* (const Vector3d& v) const {$/;"	f	class:g2o::SE3Quat
operator *=	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline SE3Quat& operator*= (const SE3Quat& tr2){$/;"	f	class:g2o::SE3Quat
operator <<	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^  inline std::ostream& operator <<(std::ostream& out_str, const SE3Quat& se3)$/;"	f	namespace:g2o
operator Eigen::Isometry3d	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      operator Eigen::Isometry3d() const$/;"	f	class:g2o::SE3Quat
operator []	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline double operator [](int i) const {$/;"	f	class:g2o::SE3Quat
rotation	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline const Quaterniond& rotation() const {return _r;}$/;"	f	class:g2o::SE3Quat
setRotation	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      void setRotation(const Quaterniond& r_) {_r=r_;}$/;"	f	class:g2o::SE3Quat
setTranslation	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline void setTranslation(const Vector3d& t_) {_t = t_;}$/;"	f	class:g2o::SE3Quat
toMinimalVector	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline Vector6d toMinimalVector() const{$/;"	f	class:g2o::SE3Quat
toVector	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline Vector7d toVector() const{$/;"	f	class:g2o::SE3Quat
to_homogeneous_matrix	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      Matrix<double,4,4> to_homogeneous_matrix() const$/;"	f	class:g2o::SE3Quat
translation	trunk/EXTERNAL/g2o/g2o/types/slam3d/se3quat.h	/^      inline const Vector3d& translation() const {return _t;}$/;"	f	class:g2o::SE3Quat
main	trunk/EXTERNAL/g2o/g2o/types/slam3d/test_isometry3d_mappings.cpp	/^int main(int , char** ){$/;"	f
RotationMatrix2QuaternionManifold	trunk/EXTERNAL/g2o/g2o/types/slam3d/test_mat2quat_jacobian.cpp	/^struct RotationMatrix2QuaternionManifold$/;"	s	file:
main	trunk/EXTERNAL/g2o/g2o/types/slam3d/test_mat2quat_jacobian.cpp	/^int main(int , char** )$/;"	f
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/test_mat2quat_jacobian.cpp	/^  bool operator()(const T* rotMatSerialized, T* quaternion) const$/;"	f	struct:RotationMatrix2QuaternionManifold
main	trunk/EXTERNAL/g2o/g2o/types/slam3d/test_slam3d_jacobian.cpp	/^int main(int , char** )$/;"	f
randomIsometry3d	trunk/EXTERNAL/g2o/g2o/types/slam3d/test_slam3d_jacobian.cpp	/^Eigen::Isometry3d randomIsometry3d()$/;"	f
CacheCameraDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.cpp	/^  G2O_REGISTER_ACTION(CacheCameraDrawAction);$/;"	v
EdgeSE3DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE3DrawAction);$/;"	v
EdgeSE3PointXYZDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE3PointXYZDrawAction);$/;"	v
EdgeSE3WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.cpp	/^  G2O_REGISTER_ACTION(EdgeSE3WriteGnuplotAction);$/;"	v
VertexPointXYZDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.cpp	/^  G2O_REGISTER_ACTION(VertexPointXYZDrawAction);$/;"	v
VertexPointXYZWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.cpp	/^  G2O_REGISTER_ACTION(VertexPointXYZWriteGnuplotAction);$/;"	v
VertexSE3DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.cpp	/^  G2O_REGISTER_ACTION(VertexSE3DrawAction);$/;"	v
VertexSE3WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.cpp	/^  G2O_REGISTER_ACTION(VertexSE3WriteGnuplotAction);$/;"	v
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.cpp	/^namespace g2o {$/;"	n	file:
slam3d	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.cpp	/^  G2O_REGISTER_TYPE_GROUP(slam3d);$/;"	v
G2O_TYPES_SLAM3D_	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.h	18;"	d
THREE_D_TYPES_ANALYTIC_JACOBIAN	trunk/EXTERNAL/g2o/g2o/types/slam3d/types_slam3d.h	25;"	d
VertexPointXYZDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.cpp	/^  VertexPointXYZDrawAction::VertexPointXYZDrawAction(): DrawAction(typeid(VertexPointXYZ).name()){$/;"	f	class:g2o::VertexPointXYZDrawAction
VertexPointXYZWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.cpp	/^  VertexPointXYZWriteGnuplotAction::VertexPointXYZWriteGnuplotAction() :$/;"	f	class:g2o::VertexPointXYZWriteGnuplotAction
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.cpp	/^  HyperGraphElementAction* VertexPointXYZDrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::VertexPointXYZDrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.cpp	/^  HyperGraphElementAction* VertexPointXYZWriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params_ )$/;"	f	class:g2o::VertexPointXYZWriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.cpp	/^  bool VertexPointXYZ::read(std::istream& is) {$/;"	f	class:g2o::VertexPointXYZ
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.cpp	/^  bool VertexPointXYZDrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::VertexPointXYZDrawAction
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.cpp	/^  bool VertexPointXYZ::write(std::ostream& os) const {$/;"	f	class:g2o::VertexPointXYZ
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::VertexPointXYZ
G2O_VERTEX_TRACKXYZ_H_	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	28;"	d
VertexPointXYZ	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      VertexPointXYZ() {}$/;"	f	class:g2o::VertexPointXYZ
VertexPointXYZ	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^  class G2O_TYPES_SLAM3D_API VertexPointXYZ : public BaseVertex<3, Eigen::Vector3d>$/;"	c	namespace:g2o
VertexPointXYZDrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^  class VertexPointXYZDrawAction: public DrawAction{$/;"	c	namespace:g2o
VertexPointXYZWriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^  class G2O_TYPES_SLAM3D_API VertexPointXYZWriteGnuplotAction: public WriteGnuplotAction$/;"	c	namespace:g2o
_pointSize	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      FloatProperty *_pointSize;$/;"	m	class:g2o::VertexPointXYZDrawAction
estimateDimension	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      virtual int estimateDimension() const {$/;"	f	class:g2o::VertexPointXYZ
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^namespace g2o {$/;"	n
getEstimateData	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      virtual bool getEstimateData(double* est) const{$/;"	f	class:g2o::VertexPointXYZ
getMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      virtual bool getMinimalEstimateData(double* est) const{$/;"	f	class:g2o::VertexPointXYZ
minimalEstimateDimension	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      virtual int minimalEstimateDimension() const {$/;"	f	class:g2o::VertexPointXYZ
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      virtual void oplusImpl(const double* update_) {$/;"	f	class:g2o::VertexPointXYZ
setEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      virtual bool setEstimateDataImpl(const double* est){$/;"	f	class:g2o::VertexPointXYZ
setMinimalEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      virtual bool setMinimalEstimateDataImpl(const double* est){$/;"	f	class:g2o::VertexPointXYZ
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_pointxyz.h	/^      virtual void setToOriginImpl() { _estimate.fill(0.); }$/;"	f	class:g2o::VertexPointXYZ
VertexSE3	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.cpp	/^  VertexSE3::VertexSE3() :$/;"	f	class:g2o::VertexSE3
VertexSE3DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.cpp	/^  VertexSE3DrawAction::VertexSE3DrawAction(): DrawAction(typeid(VertexSE3).name()){$/;"	f	class:g2o::VertexSE3DrawAction
VertexSE3WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.cpp	/^  VertexSE3WriteGnuplotAction::VertexSE3WriteGnuplotAction(): WriteGnuplotAction(typeid(VertexSE3).name()){}$/;"	f	class:g2o::VertexSE3WriteGnuplotAction
drawTriangle	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.cpp	/^  void drawTriangle(float xSize, float ySize){$/;"	f	namespace:g2o
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.cpp	/^namespace g2o {$/;"	n	file:
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.cpp	/^  HyperGraphElementAction* VertexSE3DrawAction::operator()(HyperGraph::HyperGraphElement* element, $/;"	f	class:g2o::VertexSE3DrawAction
operator ()	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.cpp	/^  HyperGraphElementAction* VertexSE3WriteGnuplotAction::operator()(HyperGraph::HyperGraphElement* element, HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::VertexSE3WriteGnuplotAction
read	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.cpp	/^  bool VertexSE3::read(std::istream& is)$/;"	f	class:g2o::VertexSE3
refreshPropertyPtrs	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.cpp	/^  bool VertexSE3DrawAction::refreshPropertyPtrs(HyperGraphElementAction::Parameters* params_){$/;"	f	class:g2o::VertexSE3DrawAction
write	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.cpp	/^  bool VertexSE3::write(std::ostream& os) const$/;"	f	class:g2o::VertexSE3
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      EIGEN_MAKE_ALIGNED_OPERATOR_NEW;$/;"	m	class:g2o::VertexSE3
G2O_VERTEX_SE3_	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	28;"	d
VertexSE3	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^  class G2O_TYPES_SLAM3D_API VertexSE3 : public BaseVertex<6, Eigen::Isometry3d>$/;"	c	namespace:g2o
VertexSE3DrawAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^  class VertexSE3DrawAction: public DrawAction{$/;"	c	namespace:g2o
VertexSE3WriteGnuplotAction	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^  class VertexSE3WriteGnuplotAction: public WriteGnuplotAction {$/;"	c	namespace:g2o
_cacheDrawActions	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      HyperGraphElementAction* _cacheDrawActions;$/;"	m	class:g2o::VertexSE3DrawAction
_numOplusCalls	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      int _numOplusCalls;     \/\/\/< store how often opluse was called to trigger orthogonaliation of the rotation matrix$/;"	m	class:g2o::VertexSE3
_triangleX	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      FloatProperty* _triangleX, *_triangleY;$/;"	m	class:g2o::VertexSE3DrawAction
_triangleY	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      FloatProperty* _triangleX, *_triangleY;$/;"	m	class:g2o::VertexSE3DrawAction
estimateAsSE3Quat	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      SE3Quat G2O_ATTRIBUTE_DEPRECATED(estimateAsSE3Quat() const) { return internal::toSE3Quat(estimate());}$/;"	f	class:g2o::VertexSE3
estimateDimension	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      virtual int estimateDimension() const {$/;"	f	class:g2o::VertexSE3
g2o	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^namespace g2o {$/;"	n
getEstimateData	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      virtual bool getEstimateData(double* est) const{$/;"	f	class:g2o::VertexSE3
getMinimalEstimateData	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      virtual bool getMinimalEstimateData(double* est) const{$/;"	f	class:g2o::VertexSE3
minimalEstimateDimension	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      virtual int minimalEstimateDimension() const {$/;"	f	class:g2o::VertexSE3
oplusImpl	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      virtual void oplusImpl(const double* update)$/;"	f	class:g2o::VertexSE3
orthogonalizeAfter	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      static const int orthogonalizeAfter = 1000; \/\/< orthogonalize the rotation matrix after N updates$/;"	m	class:g2o::VertexSE3
setEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      virtual bool setEstimateDataImpl(const double* est){$/;"	f	class:g2o::VertexSE3
setEstimateFromSE3Quat	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      void G2O_ATTRIBUTE_DEPRECATED(setEstimateFromSE3Quat(const SE3Quat& se3)) { setEstimate(internal::fromSE3Quat(se3));}$/;"	f	class:g2o::VertexSE3
setMinimalEstimateDataImpl	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      virtual bool setMinimalEstimateDataImpl(const double* est){$/;"	f	class:g2o::VertexSE3
setToOriginImpl	trunk/EXTERNAL/g2o/g2o/types/slam3d/vertex_se3.h	/^      virtual void setToOriginImpl() {$/;"	f	class:g2o::VertexSE3
breakCounter	trunk/ssa/apps/ssa_cli/ssa_optimize.cpp	/^unsigned int breakCounter = 0;$/;"	v
main	trunk/ssa/apps/ssa_cli/ssa_optimize.cpp	/^int main(int argc, char **argv)$/;"	f
message	trunk/ssa/apps/ssa_cli/ssa_optimize.cpp	/^const char *message[]={$/;"	v
running	trunk/ssa/apps/ssa_cli/ssa_optimize.cpp	/^static bool running = true;$/;"	v	file:
sighandler	trunk/ssa/apps/ssa_cli/ssa_optimize.cpp	/^void sighandler(int sig)$/;"	f
SSAQGLViewerWidget	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^SSAQGLViewerWidget::SSAQGLViewerWidget(){$/;"	f	class:ssa::SSAQGLViewerWidget
SSAQGLViewerWidget	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^SSAQGLViewerWidget::SSAQGLViewerWidget(QWidget*& widget){$/;"	f	class:ssa::SSAQGLViewerWidget
draw	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::draw(){$/;"	f	class:ssa::SSAQGLViewerWidget
drawBox	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawBox(double size = 1.0){$/;"	f	class:ssa::SSAQGLViewerWidget
drawBox	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawBox(double& x, double& y, double size = 1.0){$/;"	f	class:ssa::SSAQGLViewerWidget
drawCircle	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawCircle(double r = 1.0){$/;"	f	class:ssa::SSAQGLViewerWidget
drawCovariance	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawCovariance(Matrix2d& cov, double angle = 0.0){$/;"	f	class:ssa::SSAQGLViewerWidget
drawDataAssociationEdges	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawDataAssociationEdges(){$/;"	f	class:ssa::SSAQGLViewerWidget
drawEllipse	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawEllipse(double l1, double l2){$/;"	f	class:ssa::SSAQGLViewerWidget
drawGrid	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawGrid(){$/;"	f	class:ssa::SSAQGLViewerWidget
drawObservationEdgeCovariance	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawObservationEdgeCovariance(){$/;"	f	class:ssa::SSAQGLViewerWidget
drawOdometryEdges	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawOdometryEdges(){$/;"	f	class:ssa::SSAQGLViewerWidget
drawPoseCircle	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawPoseCircle(double& x, double& y, double& theta){$/;"	f	class:ssa::SSAQGLViewerWidget
drawVertexPoints	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawVertexPoints(){$/;"	f	class:ssa::SSAQGLViewerWidget
drawVertexPointsCovariance	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawVertexPointsCovariance(){$/;"	f	class:ssa::SSAQGLViewerWidget
drawWithNames	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::drawWithNames(){$/;"	f	class:ssa::SSAQGLViewerWidget
openFile	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::openFile(){$/;"	f	class:ssa::SSAQGLViewerWidget
postSelection	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::postSelection(const QPoint& point)$/;"	f	class:ssa::SSAQGLViewerWidget
saveFMap	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::saveFMap(){$/;"	f	class:ssa::SSAQGLViewerWidget
saveFile	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::saveFile(){$/;"	f	class:ssa::SSAQGLViewerWidget
saveSnapshotCustom	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::saveSnapshotCustom(){$/;"	f	class:ssa::SSAQGLViewerWidget
saveSnapshotVideo	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::saveSnapshotVideo(){$/;"	f	class:ssa::SSAQGLViewerWidget
setOptimize	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^void SSAQGLViewerWidget::setOptimize(){$/;"	f	class:ssa::SSAQGLViewerWidget
ssa	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^namespace ssa {$/;"	n	file:
~SSAQGLViewerWidget	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.cpp	/^SSAQGLViewerWidget::~SSAQGLViewerWidget(){$/;"	f	class:ssa::SSAQGLViewerWidget
SSAQGLViewerWidget	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^class SSAQGLViewerWidget: public QGLViewer$/;"	c	namespace:ssa
_DAmaxdist	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  double _DAmaxdist;$/;"	m	class:ssa::SSAQGLViewerWidget
_backgroundHeight	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  double _backgroundHeight;$/;"	m	class:ssa::SSAQGLViewerWidget
_drawEdgeCorrespondences	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  bool _drawEdgeCorrespondences;$/;"	m	class:ssa::SSAQGLViewerWidget
_drawEdgeObservation	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  bool _drawEdgeObservation;$/;"	m	class:ssa::SSAQGLViewerWidget
_drawEdgeOdometry	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  bool _drawEdgeOdometry;$/;"	m	class:ssa::SSAQGLViewerWidget
_drawGrid	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  bool _drawGrid;$/;"	m	class:ssa::SSAQGLViewerWidget
_drawObservationCovariance	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  bool _drawObservationCovariance;$/;"	m	class:ssa::SSAQGLViewerWidget
_drawObservationPoints	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  bool _drawObservationPoints;$/;"	m	class:ssa::SSAQGLViewerWidget
_drawRobotPoses	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  bool _drawRobotPoses;$/;"	m	class:ssa::SSAQGLViewerWidget
_drawVertexPointCovariance	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  bool _drawVertexPointCovariance;$/;"	m	class:ssa::SSAQGLViewerWidget
_height	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  double _height;$/;"	m	class:ssa::SSAQGLViewerWidget
_iterations	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  unsigned int _iterations;$/;"	m	class:ssa::SSAQGLViewerWidget
_landmarkSize	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  double _landmarkSize;$/;"	m	class:ssa::SSAQGLViewerWidget
_optimize	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  bool _optimize;$/;"	m	class:ssa::SSAQGLViewerWidget
_parent	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  QWidget*               _parent;$/;"	m	class:ssa::SSAQGLViewerWidget
_pointSize	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  double _pointSize;$/;"	m	class:ssa::SSAQGLViewerWidget
_poseSize	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  double _poseSize;$/;"	m	class:ssa::SSAQGLViewerWidget
_selectedPoint	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  qglviewer::Vec _selectedPoint;$/;"	m	class:ssa::SSAQGLViewerWidget
_ssaGraph	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  SparseSurfaceAdjustmentGraph*  _ssaGraph;$/;"	m	class:ssa::SSAQGLViewerWidget
setDAMaxDist	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setDAMaxDist(double i){ _DAmaxdist = i;};$/;"	f	class:ssa::SSAQGLViewerWidget
setDrawEdgeCorrespondence	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setDrawEdgeCorrespondence(int i){ _drawEdgeCorrespondences = (bool) i; updateGL();}$/;"	f	class:ssa::SSAQGLViewerWidget
setDrawEdgeObservation	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setDrawEdgeObservation(int i){ _drawEdgeObservation = (bool) i; updateGL();}$/;"	f	class:ssa::SSAQGLViewerWidget
setDrawEdgeOdometry	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setDrawEdgeOdometry(int i){ _drawEdgeOdometry = (bool) i; updateGL();}$/;"	f	class:ssa::SSAQGLViewerWidget
setDrawGrid	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setDrawGrid(int i){ _drawGrid = (bool) i; updateGL();}$/;"	f	class:ssa::SSAQGLViewerWidget
setDrawObservationCovariances	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setDrawObservationCovariances(int i){ _drawObservationCovariance = (bool) i; updateGL();}$/;"	f	class:ssa::SSAQGLViewerWidget
setDrawObservationPoints	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setDrawObservationPoints(int i){ _drawObservationPoints = (bool) i; updateGL();}$/;"	f	class:ssa::SSAQGLViewerWidget
setDrawObservationPointsCovariances	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setDrawObservationPointsCovariances(int i){ _drawVertexPointCovariance = (bool) i; updateGL();}$/;"	f	class:ssa::SSAQGLViewerWidget
setDrawRobotPoses	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setDrawRobotPoses(int i){ _drawRobotPoses = (bool) i; updateGL();}$/;"	f	class:ssa::SSAQGLViewerWidget
setInitialParams	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  inline void setInitialParams(){$/;"	f	class:ssa::SSAQGLViewerWidget
setIterations	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setIterations(int it){ _iterations = it;};$/;"	f	class:ssa::SSAQGLViewerWidget
setMap	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^  inline void setMap(SparseSurfaceAdjustmentGraph* accurateMap){$/;"	f	class:ssa::SSAQGLViewerWidget
setPointSize	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^      inline void setPointSize(double i){ _pointSize = i; updateGL(); cerr << "pointSize " << _pointSize << endl;};$/;"	f	class:ssa::SSAQGLViewerWidget
ssa	trunk/ssa/apps/ssa_viewer/ssa_qglviewer_widget.h	/^namespace ssa {$/;"	n
breakCounter	trunk/ssa/apps/ssa_viewer/ssa_viewer.cpp	/^unsigned int breakCounter = 0;$/;"	v
main	trunk/ssa/apps/ssa_viewer/ssa_viewer.cpp	/^int main(int argc, char **argv)$/;"	f
running	trunk/ssa/apps/ssa_viewer/ssa_viewer.cpp	/^static bool running = true;$/;"	v	file:
sighandler	trunk/ssa/apps/ssa_viewer/ssa_viewer.cpp	/^void sighandler(int sig)$/;"	f
importPoseGraph2D	trunk/ssa/converter/alu_posegraph_2d/import_posegraph2d.cpp	/^  void SSAPoseGraph2D::importPoseGraph2D(std::string logfile, SparseSurfaceAdjustmentGraph& ssaGraph){$/;"	f	class:ssa::SSAPoseGraph2D
importRobotLaser	trunk/ssa/converter/alu_posegraph_2d/import_posegraph2d.cpp	/^  void SSAPoseGraph2D::importRobotLaser(std::istream& is, VertexSE2* parent, SparseSurfaceAdjustmentGraph& ssaGraph)  $/;"	f	class:ssa::SSAPoseGraph2D
ssa	trunk/ssa/converter/alu_posegraph_2d/import_posegraph2d.cpp	/^namespace ssa {$/;"	n	file:
SSAPoseGraph2D	trunk/ssa/converter/alu_posegraph_2d/import_posegraph2d.h	/^  class SSAPoseGraph2D {$/;"	c	namespace:ssa
__SSA_IMPORT_POSEGRAPH__	trunk/ssa/converter/alu_posegraph_2d/import_posegraph2d.h	18;"	d
g2o	trunk/ssa/converter/alu_posegraph_2d/import_posegraph2d.h	/^namespace g2o{$/;"	n
ssa	trunk/ssa/converter/alu_posegraph_2d/import_posegraph2d.h	/^namespace ssa {$/;"	n
main	trunk/ssa/converter/alu_posegraph_2d/posegraph2ssa.cpp	/^int main(int argc, char **argv)$/;"	f
message	trunk/ssa/converter/alu_posegraph_2d/posegraph2ssa.cpp	/^const char *message[]={$/;"	v
AllocateLinearSolver	trunk/ssa/core/allocate_solver.h	/^  typename T::LinearSolverType* AllocateLinearSolver(int solver = 0)$/;"	f	namespace:ssa
__SSA_ALLOCATE_SOLVER__	trunk/ssa/core/allocate_solver.h	18;"	d
ssa	trunk/ssa/core/allocate_solver.h	/^namespace ssa {$/;"	n
calcMeanCov	trunk/ssa/core/observation2d.cpp	/^void Observation2D::calcMeanCov(double& distance){$/;"	f	class:Observation2D
getCovariance	trunk/ssa/core/observation2d.cpp	/^Eigen::Matrix2d Observation2D::getCovariance(std::deque< VertexPointXYCov* >& neighbors, Eigen::Vector2d& mean){$/;"	f	class:Observation2D
getKDTree	trunk/ssa/core/observation2d.cpp	/^PointTree2D Observation2D::getKDTree(){$/;"	f	class:Observation2D
getMean	trunk/ssa/core/observation2d.cpp	/^Eigen::Vector2d Observation2D::getMean(std::deque< VertexPointXYCov* >& neighbors){$/;"	f	class:Observation2D
Observation2D	trunk/ssa/core/observation2d.h	/^  class Observation2D : public std::vector<VertexPointXYCov* >$/;"	c	namespace:ssa
PointTree2D	trunk/ssa/core/observation2d.h	/^  typedef KDTree::KDTree<2, VertexPointXYCov*, KdTreeAccessXYCov>    PointTree2D;$/;"	t	namespace:ssa
__SPARSE_SURFACE_ADJUSTMENT_OBSERVATION_2D__	trunk/ssa/core/observation2d.h	18;"	d
ssa	trunk/ssa/core/observation2d.h	/^namespace ssa {$/;"	n
SparseSurfaceAdjustmentGraph	trunk/ssa/core/ssa_graph.cpp	/^  SparseSurfaceAdjustmentGraph::SparseSurfaceAdjustmentGraph()$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
addEdge	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::addEdge(EdgeSE2*& edge)$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
addEdge	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::addEdge(EdgeSE2PointXYCov*& edge)$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
addEdge	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::addEdge(VertexPointXYCov*& from, VertexPointXYCov*& to)$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
addVertex	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::addVertex(VertexPointXYCov*& v)$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
addVertex	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::addVertex(VertexSE2*& v)$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
calcMeanCov	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::calcMeanCov(double& distance, int& scanId){$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
calcMeanCov	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::calcMeanCov(double& maxDist){$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
dropDataAssociation	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::dropDataAssociation()$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
getEdgeset	trunk/ssa/core/ssa_graph.cpp	/^  g2o::OptimizableGraph::EdgeSet SparseSurfaceAdjustmentGraph::getEdgeset()$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
getKDTreeOfScans	trunk/ssa/core/ssa_graph.cpp	/^  ssa::PointTree2D SparseSurfaceAdjustmentGraph::getKDTreeOfScans(int& scanId)$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
getScanIds	trunk/ssa/core/ssa_graph.cpp	/^  std::map<int, int> SparseSurfaceAdjustmentGraph::getScanIds(){$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
linkNodesToVertices	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::linkNodesToVertices(){$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
load	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::load(string filename){$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
moveUnoptimizedPoints	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::moveUnoptimizedPoints(){$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
save	trunk/ssa/core/ssa_graph.cpp	/^  void SparseSurfaceAdjustmentGraph::save(string filename){$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
ssa	trunk/ssa/core/ssa_graph.cpp	/^namespace ssa{$/;"	n	file:
~SparseSurfaceAdjustmentGraph	trunk/ssa/core/ssa_graph.cpp	/^  SparseSurfaceAdjustmentGraph::~SparseSurfaceAdjustmentGraph()$/;"	f	class:ssa::SparseSurfaceAdjustmentGraph
NUMERIC_JACOBIAN_TWO_D_TYPES	trunk/ssa/core/ssa_graph.h	20;"	d
SparseSurfaceAdjustmentGraph	trunk/ssa/core/ssa_graph.h	/^  class SparseSurfaceAdjustmentGraph{$/;"	c	namespace:ssa
__SPARSE_SURFACE_ADJUSTMENT_GRAPH__	trunk/ssa/core/ssa_graph.h	18;"	d
_edges_data_association	trunk/ssa/core/ssa_graph.h	/^    std::vector<EdgePointXYCovPointXYCov* > _edges_data_association;$/;"	m	class:ssa::SparseSurfaceAdjustmentGraph
_edges_observations	trunk/ssa/core/ssa_graph.h	/^    std::vector< EdgeSE2PointXYCov* >       _edges_observations;$/;"	m	class:ssa::SparseSurfaceAdjustmentGraph
_edges_odometry	trunk/ssa/core/ssa_graph.h	/^    std::vector< EdgeSE2* >                 _edges_odometry;$/;"	m	class:ssa::SparseSurfaceAdjustmentGraph
_edges_points_to_move	trunk/ssa/core/ssa_graph.h	/^    std::vector<EdgeSE2PointXYCov* >        _edges_points_to_move;$/;"	m	class:ssa::SparseSurfaceAdjustmentGraph
_optimizer	trunk/ssa/core/ssa_graph.h	/^    SSASparseOptimizer _optimizer;$/;"	m	class:ssa::SparseSurfaceAdjustmentGraph
_verticies_observations	trunk/ssa/core/ssa_graph.h	/^    std::map< int, Observation2D >          _verticies_observations;$/;"	m	class:ssa::SparseSurfaceAdjustmentGraph
_verticies_points	trunk/ssa/core/ssa_graph.h	/^    std::vector<VertexPointXYCov* >         _verticies_points;$/;"	m	class:ssa::SparseSurfaceAdjustmentGraph
_verticies_poses	trunk/ssa/core/ssa_graph.h	/^    std::vector<VertexSE2* >                _verticies_poses;$/;"	m	class:ssa::SparseSurfaceAdjustmentGraph
ssa	trunk/ssa/core/ssa_graph.h	/^namespace ssa {$/;"	n
SSASparseOptimizer	trunk/ssa/core/ssa_sparse_optimizer.cpp	/^  SSASparseOptimizer::SSASparseOptimizer() : QObject(), g2o::SparseOptimizer()$/;"	f	class:ssa::SSASparseOptimizer
postIteration	trunk/ssa/core/ssa_sparse_optimizer.cpp	/^  void SSASparseOptimizer::postIteration(int iteration)$/;"	f	class:ssa::SSASparseOptimizer
ssa	trunk/ssa/core/ssa_sparse_optimizer.cpp	/^namespace ssa{$/;"	n	file:
~SSASparseOptimizer	trunk/ssa/core/ssa_sparse_optimizer.cpp	/^  SSASparseOptimizer::~SSASparseOptimizer()$/;"	f	class:ssa::SSASparseOptimizer
SSASparseOptimizer	trunk/ssa/core/ssa_sparse_optimizer.h	/^  struct SSASparseOptimizer :  public QObject, g2o::SparseOptimizer $/;"	s	namespace:ssa
__SSA_SPARSE_OPTIMIZER__	trunk/ssa/core/ssa_sparse_optimizer.h	18;"	d
ssa	trunk/ssa/core/ssa_sparse_optimizer.h	/^namespace ssa {$/;"	n
NormalShooting	trunk/ssa/data_association/normal_shooting.cpp	/^  NormalShooting::NormalShooting()$/;"	f	class:ssa::NormalShooting
shootNormals	trunk/ssa/data_association/normal_shooting.cpp	/^  NormalShooting::shootNormals(SparseSurfaceAdjustmentGraph& graph, PointTree2D& kdTree, int& scanId, int& maxSteps, double& stepSize, double& maxAngleDifference)$/;"	f	class:ssa::NormalShooting
shootNormals	trunk/ssa/data_association/normal_shooting.cpp	/^  NormalShooting::shootNormals(SparseSurfaceAdjustmentGraph& graph, int& maxSteps, double& stepSize, double& maxAngleDifference)$/;"	f	class:ssa::NormalShooting
ssa	trunk/ssa/data_association/normal_shooting.cpp	/^namespace ssa{$/;"	n	file:
~NormalShooting	trunk/ssa/data_association/normal_shooting.cpp	/^  NormalShooting::~NormalShooting()$/;"	f	class:ssa::NormalShooting
NormalShooting	trunk/ssa/data_association/normal_shooting.h	/^  class NormalShooting{$/;"	c	namespace:ssa
__SSA_NORMAL_SHOOTING__	trunk/ssa/data_association/normal_shooting.h	18;"	d
ssa	trunk/ssa/data_association/normal_shooting.h	/^namespace ssa {$/;"	n
LaserSensorModel2D	trunk/ssa/sensor_models/laser_sensor_model_2d.cpp	/^  LaserSensorModel2D::LaserSensorModel2D(){};$/;"	f	class:ssa::LaserSensorModel2D
applySensorModel	trunk/ssa/sensor_models/laser_sensor_model_2d.cpp	/^  void LaserSensorModel2D::applySensorModel(SparseSurfaceAdjustmentGraph& ssaGraph, LaserSensorParams& params)$/;"	f	class:ssa::LaserSensorModel2D
getCovarianceForPoint	trunk/ssa/sensor_models/laser_sensor_model_2d.cpp	/^  LaserSensorModel2D::getCovarianceForPoint(Eigen::Vector2d& beam, double& beamAngle, double& angle, LaserSensorParams& params)$/;"	f	class:ssa::LaserSensorModel2D
getCovarianceForPoint	trunk/ssa/sensor_models/laser_sensor_model_2d.cpp	/^  LaserSensorModel2D::getCovarianceForPoint(VertexPointXYCov*& point, double& beamAngle, LaserSensorParams& params)$/;"	f	class:ssa::LaserSensorModel2D
ssa	trunk/ssa/sensor_models/laser_sensor_model_2d.cpp	/^namespace ssa{$/;"	n	file:
~LaserSensorModel2D	trunk/ssa/sensor_models/laser_sensor_model_2d.cpp	/^  LaserSensorModel2D::~LaserSensorModel2D(){};$/;"	f	class:ssa::LaserSensorModel2D
LaserSensorModel2D	trunk/ssa/sensor_models/laser_sensor_model_2d.h	/^  class LaserSensorModel2D{$/;"	c	namespace:ssa
LaserSensorParams	trunk/ssa/sensor_models/laser_sensor_model_2d.h	/^      inline LaserSensorParams(){$/;"	f	struct:ssa::LaserSensorParams
LaserSensorParams	trunk/ssa/sensor_models/laser_sensor_model_2d.h	/^  struct LaserSensorParams{$/;"	s	namespace:ssa
__SSA_LASER_SENSOR_MODEL_2D__	trunk/ssa/sensor_models/laser_sensor_model_2d.h	18;"	d
angularResolution	trunk/ssa/sensor_models/laser_sensor_model_2d.h	/^      double angularResolution;$/;"	m	struct:ssa::LaserSensorParams
maxRange	trunk/ssa/sensor_models/laser_sensor_model_2d.h	/^      double maxRange;$/;"	m	struct:ssa::LaserSensorParams
scale	trunk/ssa/sensor_models/laser_sensor_model_2d.h	/^      double scale; $/;"	m	struct:ssa::LaserSensorParams
sensorPrecision	trunk/ssa/sensor_models/laser_sensor_model_2d.h	/^      double sensorPrecision;$/;"	m	struct:ssa::LaserSensorParams
ssa	trunk/ssa/sensor_models/laser_sensor_model_2d.h	/^namespace ssa{$/;"	n
EdgeSE2PointXYCov	trunk/ssa/types/edge_se2_xycov.cpp	/^  EdgeSE2PointXYCov::EdgeSE2PointXYCov() :$/;"	f	class:ssa::EdgeSE2PointXYCov
initialEstimate	trunk/ssa/types/edge_se2_xycov.cpp	/^  void EdgeSE2PointXYCov::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to)$/;"	f	class:ssa::EdgeSE2PointXYCov
linearizeOplus	trunk/ssa/types/edge_se2_xycov.cpp	/^  void EdgeSE2PointXYCov::linearizeOplus()$/;"	f	class:ssa::EdgeSE2PointXYCov
read	trunk/ssa/types/edge_se2_xycov.cpp	/^  bool EdgeSE2PointXYCov::read(std::istream& is)$/;"	f	class:ssa::EdgeSE2PointXYCov
ssa	trunk/ssa/types/edge_se2_xycov.cpp	/^namespace ssa {$/;"	n	file:
write	trunk/ssa/types/edge_se2_xycov.cpp	/^  bool EdgeSE2PointXYCov::write(std::ostream& os) const$/;"	f	class:ssa::EdgeSE2PointXYCov
EdgeSE2PointXYCov	trunk/ssa/types/edge_se2_xycov.h	/^  class EdgeSE2PointXYCov : public g2o::BaseBinaryEdge<2, Eigen::Vector2d, g2o::VertexSE2, VertexPointXYCov>$/;"	c	namespace:ssa
__SSA_EDGE_SE2_POINTXYCOV_2D__	trunk/ssa/types/edge_se2_xycov.h	18;"	d
computeError	trunk/ssa/types/edge_se2_xycov.h	/^      void computeError()$/;"	f	class:ssa::EdgeSE2PointXYCov
initialEstimatePossible	trunk/ssa/types/edge_se2_xycov.h	/^      virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to) { (void) to; return (from.count(_vertices[0]) == 1 ? 1.0 : -1.0);}$/;"	f	class:ssa::EdgeSE2PointXYCov
ssa	trunk/ssa/types/edge_se2_xycov.h	/^namespace ssa {$/;"	n
EdgePointXYCovPointXYCov	trunk/ssa/types/edge_xycov_xycov.cpp	/^ EdgePointXYCovPointXYCov::EdgePointXYCovPointXYCov() :$/;"	f	class:ssa::EdgePointXYCovPointXYCov
computeError	trunk/ssa/types/edge_xycov_xycov.cpp	/^  void EdgePointXYCovPointXYCov::computeError()$/;"	f	class:ssa::EdgePointXYCovPointXYCov
initialEstimate	trunk/ssa/types/edge_xycov_xycov.cpp	/^  void EdgePointXYCovPointXYCov::initialEstimate(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to)$/;"	f	class:ssa::EdgePointXYCovPointXYCov
linearizeOplus	trunk/ssa/types/edge_xycov_xycov.cpp	/^  void EdgePointXYCovPointXYCov::linearizeOplus()$/;"	f	class:ssa::EdgePointXYCovPointXYCov
read	trunk/ssa/types/edge_xycov_xycov.cpp	/^  bool EdgePointXYCovPointXYCov::read(std::istream& is)$/;"	f	class:ssa::EdgePointXYCovPointXYCov
ssa	trunk/ssa/types/edge_xycov_xycov.cpp	/^namespace ssa {$/;"	n	file:
write	trunk/ssa/types/edge_xycov_xycov.cpp	/^  bool EdgePointXYCovPointXYCov::write(std::ostream& os) const$/;"	f	class:ssa::EdgePointXYCovPointXYCov
EdgePointXYCovPointXYCov	trunk/ssa/types/edge_xycov_xycov.h	/^class EdgePointXYCovPointXYCov : public BaseBinaryEdge<2, Eigen::Vector2d, VertexPointXYCov, VertexPointXYCov>$/;"	c	namespace:ssa
__SSA_EDGE_POINTXYCOV_2D_POINTXYCOV_2D__	trunk/ssa/types/edge_xycov_xycov.h	19;"	d
initialEstimatePossible	trunk/ssa/types/edge_xycov_xycov.h	/^    virtual double initialEstimatePossible(const OptimizableGraph::VertexSet& from, OptimizableGraph::Vertex* to) { (void) to; return (from.count(_vertices[0]) == 1 ? 1.0 : -1.0);}$/;"	f	class:ssa::EdgePointXYCovPointXYCov
ssa	trunk/ssa/types/edge_xycov_xycov.h	/^namespace ssa {$/;"	n
g2o	trunk/ssa/types/types_ssa2d.cpp	/^namespace g2o {$/;"	n	file:
init_types_ssa	trunk/ssa/types/types_ssa2d.cpp	/^  void G2O_ATTRIBUTE_CONSTRUCTOR init_types_ssa(void)$/;"	f	namespace:g2o
VertexPointXYCov	trunk/ssa/types/vertex_point_xycov.cpp	/^  VertexPointXYCov::VertexPointXYCov()$/;"	f	class:ssa::VertexPointXYCov
covariance	trunk/ssa/types/vertex_point_xycov.cpp	/^   Eigen::Matrix2d VertexPointXYCov::covariance() const{$/;"	f	class:ssa::VertexPointXYCov
covariance	trunk/ssa/types/vertex_point_xycov.cpp	/^   Eigen::Matrix2d& VertexPointXYCov::covariance(){$/;"	f	class:ssa::VertexPointXYCov
globalNormal	trunk/ssa/types/vertex_point_xycov.cpp	/^   Eigen::Vector2d VertexPointXYCov::globalNormal(){$/;"	f	class:ssa::VertexPointXYCov
normal	trunk/ssa/types/vertex_point_xycov.cpp	/^  Vector2d VertexPointXYCov::normal(){$/;"	f	class:ssa::VertexPointXYCov
oplus	trunk/ssa/types/vertex_point_xycov.cpp	/^  void VertexPointXYCov::oplus(double* update)$/;"	f	class:ssa::VertexPointXYCov
parentVertex	trunk/ssa/types/vertex_point_xycov.cpp	/^  g2o::VertexSE2* VertexPointXYCov::parentVertex() const{$/;"	f	class:ssa::VertexPointXYCov
parentVertexId	trunk/ssa/types/vertex_point_xycov.cpp	/^  unsigned int VertexPointXYCov::parentVertexId() const{$/;"	f	class:ssa::VertexPointXYCov
read	trunk/ssa/types/vertex_point_xycov.cpp	/^  bool VertexPointXYCov::read(std::istream& is)$/;"	f	class:ssa::VertexPointXYCov
setParentVertex	trunk/ssa/types/vertex_point_xycov.cpp	/^  void VertexPointXYCov::setParentVertex(VertexSE2* pose){$/;"	f	class:ssa::VertexPointXYCov
setToOrigin	trunk/ssa/types/vertex_point_xycov.cpp	/^  void VertexPointXYCov::setToOrigin() {$/;"	f	class:ssa::VertexPointXYCov
ssa	trunk/ssa/types/vertex_point_xycov.cpp	/^namespace ssa {$/;"	n	file:
write	trunk/ssa/types/vertex_point_xycov.cpp	/^  bool VertexPointXYCov::write(std::ostream& os) const$/;"	f	class:ssa::VertexPointXYCov
KdTreeAccessXYCov	trunk/ssa/types/vertex_point_xycov.h	/^  struct KdTreeAccessXYCov{$/;"	s	namespace:ssa
NUMERIC_JACOBIAN_TWO_D_TYPES	trunk/ssa/types/vertex_point_xycov.h	25;"	d
VertexPointXYCov	trunk/ssa/types/vertex_point_xycov.h	/^  class VertexPointXYCov : public g2o::BaseVertex<2, Eigen::Vector2d>$/;"	c	namespace:ssa
__SSA_VERTEX_XY_COV_2D__	trunk/ssa/types/vertex_point_xycov.h	18;"	d
_cov	trunk/ssa/types/vertex_point_xycov.h	/^      Eigen::Matrix2d _cov; $/;"	m	class:ssa::VertexPointXYCov
_hasNormal	trunk/ssa/types/vertex_point_xycov.h	/^      bool            _hasNormal;$/;"	m	class:ssa::VertexPointXYCov
_normal	trunk/ssa/types/vertex_point_xycov.h	/^      Eigen::Vector2d    _normal; $/;"	m	class:ssa::VertexPointXYCov
_parentVertex	trunk/ssa/types/vertex_point_xycov.h	/^      g2o::VertexSE2* _parentVertex;$/;"	m	class:ssa::VertexPointXYCov
_parentVertexId	trunk/ssa/types/vertex_point_xycov.h	/^      unsigned int _parentVertexId;$/;"	m	class:ssa::VertexPointXYCov
g2o	trunk/ssa/types/vertex_point_xycov.h	/^namespace g2o {$/;"	n
operator ()	trunk/ssa/types/vertex_point_xycov.h	/^    double operator()( VertexPointXYCov* const& v, size_t k ) const { return v->estimate()(k); }$/;"	f	struct:ssa::KdTreeAccessXYCov
ratio	trunk/ssa/types/vertex_point_xycov.h	/^    double ratio;$/;"	m	class:ssa::VertexPointXYCov
result_type	trunk/ssa/types/vertex_point_xycov.h	/^    typedef double result_type;$/;"	t	struct:ssa::KdTreeAccessXYCov
ssa	trunk/ssa/types/vertex_point_xycov.h	/^namespace ssa {$/;"	n
